{"sandbox_archive_version":45,"resources":[{"default":[{"guid":[953679908,159793237,2165885860,1104393525],"revisions":[{"type":"kTexture","name":"Dot","revision":0,"autoGenerated":false,"rawdata":"051Rl051Rl009610096102BZK0KWnN0EtjeM-2)Z3IG5A4M|8uQUCw|F8}}lF9-$z0046*ldJ#$010qNS#tmY4#WTe4#WYKD-Ig~00MDIL_t(&fz_J5ZWBQiMvupW1}PN$iy%am6d*;Ao;dG7LK>igm!N|lWOx8lVG@)AQadivfeA<;k(Pi2L?Ag94aj^Hvy0bDEIhOJj`v8TwMM(XN8_KFxpPaB$cO=EfVt>81xx~mfWtrw_yK$bwt+Xm2JjmAoh5K7gZxF{2CxVm_jvv*@C0}Syz(-T<k~8d>KZQf=zX1BTy8!q>DiE_(>#yj3|0P$q}GVVV_K3Hh9O^;RLw~`O*M+|C4W%TYW~hWtVSMA@?}Z25VrfUqCTHMKlxB!m3~w;p!`B8!~d|TlxupDngref6JC?XXxRhK13PhtN!@Ut@e~K^buZbG9Qirynq%Cl01fCJ`P)HM-1+MnkNhm~BAAXlvp_Q*`D-CfJh%>a<PGo{I2P8&iCy4iypbr9I9T5qgZ=duk&40Yh>FOp0j5J+crs;x)1fUqIZ=}I6F3ms#DjK8sg+rgFu<?S5}vdT@IADJCv5|K3T@%Z7lTc~6_ITNY=yS)WXk}Xp)EYwEJ-S3SCvOY+c>ZboH9TMs0EgBr3Q53&B$^{6AzZ5yN7)V)Wf+rQ3smPy8*uw#>JVt@r$H<16a#l#f>!*>6vuK><sXh@k~7J0T+M|aYs61wgcSE)5w8aB*fugd9a6E4|35NoQLf9cb?9?s+*r*$u|kym#1>f&lmb+r0{1_$#zxwo(3)r;x(u|lFmt5AF=p)6lWkO7x}o&Ycwa|^R6ygY7Z`9YY&!yBOcFx10G{*51Kv#S>$8N*ktYH=sHce>SF>sGsaaP@3B=M4Q$m%CrjWze+IZe`C-a-.NkvXXu0mjf"}]},{"guid":[1260272136,125914301,2612360310,1584440831],"revisions":[{"type":"kTexture","name":"Hand","revision":0,"autoGenerated":false,"rawdata":"0G9v&0KfnM009610096102BZK0FMs<0EtjeM-2)Z3IG5A4M|8uQUCw|mjD0&zz7Ba000RT@iqVe010qNS#tmY3ljhU3ljkVnw%H_00Mn!R9JLaO-wptZ*4ANWN%_+E_iKl00971R7Nd009Z{-I%98bE@5PEVr4FPZEyfMjh&R;ZksR^fM3OOZ#HdUObRJhS=Etl%>`T4M(S=I+exefX0}sEUu_qAq`krn4Xo|7Rx1+7KK{-hKIa^tv^8Zn!h)q(%PNJxe*A<$@)TZ2d63tc*vRucEw1jqEZE%*OE^6F0FGPImUSsC1#MYWhO{Z9TrCB0>rRXy=n;F9!qe^me9JFDrnCT&AA1ZRhG3fbI1ZBV@I43vJVn72;fWVu62xSZfc*oVH_cb%a`tKO%k5IQv9=}%HBI9;6JO~y!by^#AVgv4Il?o$%F@=W%)ww`CJfWEwo+A~+ta1m+7!Yeg|Z&aR>tqs@tG=7OKXJv01Y5#BUf*A(L3i1i9(d3vc|D^Wb2Kx%52m>OpnKp9JomG{P|eQa-@wtyS2~LX0fXUx)erjH4|sIF3f{Yy(XC!)GEDDsu(WnVu%T38F+IoE3O*z_5m(t?oDABgn<`CUKlNKL~uedeis~(Ah<_!#pP=EH##L@M54(f)D;Y;mc9scMpjCf)TJv+x)!Le))0(8kz}e++BtSsCJ*KFEW6NZB@1_8E<b++^Rq0*NgR8jkNX(%oXjg@X~o2RmO>}-rQ{^U(a|(wu_y2$?LOFZRkrk&G^Cg><0+$)L4T&$wkv=^pZ}-+S1nxw(&E*2y0+{solE2Hbhj`2EAf55DkSKOg;3TtK?+%aogD7P^3{LfUccFh>e;%u$BbIphH7!Tc3Hkqb;yN|{$zokCWxLi_8@Z8qQ{3Z<u>D>6P258+KsW_EL@R73xY@9000cQNkl<Zc%1E>FPN3Z7so%lkC(6p3=lB<3=lA2fFNNB8YEzVpg{rz3=lA2(11Y#1Pu@*Xn>#r0tN{ZBw&yLK>`~vNPr;04c@>T_7~2by_em6XXgDg@4x%~JkNceg?H{d^DJM^nK?6a&cfQ-8UtW2a2i+!b^+UGo~;5;fxEyJ;CbVtn^P8gF0LEE5n!pncgDbN;Nv7C66^F;T)zSD)$pD>z~LI+Ber0%?Ew_zEbx+ggaz=y<b9`WdY_n~PnPRfObn^G4SbmJ{c}fO#PuhzuYrCZ0q-=>&s@+4xA=f&gvF$v2MzT#c)BjGTfqLvw%N?*1r~Bxoje;){yv8NlYT`-x-6~}z|n|y8787jz_!U}C-5fl2Cx9U5B$zld?AhkpA;Xmn5D~eu9v_lqTT1fw*}to+-%Id7Ye*rY@n-_>lXfheCPTWC?+g`1C#H>STMQA3Ut+S`3B|O;LeJDoC7WrwqUYeCF!E&`YxhPRbhcyuj}|NSO#3Hp|825i<av@^7jfe;8RQ#b@4awKhN_FTO^2rbj@<@!oLaqoO*=?aFVd~5+&%GxXyc?je#=>`n-!R4)Pcw*I0_KiOaVkJ;L_?QgAiUZ(SSZb4AzYTzRpr40s3}OxSm5g{pa1LAoZcyuplt*Aw^c3))ItCFq)4Y!lzSOOyH%NL*9KZ4Y2*NL(Tr5|>DZ#3hm;afxI|Tp}3~mq>=hC6Xa=iDXDzA{i2wNJf{$wLRP<DcV1*nJ$S-3=D}&Btzm7$&k22G9)gM42er5L*f$2khnxLBrcH*iAy9y;u6V_xI{7}E|Cn0OC&?$63KY2?Ewsc?O2MX-B==%RV*XV{Wb^H1thL=d<1+!IOX^%RvGOx=CICVmr^Kg2mZ}@)<g=W$5>I&t;m22m_RO5tiGdT1uI<jSE<qU5Q%GwPh5_SxZ(&tegckHd`B<n(u96B+$1S6qNyq@u(B`DYIslQ>5{nSiCtJq^ca?~Vhj&3%l;C}!1xjq>2JWP1Y@jBm)s(>o3`=^w&H7&Rjl~cR-6L9#)KHlBh2MKsyMD%khrFl71vgk&_=|&(7%8^Gk;#j3d0u>)kZo|lvHl9JWf=1FyYUB?h;>qZ#VG$<mVrOdsGt^ScqhemTPy*a!n~>xia7;;Z@%ataf9J6&q77#1Y~;RwblyWVy<5n7DAl$H1}3ccu^)SW(m)iQer+;wsMDnA?lxHff79#PAWe;%pR&E1nE<FDoU!dmq~ZDw~fYV_K*C>EyFY{JaiqyDGL`cr8d=ab%c4s#Hw7f(f&zz-AW>+km$wpEo9dzCygn?iK925}MFY@lELK>fg7;wGmelcMoy97x#d72`?Ugz-m?|N0zHuR*7?~&i(Bqep~Diwr?4-U?&34cVnRpUxCvoB(CO(Dfs?^R|BiDoWxvcNMPU3{Cp9!+G~@~6W~v*g09<UdW_B43L&>Rr3ts_@cq)qz~}gDK!$jRKM<Q?$A`*Tr#o0ECWtIoJA_<a6=8wJ)_m4$M0vOO0rsEcn@~fEs~u8rEZ@iGY$-X1xzAiAu68IAge}XL4fL@O_$Tk7#MKT>9Cg0gKpy}*$Pt*t)ecQ%jxOpN-A;hp4Tv4*4s1pF3KG|_iJjXyLEUD0Y-roe_hUr17q~Y27hMw9JmsNp>b^jX`(4FOc)ZT$6C4MC1<b|9{C-X_bGoBT;u7@}a*NNgJ<6X0?T%w7TVn+F!2KX`4I7{3$|!ciV+C`SA%U$2q9v|j6S7?Imw0E41$zJz*U(83@>s!6R^$n6gvGxku7Q(k;cy1O^~ylv66Lw#c{TzbOI)HXzU`$Euv_91Rq&;S$|NpP1@8vD#3icmyYHbg3r@L<Z9$FMe90lzh1I^}-Mf^yrkt64L_EGw$4G8bBtzm7$&k22GBoFEhgGHr^foe>#e>Av4!@KB9%k#vEsA7FTp}4=5?9-K=tXgM_#SpiTw-8ITp}3~mq>;}5%WQlcQV(JxQ5R{TOHRat|jc&hf6y40=p^lqQ*W%kEkN9Wh_V2GJz#2w$1SnOKSF0g+4`(C^MnIjFoe{hm{@)2@A}sEn~H9UIM?A=vVZNBH}uS3F9o)HdjZ$5iIqgL^fbz-C|6M-ZC7)tl%Nq&vGMbCM2%?z#r68em9RLEVsZ`$4^9$@wvsL*gtwoVa+m_b4<d>vs}x-tpe}yr8q27HB}6VJj)eZfXE4Ih0WDc-RB|GT$^H!*h*Y~M|{s&s&BCfu&<u-K`d$5=S&m1iaB7TxV|A=Ss}xY>29M~uJfyyC5tJ3BnH4nah(ga&wxvm%Sh)qNn8nE(Q{_SbuG}=3G1sG`n`!2Cz1slFtg(F)#1yqTncpv%W(&|fCM&JoVZR0+GRwRK`Y1w%9Z97-N1X|#l^W!dD>*uYq2)+4*vRsqNg~^wJ*>vrn+erE+l@xXn{p++a)i8?!peK`HEr*_eBp_#43O0kx?z|P=vP|>PIxhB6jkjE2Ny;iH2DuztDC@^Bc}?^(Y3wBKZPp>m-BR<3L!%e_Elf_>)$T17MN#Rou()70uLv771Ad?t7k(2=6(jLhiBWEaI<%Fv5;Iw?T&7W3O=$df&XO%_GWkk3GhT%NK<o0Z$qjOCEcegZ!aG#EHx2en!~oRNs*tAvUqFwzhsC;a~h0Q#0&nvk;Dbz@ItKUMY!pDdJ^$FA`!C8^z^2{N)N`hYl7B0c^gYaWdjNmlKRb43LfDx{aM}_c225QADuSrP#xSbHeWfzNmjVqGy!KLmzV)<LlyM5%WZzxb6c#2fjPP@^%TaCB76&#|XQ}y}<eUh9ibVC~alT`FV*;Y)MF553#HFKI9(7mc%67{g`kr`Mto!>cbI3A~u`zp@=r;Q0hrBL#((~2p1<%a8<lQkv#Or3A@MLSOPgA3RloL7}4e|$|)}>F0Q|bTRqA>ic+<IVpfm;L#HR^p0br<V}h%v$xjs^=76%|dIVe#v>9O)IK-S%rN;G1;CZ0UF5tTgeTW`YwSanzdpt!rx4jr3RmHUe{19j}!YZGM;o-e4R#jX8pAzRDzptS$(Je}yL@i28aP<Th!5729JKd>ETu*^3fi@%JtD%X0;0-m^B`$!^2<Q5edmI+t($urp`RibW6<H7Q7TrubCyMb5Pfp!BEf-9SPlZr$br^WvV%?U@@r3Z?{W@_syhV5MiRWqEmdmjxqK#IM{U%f|>QO3jL0rm71y}paC!S{+@L?*q=!kKTH?d<pqF?++{+)?2@Oo--L0q}JgZQ&bi*B)mi7Sr`*p|{QI%4Yi{F;0eqE3AGBr@#2YqHhiMjjIgxM8^|jx{hAQJsIt-&Y(nNs!!>xFF6w9-^80j-os}FmdIvo;$Y*x9IpXqRlVKM<J?mE%1DO=cP$;UBZq>``C^I)^(0}o{fR4?hj46MMq4BhY6?86wPy<aMHg8_d}DG%kf!6n_J08A<E!ORhqFOoYaQ6t`K&QODH_iHO}HsG?TI6&}bWO(Gk<}hggPb(LTP2JlI9)owI+@hUIdciD+{p`6xsT7x4>g%of4&HZ2#}xvu?zHg}1;!Y0xY63Ketbe1+P7r+6+b+q5Zzx)+x3Eg`blXC*5ZOa9AE+}-aUKP{Y;V9vi`<7M<+P7R_muf>NB6P8~9exZvALE%jcfoQwUJ@>Oe2j4M1yK)w0PlL9XV_)vxAGcv!E!l{N3;q3PZIU;HGW|^a)kxm64y<_F|85WdrZwT;ldRe5gw#VZqea8E97_|3sH#riJ6|P0&j#~)FsR1I1tfB)+-JF5Ej;^ZJs>3D6Xf3llm^9q`r0YjIhVZu+{xa%nQ5d79IZ*PC5P)aSH+ACuS;=VWN5`_N864T#isd(G0sgr>xQC*@taNhlB<8`;HbCbX#1mplIIqkeeHvMH}2@xQtCLV(T>pC-58TvRiccGO5h+9CMLcMf!OUix<YGad#8=hebQ;gSa5>?3ZJVS-tzzlcp(DEw?Cjm#&E!-x3zTIzpTabY$3>x>85Z`y#HG4OCGtm4pS|o^#FeGj=sCbUa5?C!2f@Q1Oz?Yqbog87^Uy`16DVeWDy0=4N+>8phBU%jLMhG+~^qSiOv~#ZWE6g8t08w&EE!IacZ8YB)D|oSKg__04k4@+NjEU_ANAk`=@K&aPr7NozkR*JsPMkq21Bc~)ean@w@Qmk|~dyaIfivcvxa;()H}usI@h.NkvXXu0mjf"}]},{"guid":[3420273076,1898989905,2838226766,2988281017],"revisions":[{"type":"kTexture","name":"Circle","revision":0,"autoGenerated":false,"rawdata":"02BcL02BcL009610096102BZK0K^^u0EtjeM-2)Z3IG5A4M|8uQUCw}6aWAL6bJ?Y008Q6$$0<(010qNS#tmY4#WTe4#WYKD-Ig~03LQpL_t(|obBCvs8wbD$MJXDaY&r%q<BHf&@4sMDJwCdp(X<@6VW0nC}g@ZO*2E&G|Yv$F&Cz3VrKdkH8n^B6;X+prI1~iz{1QLP0=zX3-N-cmKcfn`{TQ|+siq}=eyRk_PXrP3l{wNxh~IX&i8ZHUi-VA=cGf24k5L7Ixq|v3Jd`T1A~Bp$-i|0rvj${-vaspCj;LE`T~8D^Be>Y0AB-N0sDb3fiHl)z;57kU?;Ex*bZz1wgOv{f0G(JNr6%uUBD>dY+xiX0yqm84x9<}FK%c6>;papHUpmkn}ChL$G`?GjHKceDAjZZFb)`-Y@?HHaFK(`U^}or+14i88sM`c2PJ+Alxmm=TmXDK*(P9jBz3kMSOxqq+1>+I7CIt1Aq7e~jRz(H7Xudo7Zy95(s&nG0lWh&2UZt5966Q(r5w6|Dam$8vh^!;MCG?1cq`eKC7YhZ6ik6qoMFIslI>F9ykdt_c^?380{>06EyWI}GbvEoYY_0=WV;MFx6skl*N4Cxz-!62qtMZG5Cuy9`T$oZ+f?j<s<h84U@7oQvK=gTIQ6DL$<H`oTCz<ocr0R;0!xx@O~GTSB?U@+Gk~jrtFflCvicl*&af5hX5Ef`G}xK^+itA;^$V;U7Oac*6s)VZ3+u8Sh<%hBjCJ7-#hwqH-lm@;jm^MIz{|j*g2z%T3Y0j805gGWlC3OuV_m2pV_m76urAfjSl8;loUYp+>&_jHb?c76x_8gUx_QggL-S&?EyRLVGEksoGa8tcY?BKf%V*eae6!QE*?GFX$U${uFs;tsW~c8stoye}ZvzXGZGFLGsVoIbI_Cp(fZ13<6k#RSJ=*LfT}5^KFuJgZ)y+=e3$X6sBCG}G11|vY7c_>-QlR)u1g-<F#cti(X*Jdz`VQ7D`fi)A-)<LTUBVY*UBlzseEki;^T2bc<v*ALCCqr>`ebWYknE<_0ov>c-QT8bmrXxf9mLI!;&wfU*#JD7Y-;sC0R>9$MgTVeH)5aj^R|Unr{|kk_op21JgmF8*=ani4cA-)JPka9J=~UVC{Vh08gNsxP09IMJ7{%uzJYalO1N{euH$A0@}Qirw+whH+4kgot;$iL9B&SAGxjxbUJlag++2!1P?hW^U`>S0&g4G5@1Ds*;6K>ITS+KTS|$OvBwJpyo2{YMskt<#YlxXjt5Z3zkE{EDCzEY?PS>au1&Vcg&P}$wz5-r^b!EPUHI+&G49B{bufn>R^RO0}mux$8x<(~*dZ5ezzK1oY#kLK*EpB#VO7WVV%rmj>=GYbh|E7c6`8zdGh6A?(w_)#|#I&AP$K~6R&n<CGrq$s*I`X-<0*?bv(1CZOofs&yfIG0y)-k=0J)oP9-2zMbjm5g1=V0B>F)aZe!~U>zj7|!ap}?KV7V~y@CDu*(Jk|sy)iVm~e!h;lE&tnqN0V)9#PgO`rv%Cs!1uAgMzO4>)j_EssfSUtI-+B?`p*X*0bY%G&Qhv-pqvEUm26`oopTe`E%`K>q^GXNVcpR;VBOL&tOFiSw%Qh5ode|@;O=CLVGpei$z_qwDdjeWR>$;dk<R&0vV9cke5F#?K$!;o5SSk6d@o>KkqaZ8PpV}m);&EZ()ktx|HK~L)=C`%<qqJ-#QBJ`oK`1fUbCA?HT0*|Nj)jT`PKn{$G!=wjXDL&0N|cv%eqL`PFkIh`U+T%G?rFp^}vkh+7CRKY`Zd^s}$-IDC2;iVE-d$wFv8W?5O?$ahrv8S;uJSp9lPn8a(8$L!ev^{FLm^OEzQOjgQkIJp+>2P^{bfR<f^fuo(C&@Osuk6{+fhavg9VHdSC23$V|!wR=b=Z7~gdc9->?uob}lSfgYmRXI>@2Y!Yv&ydzuTAhqqLP4?^LaP%y%lly)fxiI%iZQ5mt7@R!3;Y~=5S!MkSoh-mC?gUvv$3x1D>9s87w~7`fhZ$tqpAf;U*MO(FOvT|jYG6L7S}}@m&lRE(CW}WDdjm10Dl7hnEc<BP^CaQ6$_L5GMwWhTAhj_d24oRpOfJn_hX^5H_C`|R+T^*0Q?&GQHFCY!MYO{M;VbwnCV#8c9!Wf{sH`+3iPUcqv!zy7=(q%4>FwNF{~?5A91AJ7Smc&`i_+6_z^bY_V2M(5=yJ=cPN8^-(nBB(%40-6R}el$&zyDN2`-N?UxCUVD(ViP$_eu3;=#d`a6>~Soh()Xd@EIZZ6i<opvVv{{wzQNk9ISHBe5)Ztv1QGkG2BI@I$LDWmCFclYHfkN*eu7@%|yYRecXeStra{@a}AuqWdyqK!x-zKgKm@#|6^e?RamO7@j<83X0F*ezWe|H8TqH%1$cNPb3Q-QKsSJpOlBy_81T0_9$;nI}!t+5=d3VJSabiu7Or*7bdFienF8O`fIcs4Y{V+>Ql;_X+p`tnuehl<f9TBv4;07=DTWkLfNfkV^6HPowAoB(B45{k&na7yBIfI}|2TT?eq=;a}l@&^iFCowUzlqAEk6T#h}Q^1e0Pyfe8!`iMk|(QLE#{&5_M)lk}RjiM<!P{v_jpQV}4L}4Oz)C?7`i?CWs+ussJk%2M*Yw$@k)7k^rGZT?I`V;9Mv`)urD$BGUnG_i)_mFN5*neRUZ}rSX>goXYJD%o2>s+k13Q<&`+(Eh@`Z=u6L|+X{-R;7D*V9Y~c@ODdM9id!K$(WEo8w*T;&trvrJB~HQ*6Y3=e-kG_rq!|%ajSJv^!AF!RChWF2c12dpAez^wMcoV88p`B{s%jwU%XaC%1M6%1PMlRo;iNyRf&0^`f72s>N6hct7e-$7(L^G?Z@b43xV_w{ZD`XbJ+6c~~uY-Hp{=TeK@st{~kH^%&{?BZ}0~gQQyv`7W}}!XK<1fie`Ean1YOWC=EHqh?wYG5fKa@GeL<2CKm=>jedAN1)t^tySXj5jLT;=71GB+B&Q@K5`y68>_`!<sB%q@c$5puw^dv5LTpni?JH<P8Dz`*_TW0Ri1$|9BZx_;ymtQv~G^bi9CeWipLPFCbKT=-lIGN<yQQSHLv3Tk0jEm9>!|MV;WYQxyUO}W&pQ2kJ*YX6QJiNB4O5HHM7-u+-+EmMwdsR3<SQ1|B3RWXyI}ZulZQ*cnrmAbYSek<Pj)y@jv)kfd4;=h?qyQ8uFM$y0`s%6+2KS;UDB?tXXGU<gti!ifvd8ZFU|v7pvK5Vh74Cz*y%oPvCFV5s{-U!D`84ELOA8#0-=<_y@NLcs$}5L^|2ySWS7{g4J#mu>$2Z;AWt|<CvYmzwtkz7Lo34#cFD&<Cy+f?Vc860I>q)CSa!Xn0fdgB#B7x7T|w7e<oJLnZ*c{5%>qQ98F0el9zc{jd|RJ)p8~=0_6r^iu0H!fwd8?Eh5KTi`AIN6s(pr$r>o*fg7F2ynz3Q6%n5&v0C%E5v%FcvIffa_!bu01N;Zrm+`tH(z|_Ft?h9fGY+fi)UpK1#1t2Q3Rsxonj#WzAy#u9*JHJvN|r#m4jARwe-r*6PDHYK3ah<PqsXxEdfGraAGp?e%rn5Ul-CoHbe3VY=W#7o<8EmKWe&c(lhwe}DX%3W**uNaV5m`~?4C^%D5LSu5&JCug^ENZjx|^fdd$XZ-6c(+%)<8q;7a^IjEKbbELMx5#*$+GS#O{WNpX?qfDO)LL?o^a_!nNEg>z15Z=lQsCOh_jA9&t*4H3!5^H@!WnvC-uJ#U~~<J|uRbax_B78~$)&$?>f6DTvBCtr`|h!rWD`B-g+x(3ID)}BDQ%CRrlYt(uHP^4Ve;-5Aoxb{N>WgKv|V*uOGTqh!BwE*87&Q}xo&R%GsOvAU@*h1iK$NnPHK5yfDr*1fbi}r;CN}te^9pOdi{vy&|-Wr{TWkIh(0_93zs^h|oP@ssE-HZ4pw4RD(L9aps#p7k?{vuKgZ>?qyltK9JPSyY~IrbNk;=F|K9lNPmCiLh;f%08og5!cq@ULDbBE{H@Z;`zTSSIu+Bv3*fL@NM_RLv5sc0;8OlwrVSjtjj4EOqQJBE?&Z)o!TEux#j7Z-Me1;9SRrJcAOE^6=E|xmY%I>qLPPY6rSI5vi)BSPh4A2TB)kspA5#0jnJQi%5B_!fH6wrC3HBr>8)f0-Wc#fM+lwQa+v<K93$&3+*jXLTv%waO^K4<?{ws%b{F>a*5-_{{=pD>@Ona^C4Etp}Nh8?gC|ePdoR(GYAnWFK?h6w+?c5fiel`7kJX$z?+Uih)8+8iPdz7eppr<rMp16*fD@*zz2@~MWnnwz_+^Raaqw_pj_lQp_UdEsTWU8AD0!!2FgU>LdOZ;a_lQ2<>#sC3$e^N?ASoLz;UwG&Wnpk`Mrg29ps}j<Jds?w&O(0f&GsCMWp=pW3?UXsLaR`DDOD-6_M)j)OL@7at6N1lvX(Q6_M)j)b<1{JAk7DWgI=c@Y9Wzz`Kr%ib!?5i`96DE{<5U=g2@A>$u>1j(tU>dOS6LI6Kk?%Kseuib(Z%YP{P(8J*L`M5KB=HGVidnt{?qc%XcSCQ}lryH!}NhZs%r{IwY<qkzGI2d^Rg1tJltrrm_E*)tf+ki&s;w&Ox;9s7z%b$M$2Y-k0_$eb=BBGu)o^^wpDlo5^t*E{wVk?Qi)`Uq$R%2|O2?RH*7M5=2&;m=FYf>xjm4?JiCu-!Q*5viu_Sj~qR4i+e<17`*v^l^$oiAZ&Y*8G{k=?!e1(*A)5ZA>*J5vi)sn(q$`YXCzXC*R~BkBC&5r{;$?fFX_pK5-64M5@hG^FtbhcgO;4b`C~Fs?AgLgB!r0z@0w_KJ|}BL@Ml4toB0;Y5)TRcisZ*OEn}Bsj7X1uX#MM`L%I~t?9-iA{7@}`=>VupZ0NE%E5?8wT0GxR|7aTaA$SMigc#X+CQ}coD#V6j+BEDk!lOA{Zksiw*q(GnQ|~9Qf;BN|E&hlFL3A3uZ~2dUP5cXUjsNfaA!^XDAJiiYyad1@Xf%T_of_-h*Vo>?SHcY^bOqki<E;Ak!lOA{k{#LPvFj9rW}ljR9k56_i3DX9}$r-4d7tlzM)?)i%7kM*8af;a3FB!&;~dWsh7~&KhOZa4%|7kMPEefCA9XxZUA2e?i~6Op@`H=XzhR10QLv&96HT`h}27H?eA|8{*_SZL`))5FQK*nWrOghmC&goMWkLrYyXP|;cc~^$*e`BK0<4MZ-ej`e>}@=h)8{e*8c7W;jbop76cQK`UtK4&l`kKp5j@uR7C2bKUVu8b~Xr~-p#Y9x`@=nnS_6ByrY3{^6BCJ@rX!;d1`)p1K;u(XE_HWBGu-p`E3n+3wVui4n{<(%~SJR8~BzO9qAvBh*Vf;&F=%YG`}_uT?GB?R6`PxstT?7Pf5Nu2G|^U&?wX~E7B<jV>KUQGuVu60G|XN)CG)o4oXC-X*A(e7kmP(K-uKHh=|mmr`9(?D^NB%4jk*)S467IQ|lX{6(}F)bP*A$E>Eq046Q)fKzPUOI5ZukNZoZ|wH{(SmLZ1&WjC-s@Zd9m39g}uNYzZhYCXhyl4(#H$NWD-ecQ3Gh*XcK#t&!5k%6){r;CY5^>}LhaCW2(lnWgDib(Z%YP{P(Swr}AkQ0Fm9Tyal>bMZA@esSQ>;R4ql+S=wj*DL8*jGfV!&BR<u<QVi4itd@IZkx3V_y-e4o__#l^IzAWfIWOvA>9vUq7t2L-iUc?>SC19=OD@zlfCIC0K2TIw~`c4V0C@yUvS?NPT!}`dutD4m&nb09H6oIK{EAh?JkFrjN^t?gHf<=f%%+>@OnabsoMzIW8-@3zX%+{=gG<0hc-kAR^^;Dd8{v?#Hs?DBT6hYTzx$Aim?+S47IoQ_F8*S#gx^0;RdLXAtK)_7{=zITwGR9H*y1S>`zLFyJ!B{vuL7ml3{(G4zlTy#>k#j+1}av9E}fkEez|z!@mJfj6Cl(WFZv)ieQLpu9;BFB10@C;<O;Two9|)v>>bl*d%8hC}t34JQhe4;>e|(y_0Il!vEwKO|+KYysYIT<A)4mm*R%Q}G4L8(21UtG7S_c+GL4KEO1`{vuMmX;|%s>NOKW0>v}w(llVWV}B7T&TxD;0jtOuC_8|qjth<hu6FD%BE`9y@U?fqvS3GVJDey`0A6ui5a253{vuKgZ>^p%3qk|MbC)s$xW=)+h_v4|SgnRyN~AzJ2rO}27!)WXW#_HYC0G{pDkM;vC)@0}_)K83V}B88pUGH_hT2TvO+{#+tN~tf3}6T_%dx+Rw9hQ8Mnk>C5o_=CCNxk0UUuvYHt4a=V?-ohWAXp753YSrpezDjbnHJGnC;kKMDjNqtIbd^VznQ{6DZA-d&~hwIgb&Me2l_s(!*8r-auIhyzSWkeBfH=HAEyI*J3pp>TRs%gLwmG8?eB6%ysB4MWkq>uv+w3fYp33Z=f_UvevQxMBw@q*AbC;uE%OI)LQ&E52*rWJuu&S%=P%*84!_p#^L{?J|C-fmo$L_@B*;GvHy7B#+26*k!)_nw_foEtj68a2Fm-u^Uh;#Kued3wA&P{_B@`)YTPYtpa49F?=EEoa8risiHP4#SnY+{fYo*?SpsDx@T~KgoAA9uAR_6_#Q#V9S**5G$r32diwE`iCr$%y2Kr~bu88!mKUQm}IgVL_|0dxmSp#J?@U-)oIlwI$uPY+Gy9Iw&?9+6!Ua?2kKmm9L-_oUEKdfFH6v@X}{C~8UVYQq|j6m50JmoxQ5->NywMFE3bFmupcnYiKOkxBI*kD{e|JV<$Ia5U9nuY(5^+NnN1>K4jD0_ha0Q(%r3<SOh42?7fkxn-htEqvGWA<USyC=o~Vg(9VXWf&|V`c!iMI3`jC%X;b#M59ko2o0eJ23+VY;c|z2LWzHD-MceH4UpJkG1%30(uoYP?iJpoW~3Y?!Y(4rHHf)!D`66YUezxW}}H6C}4y1zV<u|xHE^bh;)KG@qfXw0RJEV6Urk{b^`wfwmOfy6U{*@;x!xpALFf9jqZ#+m^=anY*O3DoyQCXz7LFvKOB)-8iUo0_nXqkaZEhzkyoGqJb{13!7G5fau|z99o>c1jK>nJHgl0@plk*n!#O7<_8;l)_`?yYmAmo(@!f{iq-PaSmplUn?7`2Y&SOr({$ov#KOB)-n2y!RNzUUQCB;0k9(e}}*bm{IgZ3QYhv<2V$g##?wQ-K~xcT`1xVyC@P__b(0PCE`O#^-m^ou?sk!tFP)r7YZbRAZM-fv#r+7T!KuL2LJIPMPMp2%Ynsj7Rhn(%rUtHIp0D^S3GsE1M<cMqECKx8iI{<uCwx<BTrv@=i+VL#kr=WzpopP+}d(z&K%H88+=++wWe4n-eP584?h03QMW#Q!{H9Pm@%qUa+MDYuKT-+k{wdF!xR`zZQ|deQDc0c))JJFwq*+~vT1z{uz$5-F#V*zf%1&g1rDHRf$B&8&z(0c);#FvW4#0YAfk>nBn*1F+w9?*ivwwe?us;e;tFP{4lZG;cfJ4*VSG8+SM&rO_Ar9lt%rvGYjx$2y8417#QRH~bH20qzBU5qCHurSS{wcid|+R#Us;4kuiZfdaO$&|iTSDUSUm_W4qzPVU2gx4l+iwd7fNFS?=w1>kkyeqf{XxV|V<q+Xg~;{7<k5v!rsqmRg`41of+IP+id->RJo`~mn4dZr@P)ff96{sZ<q?Xe51ozx4Q$8^%6Lv8DM32`s*C(?z(1Hhjt@bjZc3InhQuxXx|9KfEpJP>t68I<J?rRf1IP|~;;3l#OKNL7r)erMB!30SR^CQP7wcPL<YCx0OQvytbp&y#5$^oq30McD6nnm!Y--|=5zcPXV&#y|o49Qk|TM=6hg9ed)P<|}EDyiLd2>AfAWP5%IX4eX6JqDa0`^Z<IW7Ymd=zz<R!e>pH1o4hyrQUM|v%*9^x^S+zY^nX}wlrBu5ymu%~gMi;+Gkd483+ozu5dXVFA~E&DrXRS6^skOQg4M&0NMnkw?12InD!(S(ol4VV*vnGhx12>{7=z8UmS%FKrskbVX~P7n5h!4Z{%g`dQvrMP@}KCrinP~sY!28g>v#VH3zO2fL{ueEz#i0Q?Tq~hn{X!0%yA-KcPE>7Lg^#j5B!mmJ~KI1l>!A??e@PQeP`?;Y)ZU`(MKT3#~5tQoV)NZb<uPH>ofTyCHrc)H&qLirhBpO!YuQmyox>K@-Fcq(wo`Xmk8b!{f@K?Yj`VF(^`nC1`60*5kDhaXY5vNt&&IauW%@Gq#@X%<#*y=YxqbTv3GO+6=P8CR^>ne>oUBL>~qa7z`hA;`;>W73)8S~aAsvZ&kF3BNhx0ROQY(60@lR#Q?k#BzZqLZ`f=K@Ad=L=P~bM;R$zF>b1lZYy9=L!Ad5N#3Ru_SPl&UA&m!R8<h%x~RNgG$d%%nc=bDGjv{vZkNHNqUP{1D0HaiisE?>G6`yY88ur}klq+Z5if4JrX12dj$Kdnyg()XBzs8gUc-GOx_##m^5Iq+n%?Tc_esjmLOEy*@1!ui%=-P?uCPM?=L1`60ivL6y}wZRvF{{RakolmM|CU7$_C(`*AV_n;|`x2n8fdbZ@*z8n{VGr<BvMq~rPARu3z)i_^TBLI}JGI-oqF=kzIZ(j56q_B3F+KtTYyzGEo~8y5(WG1BfE$4ufDw_-xsFzcc5REU?t#*D1=hVdJK{N41J5SghKT2t;*0{WPqy(9&pRLM%6>KCIZLTi0tKvRpxMbdB;t8jVvR`8qhP73QNXoWqvXVh=iNrD6T2gNn>r~_nr30&1Z8=hygTn>4{ztAubQi3EOysA2RJ|SxtCzy;B-_!Qzr%rSXbk%SeIj#_b$4#9{VL)0K6Uf+!DuR><`N<V07ejZ^gQ;pTN4WJ4&YpO4AIi+cE1q7~R>1ea-x0vPto-Nw%59{n*>I0PC_|l*73zq0<8etlP2K`8YPGYb*j@2412A|7sO%IB+#^6>-|+yR(*7XZ6mUu2BgJl$J@fIwAY#bd5FGXX_=v(wwd#W-9iaY#Qljm_Lzyv^uGm=X8xqQJ@@e4%QVpGskNj1YSwDrNF8juhmH=U_o+avh~UFS_`r6=@)XmM&&3_x_26_4#_DwUuy^OTC%+Xe3<j~>gHVFGT^((HYn%oEu+;jy(i~uRgMCscO$TF$s5V<w)sd~fd3}jo4^NcxMmfd2V4q#C)tLz;hJl(?&xQ*ZfWU;0wv6NS{;<5+H}p`*k8kCz+1`Isf(5M11?FnDaqE=rfYAY)e*hAP1md}1&Yr^tef&$+7~QMtFZ@v?_g5}zT4*Ox7&r-)See(56ok>!iU&^bw59cbwf)41xh;SV-Ig<liyd(C$bWF5BOiQt-|hVs;CQlp!)4(yMVYY@E&WiZs!-U?q_jOpky<eR>$S!g2(b1_BnrTvaL_H?L`i%8-ua`Zlkd<9*aGnI-|%zVO`D54(Ig+kEOB{C~*wIzGiNAVwS~j?AHBbY<Y%Fz$aL9-KXR?3tfNUOsuKwEbQU-NZ@Sjqhh<Be}rguGA~3+sbr==iEjqhm3cMUXF|`@=h(MOTd_jgj(vr_Gx@jO*z%WO0AD7@d<!@QTNbtpI34RW9)#U_48h)w8kYQ9S#8F;mS3iW+vM}0K*`TITAi9x3m%J@rL;PgH91xe6e#)YL#uOhD)#VE+GiCOB+bs`gT)S~-V`Y9HHcP6=Ve%zr^NRm)^*(MK;BX4XgY`jr8vWAb$VWkb$?2FA7I_Z%}(Pj#SW)4DNxFxi&h6{vm-R?Vr6x=pH>HPv!l4GeK@tDKq;s3Sa;~fShwhf#SW)5-o?6v-@&?u)e2uS3Y2P?h;@%PJ4q){u3nBj?8Y9bHamgeLoM*7r$DKuGqA6vo1Lc3&eOp~4l0A~v^sm6oxW?Z?q8`81xkH%VO^+aV_m5uurAf%Sl4P^v(Sawhjr&}#=3PkVcokQW8J)Z{!s%8l+JKE_N~%TtebT(_7(QP<lnlm?$=YWZrFan$-p;(zO-gOI|v*Az6QR+9*lm8b<^&}Lg90)+ja+b=dlgz#@&+qo7C9<0}YE;GQ-y-*Z=?k07*qoM6N<$f&"}]}]},{"autogenerated":[]}],"resourceCart":[{"guid":[178831460,3993387922,2964670205,1928225636],"name":"Default","parentGuid":[0,0,0,0],"type":"kGeneric","preload":true},{"guid":[3420273076,1898989905,2838226766,2988281017],"name":"Circle","parentGuid":[178831460,3993387922,2964670205,1928225636],"type":"kTexture","preload":true},{"guid":[953679908,159793237,2165885860,1104393525],"name":"Dot","parentGuid":[178831460,3993387922,2964670205,1928225636],"type":"kTexture","preload":true},{"guid":[1260272136,125914301,2612360310,1584440831],"name":"Hand","parentGuid":[178831460,3993387922,2964670205,1928225636],"type":"kTexture","preload":true},{"guid":[766435078,829834679,2444814687,2119501578],"name":"UI","parentGuid":[0,0,0,0],"type":"kGeneric","preload":false},{"guid":[3010702129,3145483288,2681238331,3517088819],"name":"Audio","parentGuid":[0,0,0,0],"type":"kGeneric","preload":false},{"guid":[2952646589,2841463146,2533660654,4139854127],"name":"Model","parentGuid":[0,0,0,0],"type":"kGeneric","preload":false},{"guid":[3022052053,295651261,2500835020,2228505556],"name":"Texture","parentGuid":[0,0,0,0],"type":"kGeneric","preload":false}],"mapdata":[{"ObjectsLinker":[{"class":"cWorkspace","name":"Archetypes","guid":[2301495294,1274365006,3003438828,1864040556],"spaceId":"kArchetypeSpace","objectType":0},{"class":"cNodeObject","name":"localPlayer","guid":[2229867806,259017539,2476631306,1972820229],"spaceId":"kArchetypeSpace","objectType":0},{"class":"cFolderObject","name":"C_Event","guid":[2292071358,1506495263,2198482554,1903889976],"spaceId":"kArchetypeSpace","objectType":0},{"class":"cCustomEventObject","name":"ClientExample01Event","guid":[2692906001,400442409,2471841936,3656382497],"spaceId":"kArchetypeSpace","objectType":0},{"class":"cCustomEventObject","name":"ClientExample02Event","guid":[4280271411,1924088491,2838919974,2621789847],"spaceId":"kArchetypeSpace","objectType":0},{"class":"cCustomEventObject","name":"ClientExample03Event","guid":[1505293026,2520205713,2880716936,3351337845],"spaceId":"kArchetypeSpace","objectType":0},{"class":"cCustomEventObject","name":"StartAnimationEvent","guid":[1824764229,1360481778,3122932367,3039676128],"spaceId":"kArchetypeSpace","objectType":0},{"class":"cCustomEventObject","name":"AnimationStateEvent","guid":[789045127,61556465,3150371296,2498448214],"spaceId":"kArchetypeSpace","objectType":0},{"class":"cBlackholeFolderObject","name":"Local","guid":[417325223,2932100337,2430726746,1418825083],"spaceId":"kArchetypeSpace","objectType":0},{"class":"cCamera","name":"CamGame","guid":[759347957,2245412439,2215380327,3955432270],"spaceId":"kArchetypeSpace","objectType":0},{"class":"cUiScreenUiObject","name":"GuiControl","guid":[2533750686,1387938960,2354695148,2843619481],"spaceId":"kArchetypeSpace","objectType":-842150451},{"class":"cUiFigureObject","name":"FigTouch","guid":[558507337,66472507,3072344558,3868119718],"spaceId":"kArchetypeSpace","objectType":-842150451},{"class":"cUiButtonObject","name":"BtnJump","guid":[2406646949,1021922567,2437610786,3045980417],"spaceId":"kArchetypeSpace","objectType":-842150451},{"class":"cUiJoystickObject","name":"Joystick","guid":[1302603338,408175840,2400347159,2524483116],"spaceId":"kArchetypeSpace","objectType":-842150451},{"class":"cFolderObject","name":"C_Code","guid":[1988763669,642008485,3045610516,4157666106],"spaceId":"kArchetypeSpace","objectType":0},{"class":"cScriptObject","name":"PlayerControlScript","guid":[1560065165,549536527,2196214773,3289613067],"spaceId":"kArchetypeSpace","objectType":0},{"class":"cScriptObject","name":"PlayerGuiScript","guid":[3123488404,66406900,3203951296,3468348395],"spaceId":"kArchetypeSpace","objectType":0},{"class":"cScriptObject","name":"PlayerMain","guid":[1590936490,2974695715,2831162716,2733380204],"spaceId":"kArchetypeSpace","objectType":0},{"class":"cPlayerInstance","name":"Player","guid":[821939657,2231651804,3205518288,3133023722],"spaceId":"kArchetypeSpace","objectType":0},{"class":"cPlayerAvatarInstance","name":"Avatar","guid":[2086577372,1035157785,2412732698,2224839101],"spaceId":"kArchetypeSpace","objectType":0},{"class":"cBoneAnchor","name":"Bone_Head","guid":[1952377286,2257011431,2235437585,1990350708],"spaceId":"kArchetypeSpace","objectType":0},{"class":"cBoneAnchor","name":"Bone_R_Hand","guid":[1365265308,2584495651,3179854900,2314059387],"spaceId":"kArchetypeSpace","objectType":0},{"class":"cBoneAnchor","name":"Bone_L_Hand","guid":[1001141281,105596195,2413995681,1572381856],"spaceId":"kArchetypeSpace","objectType":0},{"class":"cBoneAnchor","name":"Bone_Pelvis","guid":[3930266631,3765193548,2657671196,2444667291],"spaceId":"kArchetypeSpace","objectType":0},{"class":"cBoneAnchor","name":"Bone_R_Foot","guid":[1011560467,1551582414,3132691223,44035332],"spaceId":"kArchetypeSpace","objectType":0},{"class":"cBoneAnchor","name":"Bone_L_Foot","guid":[3538847244,808075570,2480843790,1198870357],"spaceId":"kArchetypeSpace","objectType":0},{"class":"cUiSurfaceUiObject","name":"GuiName","guid":[1125722335,3058388144,3049080368,3993769425],"spaceId":"kArchetypeSpace","objectType":0},{"class":"cUiTextObject","name":"TxtNameBar1","guid":[1696067722,1172258881,2336397010,3223749558],"spaceId":"kArchetypeSpace","objectType":-842150451},{"class":"cUiTextObject","name":"TxtNameBar2","guid":[2468294059,1953254650,2177078309,3514973383],"spaceId":"kArchetypeSpace","objectType":-842150451},{"class":"cUiSurfaceUiObject","name":"GuiHealth","guid":[4034155431,2533639325,2692867804,1867815364],"spaceId":"kArchetypeSpace","objectType":0},{"class":"cUiImageObject","name":"ImgBackground","guid":[338025634,585255119,2220664251,1278664055],"spaceId":"kArchetypeSpace","objectType":-842150451},{"class":"cUiImageObject","name":"ImgHealthBar","guid":[1576207627,2101430091,2207640803,2968758436],"spaceId":"kArchetypeSpace","objectType":-842150451},{"class":"cFolderObject","name":"GuideArchetype","guid":[3400473244,3365555972,2631620779,859012143],"spaceId":"kArchetypeSpace","objectType":0},{"class":"cUiScreenUiObject","name":"ClickGuide","guid":[1842428836,345787649,2571661232,1987629126],"spaceId":"kArchetypeSpace","objectType":0},{"class":"cUiFigureObject","name":"FigBackground","guid":[992452523,2076396946,3153625713,3352681626],"spaceId":"kArchetypeSpace","objectType":0},{"class":"cUiImageObject","name":"ImgDot","guid":[2485341161,2908308670,2799790715,2139064834],"spaceId":"kArchetypeSpace","objectType":-440162662},{"class":"cUiImageObject","name":"ImgHand","guid":[993241651,2764390417,2743306837,105997115],"spaceId":"kArchetypeSpace","objectType":0},{"class":"cUiImageObject","name":"ImgCircle","guid":[1400665507,1446726149,2961462231,1374735632],"spaceId":"kArchetypeSpace","objectType":1530668880},{"class":"cUiFigureObject","name":"FigTextBox","guid":[1422966223,3713485801,2629189369,1299316199],"spaceId":"kArchetypeSpace","objectType":0},{"class":"cUiTextObject","name":"TxtContent","guid":[292836596,599213714,2606384497,1966083576],"spaceId":"kArchetypeSpace","objectType":0},{"class":"cUiButtonObject","name":"BtnClose","guid":[1548866236,2510702909,2963853067,1419111432],"spaceId":"kArchetypeSpace","objectType":524288},{"class":"cScriptObject","name":"GuideEffectScript","guid":[3575161319,3022602991,2563733590,2740030566],"spaceId":"kArchetypeSpace","objectType":0}],"ObjectsData":[{"class":"cWorkspace","name":"Archetypes","guid":[2301495294,1274365006,3003438828,1864040556],"parentGuid":[0,0,0,0],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"Archetypes"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":10,"class":"sWorkspaceComponent","data":{}},{"id":11,"class":"sConfigPhysicsComponent","data":{"m_collisionGroupMaskFlags":[0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}}]},{"class":"cNodeObject","name":"localPlayer","guid":[2229867806,259017539,2476631306,1972820229],"parentGuid":[2301495294,1274365006,3003438828,1864040556],"components":[{"id":0,"class":"sFullTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"localPlayer"}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":3,"class":"sNetworkComponent","data":{}}]},{"class":"cFolderObject","name":"C_Event","guid":[2292071358,1506495263,2198482554,1903889976],"parentGuid":[2229867806,259017539,2476631306,1972820229],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"C_Event"}},{"id":40000,"class":"sScriptHelperComponent","data":{}}]},{"class":"cCustomEventObject","name":"ClientExample01Event","guid":[2692906001,400442409,2471841936,3656382497],"parentGuid":[2292071358,1506495263,2198482554,1903889976],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"ClientExample01Event"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":511,"class":"sCustomEventComponent","data":{}},{"id":10,"class":"sLuaComponent","data":{"m_luaContent":"--自定义事件脚本, 会监听由FireEventTo系列触发的与该脚本名一样的事件\r\n--参数(arg1, arg2, arg3 ...) : 为各个事件参数\r\n","m_scriptType":"kCustomFunction"}}]},{"class":"cCustomEventObject","name":"ClientExample02Event","guid":[4280271411,1924088491,2838919974,2621789847],"parentGuid":[2292071358,1506495263,2198482554,1903889976],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"ClientExample02Event"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":511,"class":"sCustomEventComponent","data":{}},{"id":10,"class":"sLuaComponent","data":{"m_luaContent":"--自定义事件脚本, 会监听由FireEventTo系列触发的与该脚本名一样的事件\r\n--参数(arg1, arg2, arg3 ...) : 为各个事件参数\r\n","m_scriptType":"kCustomFunction"}}]},{"class":"cCustomEventObject","name":"ClientExample03Event","guid":[1505293026,2520205713,2880716936,3351337845],"parentGuid":[2292071358,1506495263,2198482554,1903889976],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"ClientExample03Event"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":511,"class":"sCustomEventComponent","data":{}},{"id":10,"class":"sLuaComponent","data":{"m_luaContent":"--自定义事件脚本, 会监听由FireEventTo系列触发的与该脚本名一样的事件\r\n--参数(arg1, arg2, arg3 ...) : 为各个事件参数\r\n","m_scriptType":"kCustomFunction"}}]},{"class":"cCustomEventObject","name":"StartAnimationEvent","guid":[1824764229,1360481778,3122932367,3039676128],"parentGuid":[2292071358,1506495263,2198482554,1903889976],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"StartAnimationEvent"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":511,"class":"sCustomEventComponent","data":{}},{"id":10,"class":"sLuaComponent","data":{"m_luaContent":"--自定义事件脚本, 会监听由FireEventTo系列触发的与该脚本名一样的事件\r\n--参数(arg1, arg2, arg3 ...) : 为各个事件参数\r\n--arg1:要播放的动画数据名称,以Module形式储存在Animation下\r\n","m_scriptType":"kCustomFunction"}}]},{"class":"cCustomEventObject","name":"AnimationStateEvent","guid":[789045127,61556465,3150371296,2498448214],"parentGuid":[2292071358,1506495263,2198482554,1903889976],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"AnimationStateEvent"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":511,"class":"sCustomEventComponent","data":{}},{"id":10,"class":"sLuaComponent","data":{"m_luaContent":"--自定义事件脚本, 会监听由FireEventTo系列触发的与该脚本名一样的事件\r\n--参数(arg1, arg2, arg3 ...) : 为各个事件参数\r\n","m_scriptType":"kCustomFunction"}}]},{"class":"cBlackholeFolderObject","name":"Local","guid":[417325223,2932100337,2430726746,1418825083],"parentGuid":[2229867806,259017539,2476631306,1972820229],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"Local"}},{"id":40000,"class":"sScriptHelperComponent","data":{}}]},{"class":"cCamera","name":"CamGame","guid":[759347957,2245412439,2215380327,3955432270],"parentGuid":[417325223,2932100337,2430726746,1418825083],"components":[{"id":0,"class":"sRegularTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"CamGame"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":10,"class":"sCameraComponent","data":{"m_viewPortHeight":700,"m_viewPortWidth":1368,"m_nearClip":0.029999999329447748}},{"id":11,"class":"sRenderComponent","data":{}},{"id":20,"class":"sCameraBehaviorComponent","data":{"m_cameraMaxZoomDistance":50.0}},{"id":30,"class":"sAudioListenerComponent","data":{}}]},{"class":"cUiScreenUiObject","name":"GuiControl","guid":[2533750686,1387938960,2354695148,2843619481],"parentGuid":[417325223,2932100337,2430726746,1418825083],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"GuiControl"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":20,"class":"sRenderComponent","data":{}},{"id":26,"class":"sUiScreenUiComponent","data":{"m_widgetSize":[1920.0,1080.0],"m_order":1,"m_pivot":[0.0,0.0],"m_anchorsX":[0.0,0.0],"m_anchorsY":[0.0,0.0],"m_anchor":"kAlignBottomLeft","m_anchorPercent":[0.0,0.0],"m_alignment":"kAlignBottomLeft","m_alignmentPercent":[0.0,0.0],"m_preSize":[1368.0,700.0]}}]},{"class":"cUiFigureObject","name":"FigTouch","guid":[558507337,66472507,3072344558,3868119718],"parentGuid":[2533750686,1387938960,2354695148,2843619481],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"FigTouch"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":20,"class":"sRenderComponent","data":{}},{"id":24,"class":"sUiFigureComponent","data":{"m_widgetSize":[2000.0,1019.089599609375],"m_pivot":[0.0,0.0],"m_anchorsX":[0.0,1.0],"m_anchorsY":[0.0,1.0],"m_anchor":"kAlignBottomLeft","m_anchorPercent":[0.0,0.0],"m_alignment":"kAlignBottomLeft","m_alignmentPercent":[0.0,0.0],"m_preSize":[2000.0,1019.089599609375],"m_prePivot":[0.0,0.0],"m_preAnchorsX":[0.0,1.0],"m_preAnchorsY":[0.0,1.0],"m_finalSize":[2000.0,1019.089599609375],"m_autoScale":true,"m_autoScaleType":"ByParentScale","m_bgColor":[1.0,1.0,1.0,0.0],"m_borderColor":[0.0,0.0,0.0,0.0]}}]},{"class":"cUiButtonObject","name":"BtnJump","guid":[2406646949,1021922567,2437610786,3045980417],"parentGuid":[2533750686,1387938960,2354695148,2843619481],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"BtnJump"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":20,"class":"sRenderComponent","data":{}},{"id":26,"class":"sUiButtonComponent","data":{"m_addedSize":[200.0,200.0],"m_widgetSize":[200.0,200.0],"m_order":1,"m_pivot":[0.0,0.0],"m_anchorsX":[0.8500000238418579,0.8500000238418579],"m_anchorsY":[0.10000000149011612,0.10000000149011612],"m_anchor":"kAlignBottomLeft","m_anchorPercent":[0.0,0.0],"m_alignment":"kAlignBottomRight","m_alignmentPercent":[1.0,0.0],"m_preSize":[200.0,200.0],"m_acceptRaycastWhenEdit":true,"m_prePivot":[0.0,0.0],"m_preAnchorsX":[0.8500000238418579,0.8500000238418579],"m_preAnchorsY":[0.10000000149011612,0.10000000149011612],"m_finalSize":[200.0,200.0],"m_autoScale":true,"m_autoScaleType":"ByParentDiagonal","m_image":{"m_guid":[1381378012,3623568531,2182762728,2959803675],"m_revision":0,"m_type":"kTexture","m_autoGenerated":false},"m_imageColor":[1.0196077823638917,1.0196077823638917,1.0196077823638917,1.0],"m_averageColor":[0.0,0.0,0.0,1.0],"m_averageColorReciprocal":[5.0,5.0,5.0,1.6776314973831177]}}]},{"class":"cUiJoystickObject","name":"Joystick","guid":[1302603338,408175840,2400347159,2524483116],"parentGuid":[2533750686,1387938960,2354695148,2843619481],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"Joystick"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":20,"class":"sRenderComponent","data":{}},{"id":30,"class":"sUiJoystickComponent","data":{"m_widgetSize":[300.0,300.0],"m_order":2,"m_pivot":[0.0,0.0],"m_anchorsX":[0.10000000149011612,0.10000000149011612],"m_anchorsY":[0.10000000149011612,0.10000000149011612],"m_anchor":"kAlignTopLeft","m_anchorPercent":[0.0,0.0],"m_alignment":"kAlignBottomLeft","m_alignmentPercent":[0.0,0.0],"m_preSize":[300.0,300.0],"m_prePivot":[0.0,0.0],"m_preAnchorsX":[0.10000000149011612,0.10000000149011612],"m_preAnchorsY":[0.10000000149011612,0.10000000149011612],"m_finalSize":[300.0,300.0],"m_autoScale":true,"m_autoScaleType":"ByParentDiagonal","m_threshold":0.10000000149011612,"m_workArea":[230.61419677734376,230.61419677734376],"m_backGround":{"m_guid":[1676341669,384255279,2994375601,539764901],"m_revision":0,"m_type":"kTexture","m_autoGenerated":false},"m_handle":{"m_guid":[1309922238,2547074866,2257169120,2540834883],"m_revision":0,"m_type":"kTexture","m_autoGenerated":false},"m_arrow":{"m_guid":[3072216954,3382394894,3198588415,2980353886],"m_revision":0,"m_type":"kTexture","m_autoGenerated":false},"m_normalized":true}}]},{"class":"cFolderObject","name":"C_Code","guid":[1988763669,642008485,3045610516,4157666106],"parentGuid":[417325223,2932100337,2430726746,1418825083],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"C_Code"}},{"id":40000,"class":"sScriptHelperComponent","data":{}}]},{"class":"cScriptObject","name":"PlayerControlScript","guid":[1560065165,549536527,2196214773,3289613067],"parentGuid":[1988763669,642008485,3045610516,4157666106],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"PlayerControlScript"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":10,"class":"sLuaComponent","data":{"m_luaContent":"--- 玩家控制\r\n-- @script Player Controll\r\n-- @copyright Lilith Games, Avatar Team\r\n-- 获取本地玩家\r\nlocal player = localPlayer.Player\r\n\r\n--声明变量\r\nlocal isDead = false\r\nlocal forwardDir = Vector3.Forward\r\nlocal rightDir = Vector3.Right\r\nlocal finalDir = Vector3.Zero\r\nlocal horizontal = 0\r\nlocal vertical = 0\r\n\r\n-- 摄像机看向自己\r\nworld.CurrentCamera = localPlayer.Local.CamGame\r\nlocal camera = world.CurrentCamera\r\nlocal mode = Camera.CameraMode\r\ncamera.LookAt = player\r\n\r\n-- 手机端交互UI\r\nlocal gui = localPlayer.Local.GuiControl\r\nlocal joystick = gui.Joystick\r\nlocal touchScreen = gui.FigTouch\r\nlocal jumpButton = gui.BtnJump\r\n\r\n-- PC端交互按键\r\nlocal FORWARD_KEY = Enum.KeyCode.W\r\nlocal BACK_KEY = Enum.KeyCode.S\r\nlocal LEFT_KEY = Enum.KeyCode.A\r\nlocal RIGHT_KEY = Enum.KeyCode.D\r\nlocal JUMP_KEY = Enum.KeyCode.Space\r\n\r\n-- 键盘的输入值\r\nlocal moveForwardAxis = 0\r\nlocal moveBackAxis = 0\r\nlocal moveLeftAxis = 0\r\nlocal moveRightAxis = 0\r\n\r\n-- 移动方向是否遵循摄像机方向\r\nfunction IsFreeMode()\r\n\treturn (mode == Enum.CameraMode.Social and camera.Distance >= 0) or mode == Enum.CameraMode.Orbital or\r\n\t\tmode == Enum.CameraMode.Custom\r\nend\r\n\r\n--获取按键盘时的移动方向最终取值\r\nfunction GetKeyValue()\r\n\tmoveForwardAxis = Input.GetPressKeyData(FORWARD_KEY) > 0 and 1 or 0\r\n\tmoveBackAxis = Input.GetPressKeyData(BACK_KEY) > 0 and -1 or 0\r\n\tmoveLeftAxis = Input.GetPressKeyData(LEFT_KEY) > 0 and 1 or 0\r\n\tmoveRightAxis = Input.GetPressKeyData(RIGHT_KEY) > 0 and -1 or 0\r\n\tif player.State == Enum.CharacterState.Died then\r\n\t\tmoveForwardAxis, moveBackAxis, moveLeftAxis, moveRightAxis = 0, 0, 0, 0\r\n\tend\r\nend\r\n\r\n-- 获取移动方向\r\nfunction GetMoveDir()\r\n\tforwardDir = IsFreeMode() and camera.Forward or player.Forward\r\n\tforwardDir.y = 0\r\n\trightDir = Vector3(0, 1, 0):Cross(forwardDir)\r\n\thorizontal = joystick.Horizontal\r\n\tvertical = joystick.Vertical\r\n\tif horizontal ~= 0 or vertical ~= 0 then\r\n\t\tfinalDir = rightDir * horizontal + forwardDir * vertical\r\n\telse\r\n\t\tGetKeyValue()\r\n\t\tfinalDir = forwardDir * (moveForwardAxis + moveBackAxis) - rightDir * (moveLeftAxis + moveRightAxis)\r\n\tend\r\nend\r\n\r\n-- 移动逻辑\r\nfunction PlayerMove(dir)\r\n\tdir.y = 0\r\n\tif player.State == Enum.CharacterState.Died then\r\n\t\tdir = Vector3.Zero\r\n\tend\r\n\tif dir.Magnitude > 0 then\r\n\t\tif IsFreeMode then\r\n\t\t\tplayer:FaceToDir(dir, 4 * math.pi)\r\n\t\tend\r\n\t\tplayer:MoveTowards(Vector2(dir.x, dir.z).Normalized)\r\n\telse\r\n\t\tplayer:MoveTowards(Vector2.Zero)\r\n\tend\r\nend\r\n\r\n-- 跳跃逻辑\r\nfunction PlayerJump()\r\n\tif (player.IsOnGround or player.State == Enum.CharacterState.Seated) and not isDead then\r\n\t\tplayer:Jump()\r\n\t\treturn\r\n\tend\r\nend\r\njumpButton.OnDown:Connect(PlayerJump)\r\nInput.OnKeyDown:Connect(\r\n\tfunction()\r\n\t\tif Input.GetPressKeyData(JUMP_KEY) == 1 then\r\n\t\t\tPlayerJump()\r\n\t\tend\r\n\tend\r\n)\r\n\r\n-- 死亡逻辑\r\nfunction PlayerDie()\r\n\tisDead = true\r\n\twait(player.RespawnTime)\r\n\tplayer:Reset()\r\n\tisDead = false\r\nend\r\nplayer.OnDead:Connect(PlayerDie)\r\n\r\n-- 生命值检测\r\nfunction HealthCheck(oldHealth, newHealth)\r\n\tif newHealth <= 0 then\r\n\t\tplayer:Die()\r\n\tend\r\nend\r\nplayer.OnHealthChange:Connect(HealthCheck)\r\n\r\n-- 每个渲染帧处理操控逻辑\r\nfunction MainControl()\r\n\tcamera = world.CurrentCamera\r\n\tmode = camera.CameraMode\r\n\tGetMoveDir()\r\n\tPlayerMove(finalDir)\r\nend\r\nworld.OnRenderStepped:Connect(MainControl)\r\n\r\n-- 检测触屏的手指数\r\nlocal touchNumber = 0\r\nfunction countTouch(container)\r\n\ttouchNumber = #container\r\nend\r\ntouchScreen.OnTouched:Connect(countTouch)\r\n\r\n-- 滑屏转向\r\nfunction cameraMove(pos, dis, deltapos, speed)\r\n\tif touchNumber == 1 then\r\n\t\tif IsFreeMode() then\r\n\t\t\tcamera:CameraMove(deltapos)\r\n\t\telse\r\n\t\t\tplayer:RotateAround(player.Position, Vector3.Up, deltapos.x)\r\n\t\t\tcamera:CameraMove(Vector2(0, deltapos.y))\r\n\t\tend\r\n\tend\r\nend\r\ntouchScreen.OnPanStay:Connect(cameraMove)\r\n\r\n-- 双指缩放摄像机距离\r\nfunction cameraZoom(pos1, pos2, dis, speed)\r\n\tif mode == Enum.CameraMode.Social then\r\n\t\tcamera.Distance = camera.Distance - dis / 50\r\n\tend\r\nend\r\ntouchScreen.OnPinchStay:Connect(cameraZoom)\r\n"}}]},{"class":"cScriptObject","name":"PlayerGuiScript","guid":[3123488404,66406900,3203951296,3468348395],"parentGuid":[1988763669,642008485,3045610516,4157666106],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"PlayerGuiScript"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":10,"class":"sLuaComponent","data":{"m_luaContent":"--- 玩家默认UI\r\n-- @script Player Default GUI\r\n-- @copyright Lilith Games, Avatar Team\r\n\r\n-- 获取本地玩家\r\nlocal player = localPlayer.Player\r\n\r\n-- 姓名板\r\nlocal nameGUI = player.GuiName\r\nnameGUI.TxtNameBar1.Text = localPlayer.Name\r\nnameGUI.TxtNameBar2.Text = localPlayer.Name\r\n\r\n-- 姓名板的显示逻辑\r\nfunction NameBarLogic()\r\n\tnameGUI.Visible = player.DisplayName\r\n\tif player.DisplayName then\r\n\t\tlocal addedHeight = (healthGUI and healthGUI.ActiveSelf) and 1.1 or 1\r\n\t\tnameGUI.LocalPosition = Vector3(0, addedHeight + player.Avatar.Height, 0)\r\n\tend\r\nend\r\n\r\n-- 血条\r\nlocal healthGUI = player.GuiHealth\r\nlocal background = healthGUI.ImgBackground\r\nlocal healthBar = background.ImgHealthBar\r\nlocal RED_BAR = ResourceManager.GetTexture('Internal/Blood_Red')\r\nlocal GREEN_BAR = ResourceManager.GetTexture('Internal/Blood_Green')\r\nlocal ORANGE_BAR = ResourceManager.GetTexture('Internal/Blood_Orange')\r\nlocal HIT_LAST_TIME = 2\r\nlocal healthBarShowTime = 0\r\n\r\n-- 血条随生命值颜色改变而改变\r\nfunction healthChange(oldHealth, newHealth)\r\n\tif oldHealth > newHealth then\r\n\t\thealthBarShowTime = 2\r\n\tend\r\n\tlocal percent = player.Health / player.MaxHealth\r\n\tif percent >= 0.7 then\r\n\t\thealthBar.Texture = GREEN_BAR\r\n\telseif percent >= 0.3 then\r\n\t\thealthBar.Texture = ORANGE_BAR\r\n\telse\r\n\t\thealthBar.Texture = RED_BAR\r\n\tend\r\n\thealthBar.AnchorsX = Vector2(0.05, 0.9 * percent + 0.05)\r\nend\r\nplayer.OnHealthChange:Connect(healthChange)\r\n\r\n-- 血条在各显示模式下的显示逻辑\r\nfunction HealthBarLogic(delta)\r\n\thealthBarShowTime = healthBarShowTime - delta\r\n\tif player.HealthDisplayMode == Enum.HealthDisplayMode.Always then\r\n\t\thealthGUI.Visible = true\r\n\telseif player.HealthDisplayMode == Enum.HealthDisplayMode.Never then\r\n\t\thealthGUI.Visible = false\r\n\telseif player.HealthDisplayMode == Enum.HealthDisplayMode.OnHit then\r\n\t\thealthGUI.Visible = player.Health ~= player.MaxHealth\r\n\telse\r\n\t\thealthGUI.Visible = healthBarShowTime > 0\r\n\tend\r\nend\r\n\r\n-- 每个渲染帧更新姓名板和血条的显示逻辑\r\nfunction MainGUI(delta)\r\n\tNameBarLogic()\r\n\tHealthBarLogic(delta)\r\nend\r\nworld.OnRenderStepped:Connect(MainGUI)\r\n"}}]},{"class":"cScriptObject","name":"PlayerMain","guid":[1590936490,2974695715,2831162716,2733380204],"parentGuid":[1988763669,642008485,3045610516,4157666106],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"PlayerMain"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":10,"class":"sLuaComponent","data":{"m_luaContent":"--- 客户端代码入口\r\n-- @script Client Main Function\r\n-- @copyright Lilith Games, Avatar Team\r\n\r\nPlayerMgr:Init()\r\n"}}]},{"class":"cPlayerInstance","name":"Player","guid":[821939657,2231651804,3205518288,3133023722],"parentGuid":[2229867806,259017539,2476631306,1972820229],"components":[{"id":0,"class":"sRegularTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"Player"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":10,"class":"sRigidBodyComponent","data":{"m_isStatic":false,"m_density":1000.0,"m_frictionRate":0.0,"m_rough":0.0,"m_restitution":0.0,"m_freezeRotation":true,"m_gravityScale":2.0,"m_statusFlag":10}},{"id":20,"class":"sCharacterControllerComponent","data":{"m_jumpUpVelocity":9.800000190734864}},{"id":40,"class":"sCharacterStateComponent","data":{"m_respawnTime":3.0,"m_avatar":[2086577372,1035157785,2412732698,2224839101],"m_displayName":true}},{"id":50,"class":"sRenderComponent","data":{}},{"id":60,"class":"sNetworkComponent","data":{}},{"id":666,"class":"sStateSyncComponent","data":{"m_syncRotation":[0.0,0.0,0.0,1.0],"m_distrSimVersion":0}}]},{"class":"cPlayerAvatarInstance","name":"Avatar","guid":[2086577372,1035157785,2412732698,2224839101],"parentGuid":[821939657,2231651804,3205518288,3133023722],"components":[{"id":0,"class":"sRegularTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"Avatar"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":10,"class":"sPlayerModelInstanceComponent","data":{"m_head":{"attriValue":"DefaultMale","valueList":["DefaultMale","Male_Head2","Male_Head3"]},"m_clothes":{"attriValue":"DefaultMale","valueList":["DefaultMale","Male_Chest_TshirtShort_A001","Male_Chest_TshirtShort_A002","Male_Chest_TshirtShort_A003","Male_Chest_TshirtShort_A004","Male_Chest_TshirtShort_A005","Male_Chest_TshirtShort_A006","Male_Chest_TshirtShort_A007","Male_Chest_TshirtShort_A008","Male_Chest_TshirtShort_A009","Male_Chest_TshirtShort_A010","Male_Chest_SweaterLong_A001","Male_Chest_SweaterLong_A002","Male_Chest_SweaterLong_A003","Male_Chest_SweaterLong_A004","Male_Chest_SweaterLong_A005","Male_Chest_SweaterLong_A006","Male_Chest_SweaterLong_A007","Male_Chest_SweaterLong_A008","Male_Chest_SweaterLong_A009","Male_Chest_SweaterLong_A010","Male_Chest_SweaterLong_A011","Male_Chest_SweaterLong_A012","Male_001Jacket","Male_Jacket_Leis01","RedJacket","Male_Jacket_Leis02","Male_Jacket_Leis03","Male_006Jacket","Male_007Jacket","Male_008Tshirt","Male_009Jacket","Male_010Tshirt","Male_011Tshirt","Male_012Jacket","Male_Chest_Robe_India_001","Male_Chest_JacketIndiaSilk_001","Male_AviatorJacket","Male_MexicJacket","Male_SpaceJacket","Male_BaseballJacket","Male_UniverJacket","Male_UniverJacket_01","Male_OwlJacket","Male_Chest_ArmorGriffin_001","Unisex_Chest_ArmorIron_001","Male_WendigoJacket","Male_NutJacket","Male_Chest_UniformPolice_001","Male_Chest_TshitSki_001","Male_Chest_JacketRobtDog_001","Male_Chest_MuscleSuitShark_001","Male_Chest_MuscleSuitShark_002","Male_Chest_TshirtWaste_001","Male_Chest_JacketBiker_001","Male_Chest_TshirtSteam_001","Male_Chest_JacketRobtEva_001","Male_Chest_JacketRobtEva_002","Male_Chest_JacketAI_001","Male_Chest_TshirtCowboy_001","Male_Zombies01Tshirt","Male_Zombies03Jacket","Male_Zombies04Tshirt","Male_Zombies06Jacket","Male_Chest_JacketElf_001","Male_Chest_JacketCasual_001"]},"m_trousers":{"attriValue":"DefaultMale","valueList":["DefaultMale","Male_Jeans01Trousers","Male_Leis01Trousers","Male_003Trousers","Male_Leis01Pants","Male_Leis03Trousers","Male_006Trousers","Male_007Trousers","Male_008Trousers","Male_009Trousers","Male_010Trousers","Male_011Trousers","Male_012Pants","Male_Leg_Pants_India_001","Male_Leg_TrousersIndiaSilk_001","Male_AviatorTrousers","Male_MexicTrousers","Male_SpaceTrousers","Male_BaseballTrousers","Male_UniverTrousers","Male_UniverTrousers_01","Male_OwlTrousers","Male_Leg_ArmorGriffin_001","Male_Leg_ArmorIron_001","Male_WendigoTrousers","Male_NutTrousers","Male_Leg_PantsLPolice_001","Male_Leg_PantsLSki_001","Male_Leg_PantsLRobtDog_001","Male_Leg_PantsShark_001","Male_Leg_PantsShark_002","Male_Leg_TrousersWaste_001","Male_Leg_TrousersBiker_001","Male_Leg_TrousersSteam_001","Male_Leg_PantsLRobtEva_001","Male_Leg_PantsLRobtEva_002","Male_Leg_PantsLAI_001","Male_Leg_TrousersCowboy_001","Male_Zombies01Pants","Male_Zombies03Trousers","Male_Zombies04Trousers","Male_Zombies06Trousers","Male_Leg_TrousersElf_001","Male_Leg_TrousersCasual_001"]},"m_hair":{"attriValue":"DefaultMale","valueList":["DefaultMale","Hair_Brown01M","Hair_Blonde01M","Hair_Blonde02M","Hair_Orange01M","Hair_White01M","Hair_Green01M","Male_Head_Hair_015","Male_Head_Hair_014","Male_Head_Hair_028","Hair_Zombies06_M","Male_Head_Hair_023","Male_Head_Hair_024"]},"m_hands":{"attriValue":"DefaultMale","valueList":["DefaultMale","Male_GLeather01","Male_AviatorGloves","Male_SpaceGloves","Male_BaseballGloves","Male_UniverGloves","Male_UniverGloves_01","Male_OwlGloves","Unisex_Hand_GlovesGriffin_001","Unisex_Hand_GlovesIron_001","Male_WendigoGloves","Unisex_Hand_GlovesSki_001","Unisex_Hand_GlovesRobtDog_001","Male_Hand_GlovesBiker_001","Unisex_Hand_GlovesRobtEva_001","Unisex_Hand_GlovesRobtEva_002","Unisex_Hand_GlovesAI_001","Male_Hand_GlovesSteam_001","Male_Hand_GlovesElf_001"]},"m_shoes":{"attriValue":"DefaultMale","valueList":["DefaultMale","LeatherShoe","Male_Leis01Shoes","Unisex_Feet_CanvasShoes_A001","Unisex_Feet_CanvasShoes_A002","Unisex_Feet_CanvasShoes_A003","Unisex_Feet_CanvasShoes_A004","Unisex_Feet_CanvasShoes_A005","Unisex_Feet_CanvasShoes_A006","Unisex_Feet_CanvasShoes_A007","Unisex_Feet_CanvasShoes_A008","Unisex_Feet_CanvasShoes_A009","Unisex_Feet_CanvasShoes_A010","Male_003Shoes","Male_BLeather01","Male_Leis03Shoes","Male_006Shoes","Male_007Shoes","Male_008Shoes","Male_009Shoes","Unisex_Feet_BasketballShoes_003","Male_010Shoes","Male_011Boots","Male_012Boots","Male_Feet_Shoes_India_001","Male_Feet_ShoesIndiaSilk_001","Male_AviatorShoes","Male_MexicBoots","Male_SpaceBoots","Male_BaseballShoes","Male_UniverShoes","Male_UniverShoes_01","Male_OwlBoots","Unisex_Feet_ShoesGriffin_001","Unisex_Feet_ShoesIron_001","Male_WendigoShoes","Male_NutBoots","Unisex_Feet_ShoesPolice_001","Unisex_Feet_BootsSki_001","Unisex_Feet_ShoesSki_001","Male_Feet_ShoesRobtDog_001","Unisex_Feet_SlippersShark_001","Male_Feet_BootsWaste_001","Male_Feet_BootsBiker_001","Male_Feet_BootsSteam_001","Unisex_Feet_ShoesRobtEva_001","Unisex_Feet_ShoesRobtEva_002","Unisex_Feet_ShoesAI_001","Male_Feet_BootsCowboy_001","Male_Zombies01Shoes","Male_Zombies03Boots","Male_Zombies04Boots","Male_Zombies06Shoes","Male_Feet_BootsElf_001","Male_Feet_ShoesCasual_001"]},"m_skinColor":{"attriValue":"DefaultMale","valueList":["DefaultMale","Color2","Color3","Color4","Color5","Color6","Color7","Color8","Color9","Color10","Color11","Color12","Color13"]},"m_headAccessory":{"attriValue":"Empty_Head","valueList":["Empty_Head","Male_ComHat_001","Male_ComHat003","Male_ComHat004","Male_ComHat005","Male_ComHat006","Male_ComHat007","Male_008Hat","Male_010Hat","Male_011Hat","Male_012Hat","Male_Head_ComHelmet_002","Male_ComHelmet003","Male_ComHelmet004","Male_ComHelmet005","Male_013Hat","Male_AviatorHat","Male_MexicHat","Male_SpaceHelmet","Male_Baseball01Hat","Male_Baseball02Hat","Male_UniverHelmet","Male_UniverHelmet_01","Male_Owl_Helmet","Male_Head_HelmetGriffin_001","Unisex_Head_HelmetIron_001","Male_Wendigo_Helmet","Male_Nut_Helmet","Unisex_Head_MaskPolice_001","Unisex_Head_CapPolice_001","Unisex_Head_CapSki_001","Male_Head_HelmetRobtDog_001","Male_Head_HelmetShark_001","Male_Head_HelmetBiker_001","Male_Head_HatSteam_001","Unisex_Head_HelmetRobtEva_001","Unisex_Head_HelmetRobtEva_002","Unisex_Head_HelmetAI_001","Male_Head_Hat_India_001","Male_Head_HelmetIndiaSilk_001","Male_Head_HelmetIndiaSilk_002","Male_Head_HatCowboy_001","Unisex_Head_JewelsMadMax_001","Male_Zombies01Hat","Male_Zombies03_Helmet","Male_Zombies04_Helmet","Male_Zombies06_Hat","Male_Head_HatElf_001","Male_Head_EarSupElf_001","Male_Head_HatCasual_001"]},"m_neckAccessory":{"attriValue":"Empty_Neck","valueList":["Empty_Neck","Male_AviatorScarf","Male_AviatorScarf_02","Male_AviatorScarf_03","Male_Zombies06_ChestSup","Unisex_Chest_LifeVest_01"]},"m_shouldersAccessory":{"attriValue":"Empty_Shoulders","valueList":["Empty_Shoulders"]},"m_legsAccessory":{"attriValue":"Empty_Legs","valueList":["Empty_Legs","Male_AviatorKneepad","Male_OwlKneepad","Unisex_Knee_PadGriffin_001","Unisex_Knee_PadIron_001","Unisex_Knee_PadPolice_001","Unisex_Knee_PadWaste_001","Unisex_Knee_PadBiker_001"]},"m_handsAccessory":{"attriValue":"Empty_Hands","valueList":["Empty_Hands","Watch","Male_010Wrist","Male_011Wrist","Male_SteamWrist","Male_IndiaSilkWrist","Female_CasualWatch"]},"m_bodyAccessory":{"attriValue":"Empty_Body","valueList":["Empty_Body","Male_009Bag","Male_012Bag","Female_Chest_Hobo_002","Male_AviatorBag","Male_MexicUkulele","Male_SpaceBag","Male_BaseballBag","Male_UniverBag","Male_WendigoBag","Unisex_Back_BackpackPolice_001","Unisex_Back_BackpackSki_001","Female_Back_BackpackSteam_001","Male_Zombies04Bag","Female_Zombies05Bag","Male_Zombies06Bag","Male_Back_WingsElf_001","Unisex_Back_BackpackCasual_001"]},"m_waistAccessory":{"attriValue":"","valueList":["Empty_Waist","LifeBuoy","Unisex_Pelvis_Lifebuoy_Duck_01","Unisex_Pelvis_Lifebuoy_Donut_01","Unisex_Pelvis_Lifebuoy_Donut_02","Unisex_Pelvis_Lifebuoy_Watermelon","Unisex_Pelvis_Lifebuoy_Tire","NutSabre","Male_Pelvis_Cowboy_GunBag"]},"m_specialAccessory":{"attriValue":"Empty_Special","valueList":["Empty_Special"]},"m_faceAccessory":{"attriValue":"","valueList":["Empty_Face","Glasses","Unisex_Head_GlassLeisure_001","Female_MadMax_Glasses","HeadSet"]},"m_wristAccessory":{"attriValue":"","valueList":["Empty_Wrist"]},"m_shoulderArmorAccessory":{"attriValue":"","valueList":["Empty_ShoulderArmor","Male_OwlShoulder","Male_Shoulder_ArmorGriffin_001","Unisex_Shoulder_ArmorIron_001","Male_WendigoShoulder","Unisex_Shoulder_ArmorWaste_001","Female_SteamShoulder","Male_RobtEvaShoulder","Male_RobtEvaShoulder_02","Male_AIShoulder"]},"m_chestArmorAccessory":{"attriValue":"","valueList":["Empty_ChestArmor","Male_BchestSup","Male_ComChestSup001","Male_ComChestSup002","Male_ComChestSup003"]},"m_upperArmGuardAccessory":{"attriValue":"","valueList":["Empty_UpperArmGuard","Male_BaseballGuard","Unisex_Elbow_PadsIron_001"]},"m_currentDress":"{\"boneSizeList\":[1.0,1.0,1.0],\"curDressList\":[\"DefaultMale\",\"DefaultMale\",\"DefaultMale\",\"DefaultMale\",\"DefaultMale\",\"DefaultMale\",\"DefaultMale\",\"DefaultMale\",\"Empty_Head\",\"Empty_Neck\",\"Empty_Shoulders\",\"Empty_Body\",\"Empty_Hands\",\"\",\"Empty_Legs\",\"Empty_Special\",\"\",\"\"],\"gender\":1,\"name\":\"CurrentDress\",\"ornamentsKeys\":[],\"ornamentsValues\":[],\"skinColor\":{\"a\":1.0,\"b\":0.5372549295425415,\"g\":0.6666666865348816,\"r\":0.9137254953384399}}"}},{"id":20,"class":"sAnimationComponent","data":{}},{"id":25,"class":"sPlayerExpressionComponent","data":{}},{"id":40,"class":"sRenderComponent","data":{}}]},{"class":"cBoneAnchor","name":"Bone_Head","guid":[1952377286,2257011431,2235437585,1990350708],"parentGuid":[2086577372,1035157785,2412732698,2224839101],"components":[{"id":0,"class":"sRegularTransform","data":{"m_localPosition":[-0.000002246061740152072,1.3431568145751954,-0.04980199784040451],"m_localRotation":[0.5163317322731018,-0.4831157624721527,-0.516330897808075,0.4831181466579437]}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"Bone_Head"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":10,"class":"sBoneAnchorComponent","data":{"m_boneName":"Bone_Head"}}]},{"class":"cBoneAnchor","name":"Bone_R_Hand","guid":[1365265308,2584495651,3179854900,2314059387],"parentGuid":[2086577372,1035157785,2412732698,2224839101],"components":[{"id":0,"class":"sRegularTransform","data":{"m_localPosition":[0.42007315158843996,0.8170100450515747,-0.030684301629662515],"m_localRotation":[-0.1410028487443924,0.020078323781490327,0.8559507131576538,0.4970547556877136]}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"Bone_R_Hand"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":10,"class":"sBoneAnchorComponent","data":{"m_boneName":"Bone_R_Hand"}}]},{"class":"cBoneAnchor","name":"Bone_L_Hand","guid":[1001141281,105596195,2413995681,1572381856],"parentGuid":[2086577372,1035157785,2412732698,2224839101],"components":[{"id":0,"class":"sRegularTransform","data":{"m_localPosition":[-0.42007410526275637,0.8170078992843628,-0.03068457916378975],"m_localRotation":[0.855949342250824,0.4970574975013733,-0.14100156724452973,0.020079489797353746]}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"Bone_L_Hand"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":10,"class":"sBoneAnchorComponent","data":{"m_boneName":"Bone_L_Hand"}}]},{"class":"cBoneAnchor","name":"Bone_Pelvis","guid":[3930266631,3765193548,2657671196,2444667291],"parentGuid":[2086577372,1035157785,2412732698,2224839101],"components":[{"id":0,"class":"sRegularTransform","data":{"m_localPosition":[3.2823265883052957e-7,0.7860299348831177,-0.06749985367059708],"m_localRotation":[0.500001072883606,-0.5000002980232239,-0.49999892711639407,0.4999997019767761]}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"Bone_Pelvis"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":10,"class":"sBoneAnchorComponent","data":{"m_boneName":"Bone_Pelvis"}}]},{"class":"cBoneAnchor","name":"Bone_R_Foot","guid":[1011560467,1551582414,3132691223,44035332],"parentGuid":[2086577372,1035157785,2412732698,2224839101],"components":[{"id":0,"class":"sRegularTransform","data":{"m_localPosition":[0.1584281176328659,0.11951874941587448,-0.10738077759742737],"m_localRotation":[0.548750102519989,0.5487515926361084,0.445951908826828,0.44595056772232058]}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"Bone_R_Foot"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":10,"class":"sBoneAnchorComponent","data":{"m_boneName":"Bone_R_Foot"}}]},{"class":"cBoneAnchor","name":"Bone_L_Foot","guid":[3538847244,808075570,2480843790,1198870357],"parentGuid":[2086577372,1035157785,2412732698,2224839101],"components":[{"id":0,"class":"sRegularTransform","data":{"m_localPosition":[-0.15842431783676148,0.11951778084039688,-0.1073804646730423],"m_localRotation":[0.4459499716758728,0.4459512233734131,0.5487523078918457,0.5487504601478577]}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"Bone_L_Foot"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":10,"class":"sBoneAnchorComponent","data":{"m_boneName":"Bone_L_Foot"}}]},{"class":"cUiSurfaceUiObject","name":"GuiName","guid":[1125722335,3058388144,3049080368,3993769425],"parentGuid":[821939657,2231651804,3205518288,3133023722],"components":[{"id":0,"class":"sFullTransform","data":{"m_localPosition":[0.0,2.0,0.0]}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"GuiName"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":20,"class":"sRenderComponent","data":{}},{"id":26,"class":"sUiSurfaceUiComponent","data":{"m_pivot":[0.0,0.0],"m_anchorsX":[0.0,0.0],"m_anchorsY":[0.0,0.0],"m_anchor":"kAlignBottomLeft","m_anchorPercent":[0.0,0.0],"m_alignment":"kAlignBottomLeft","m_alignmentPercent":[0.0,0.0],"m_preSize":[300.0,80.0],"m_billboard":true,"m_size":[300.0,80.0],"m_disappearDistance":15,"m_originSize":[300.0,80.0]}}]},{"class":"cUiTextObject","name":"TxtNameBar1","guid":[1696067722,1172258881,2336397010,3223749558],"parentGuid":[1125722335,3058388144,3049080368,3993769425],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"TxtNameBar1"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":20,"class":"sRenderComponent","data":{}},{"id":23,"class":"sUiTextComponent","data":{"m_addedSize":[300.0,80.0],"m_widgetSize":[300.0,80.0],"m_anchor":"kAlignBottomLeft","m_preSize":[300.0,80.0],"m_oldTreeLevelVersion":true,"m_finalSize":[300.0,80.0],"m_offset":[1.0,6.0],"m_preOffset":[1.0,6.0],"m_autoScale":true,"m_autoScaleType":"ByParentScale","m_text":"","m_textColor":[0.12941177189350129,0.0,0.0,1.0],"m_fontSize":32,"m_fontType":"kMFFangHei","m_wrap":true}}]},{"class":"cUiTextObject","name":"TxtNameBar2","guid":[2468294059,1953254650,2177078309,3514973383],"parentGuid":[1125722335,3058388144,3049080368,3993769425],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"TxtNameBar2"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":20,"class":"sRenderComponent","data":{}},{"id":23,"class":"sUiTextComponent","data":{"m_addedSize":[300.0,80.0],"m_widgetSize":[300.0,80.0],"m_order":1,"m_anchor":"kAlignBottomLeft","m_preSize":[300.0,80.0],"m_finalSize":[300.0,80.0],"m_offset":[-2.0,10.0],"m_preOffset":[-2.0,10.0],"m_autoScale":true,"m_autoScaleType":"ByParentScale","m_text":"","m_textColor":[1.0,1.0,1.0,1.0],"m_fontSize":32,"m_fontType":"kMFFangHei","m_wrap":true}}]},{"class":"cUiSurfaceUiObject","name":"GuiHealth","guid":[4034155431,2533639325,2692867804,1867815364],"parentGuid":[821939657,2231651804,3205518288,3133023722],"components":[{"id":0,"class":"sFullTransform","data":{"m_localPosition":[0.0,1.9199999570846558,0.0]}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"GuiHealth"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":20,"class":"sRenderComponent","data":{}},{"id":26,"class":"sUiSurfaceUiComponent","data":{"m_pivot":[0.0,0.0],"m_anchorsX":[0.0,0.0],"m_anchorsY":[0.0,0.0],"m_anchor":"kAlignBottomLeft","m_anchorPercent":[0.0,0.0],"m_alignment":"kAlignBottomLeft","m_alignmentPercent":[0.0,0.0],"m_preSize":[160.0,80.0],"m_billboard":true,"m_size":[160.0,80.0],"m_disappearDistance":50000,"m_originSize":[160.0,80.0]}}]},{"class":"cUiImageObject","name":"ImgBackground","guid":[338025634,585255119,2220664251,1278664055],"parentGuid":[4034155431,2533639325,2692867804,1867815364],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"ImgBackground"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":20,"class":"sRenderComponent","data":{}},{"id":22,"class":"sUiImageComponent","data":{"m_addedSize":[160.0,31.0],"m_widgetSize":[160.0,31.0],"m_pivot":[0.0,0.0],"m_anchorsX":[0.0,0.0],"m_anchorsY":[0.0,0.0],"m_anchor":"kAlignBottomLeft","m_anchorPercent":[0.0,0.0],"m_alignment":"kAlignBottomLeft","m_alignmentPercent":[0.0,0.0],"m_preSize":[160.0,31.0],"m_acceptRaycastWhenEdit":true,"m_prePivot":[0.0,0.0],"m_preAnchorsX":[0.0,0.0],"m_preAnchorsY":[0.0,0.0],"m_finalSize":[160.0,31.0],"m_offset":[-0.00000667572021484375,6.0],"m_preOffset":[-0.00000667572021484375,6.0],"m_imagePriSize":[136.0,28.0],"m_textureRef":{"m_guid":[2748549193,222842754,2941154731,726271496],"m_revision":0,"m_type":"kTexture","m_autoGenerated":false},"m_imageColor":[1.0,1.0,1.0,0.9555555582046509],"m_averageColor":[0.0,0.0,0.0,1.0],"m_averageColorReciprocal":[1.0,1.0,1.0,5.666666507720947]}}]},{"class":"cUiImageObject","name":"ImgHealthBar","guid":[1576207627,2101430091,2207640803,2968758436],"parentGuid":[338025634,585255119,2220664251,1278664055],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"ImgHealthBar"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":20,"class":"sRenderComponent","data":{}},{"id":22,"class":"sUiImageComponent","data":{"m_widgetSize":[144.0,12.399998664855957],"m_pivot":[0.0,0.0],"m_anchorsX":[0.05000000074505806,0.949999988079071],"m_anchorsY":[0.30000001192092898,0.699999988079071],"m_anchor":"kAlignBottomLeft","m_anchorPercent":[0.0,0.0],"m_alignment":"kAlignBottomLeft","m_alignmentPercent":[0.0,0.0],"m_preSize":[144.0,12.399998664855957],"m_acceptRaycastWhenEdit":true,"m_prePivot":[0.0,0.0],"m_preAnchorsX":[0.05000000074505806,0.949999988079071],"m_preAnchorsY":[0.30000001192092898,0.699999988079071],"m_finalSize":[144.0,12.399998664855957],"m_imagePriSize":[124.0,16.0],"m_textureRef":{"m_guid":[364921788,1323712570,2497125887,1146669227],"m_revision":0,"m_type":"kTexture","m_autoGenerated":false},"m_imageColor":[4.5625,1.0,3.161290407180786,1.0],"m_averageColor":[0.0,0.0,0.0,1.0],"m_averageColorReciprocal":[15.937499046325684,1.0,8.22580623626709,1.0]}}]},{"class":"cFolderObject","name":"GuideArchetype","guid":[3400473244,3365555972,2631620779,859012143],"parentGuid":[2301495294,1274365006,3003438828,1864040556],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"GuideArchetype"}},{"id":40000,"class":"sScriptHelperComponent","data":{}}]},{"class":"cUiScreenUiObject","name":"ClickGuide","guid":[1842428836,345787649,2571661232,1987629126],"parentGuid":[3400473244,3365555972,2631620779,859012143],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"ClickGuide"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":20,"class":"sRenderComponent","data":{}},{"id":26,"class":"sUiScreenUiComponent","data":{"m_order":100,"m_preSize":[1368.0,700.0]}}]},{"class":"cUiFigureObject","name":"FigBackground","guid":[992452523,2076396946,3153625713,3352681626],"parentGuid":[1842428836,345787649,2571661232,1987629126],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"FigBackground"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":20,"class":"sRenderComponent","data":{}},{"id":24,"class":"sUiFigureComponent","data":{"m_widgetSize":[2000.0,1019.089599609375],"m_anchorsX":[0.0,1.0],"m_anchorsY":[0.0,1.0],"m_preSize":[2000.0,1019.089599609375],"m_acceptRaycastWhenEdit":true,"m_preAnchorsX":[0.0,1.0],"m_preAnchorsY":[0.0,1.0],"m_finalSize":[2000.0,1019.089599609375],"m_bgColor":[0.0,0.0,0.0,0.3921568691730499],"m_borderColor":[0.0,0.0,0.0,0.3921568691730499]}}]},{"class":"cUiImageObject","name":"ImgDot","guid":[2485341161,2908308670,2799790715,2139064834],"parentGuid":[1842428836,345787649,2571661232,1987629126],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"ImgDot"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":20,"class":"sRenderComponent","data":{}},{"id":22,"class":"sUiImageComponent","data":{"m_addedSize":[47.0,47.0],"m_widgetSize":[47.0,47.0],"m_order":1,"m_preSize":[47.0,47.0],"m_acceptRaycastWhenEdit":true,"m_finalSize":[47.0,47.0],"m_imagePriSize":[47.0,47.0],"m_textureRef":{"m_guid":[953679908,159793237,2165885860,1104393525],"m_revision":0,"m_type":"kTexture","m_autoGenerated":false},"m_averageColor":[0.0,0.0,0.0,1.0],"m_averageColorReciprocal":[1.0,1.0,1.0,1.043182373046875]}}]},{"class":"cUiImageObject","name":"ImgHand","guid":[993241651,2764390417,2743306837,105997115],"parentGuid":[2485341161,2908308670,2799790715,2139064834],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"ImgHand"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":20,"class":"sRenderComponent","data":{}},{"id":22,"class":"sUiImageComponent","data":{"m_addedSize":[151.0,192.0],"m_widgetSize":[151.0,192.0],"m_pivot":[0.3499999940395355,1.5],"m_anchorPercent":[0.3499999940395355,1.5],"m_preSize":[151.0,192.0],"m_acceptRaycastWhenEdit":true,"m_prePivot":[0.3499999940395355,1.5],"m_finalSize":[151.0,192.0],"m_imagePriSize":[151.0,192.0],"m_textureRef":{"m_guid":[1260272136,125914301,2612360310,1584440831],"m_revision":0,"m_type":"kTexture","m_autoGenerated":false},"m_averageColor":[0.0,0.0,0.0,1.0],"m_averageColorReciprocal":[1.0,1.0,1.0,1.0673081874847413]}}]},{"class":"cUiImageObject","name":"ImgCircle","guid":[1400665507,1446726149,2961462231,1374735632],"parentGuid":[2485341161,2908308670,2799790715,2139064834],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"ImgCircle"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":20,"class":"sRenderComponent","data":{}},{"id":22,"class":"sUiImageComponent","data":{"m_addedSize":[276.0,276.0],"m_widgetSize":[276.0,276.0],"m_order":1,"m_preSize":[276.0,276.0],"m_acceptRaycastWhenEdit":true,"m_finalSize":[276.0,276.0],"m_imagePriSize":[276.0,276.0],"m_textureRef":{"m_guid":[3420273076,1898989905,2838226766,2988281017],"m_revision":0,"m_type":"kTexture","m_autoGenerated":false},"m_averageColor":[0.0,0.0,0.0,1.0],"m_averageColorReciprocal":[1.0,1.0,1.0,1.1137033700942994]}}]},{"class":"cUiFigureObject","name":"FigTextBox","guid":[1422966223,3713485801,2629189369,1299316199],"parentGuid":[2485341161,2908308670,2799790715,2139064834],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"FigTextBox"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":20,"class":"sRenderComponent","data":{}},{"id":24,"class":"sUiFigureComponent","data":{"m_addedSize":[400.0,100.0],"m_widgetSize":[400.0,100.0],"m_order":2,"m_anchorsY":[3.0,3.0],"m_preSize":[400.0,100.0],"m_acceptRaycastWhenEdit":true,"m_preAnchorsY":[3.0,3.0],"m_finalSize":[400.0,100.0],"m_bgColor":[0.0,0.0,0.0,0.3921568691730499],"m_borderColor":[0.0,0.0,0.0,0.3921568691730499]}}]},{"class":"cUiTextObject","name":"TxtContent","guid":[292836596,599213714,2606384497,1966083576],"parentGuid":[1422966223,3713485801,2629189369,1299316199],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"TxtContent"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":20,"class":"sRenderComponent","data":{}},{"id":23,"class":"sUiTextComponent","data":{"m_addedSize":[200.0,60.0],"m_widgetSize":[200.0,60.0],"m_order":1,"m_preSize":[200.0,60.0],"m_acceptRaycastWhenEdit":true,"m_finalSize":[200.0,60.0],"m_text":"","m_textColor":[1.0,1.0,1.0,1.0],"m_fontSize":24}}]},{"class":"cUiButtonObject","name":"BtnClose","guid":[1548866236,2510702909,2963853067,1419111432],"parentGuid":[2485341161,2908308670,2799790715,2139064834],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"BtnClose"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":20,"class":"sRenderComponent","data":{}},{"id":26,"class":"sUiButtonComponent","data":{"m_addedSize":[140.0,140.0],"m_widgetSize":[140.0,140.0],"m_order":3,"m_preSize":[140.0,140.0],"m_acceptRaycastWhenEdit":true,"m_finalSize":[140.0,140.0],"m_alpha":0.0}}]},{"class":"cScriptObject","name":"GuideEffectScript","guid":[3575161319,3022602991,2563733590,2740030566],"parentGuid":[1842428836,345787649,2571661232,1987629126],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"GuideEffectScript"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":10,"class":"sLuaComponent","data":{"m_luaContent":"---引导系统-客户端表现\r\n---@script Guide effect\r\n---@copyright Lilith Games, Avatar Team\r\n---@author Sid Zhang\r\n\r\nlocal root = script.Parent\r\nlocal tweenerHand = Tween:TweenProperty(root.ImgDot.ImgHand, {Pivot = Vector2(0.35, 1)}, 0.5, Enum.EaseCurve.Linear)\r\nlocal tweenerCircle =\r\n    Tween:TweenProperty(root.ImgDot.ImgCircle, {Size = Vector2(276, 276), Alpha = 0}, 0.5, Enum.EaseCurve.Linear)\r\n\r\n::Repeat::\r\n--重置UI位置与状态\r\nroot.ImgDot.ImgHand.Pivot = Vector2(0.35, 1.5)\r\nroot.ImgDot.ImgCircle.Size = Vector2(48, 48)\r\nroot.ImgDot.ImgCircle.Alpha = 1\r\ntweenerHand:Play()\r\ntweenerHand:WaitForComplete()\r\ntweenerCircle:Play()\r\ntweenerCircle:WaitForComplete()\r\ngoto Repeat\r\n"}}]}]},{"ObjectsLinker":[{"class":"cWorkspace","name":"World","guid":[1981988479,3555894,2597800867,69741929],"spaceId":"kDefaultSpace","objectType":0},{"class":"cWorkspace","name":"Global","guid":[344576033,1668630255,2683907297,2226597768],"spaceId":"kDefaultSpace","objectType":0},{"class":"cScriptObject","name":"LuaFunctionScript","guid":[3330332978,589909841,2774054172,1565862559],"spaceId":"kDefaultSpace","objectType":0},{"class":"cScriptObject","name":"ModuleRequireScript","guid":[2221840009,1976321846,2245245619,407532979],"spaceId":"kDefaultSpace","objectType":0},{"class":"cScriptObject","name":"AutoAssignTeamScript","guid":[1988307774,2442019711,2592872571,1277204125],"spaceId":"kDefaultSpace","objectType":0},{"class":"cFolderObject","name":"Utility","guid":[1158799413,2751941742,3186700785,1570109853],"spaceId":"kDefaultSpace","objectType":0},{"class":"cModuleScriptObject","name":"NetUtilModule","guid":[3138092138,940262650,3093420508,667201143],"spaceId":"kDefaultSpace","objectType":0},{"class":"cModuleScriptObject","name":"CsvUtilModule","guid":[3433342930,3050064207,3042438006,35244977],"spaceId":"kDefaultSpace","objectType":0},{"class":"cModuleScriptObject","name":"EventUitlModule","guid":[2990017477,1670333273,2674323178,1532840206],"spaceId":"kDefaultSpace","objectType":0},{"class":"cModuleScriptObject","name":"LogUtilModule","guid":[331530011,3698477199,2826898349,1604055611],"spaceId":"kDefaultSpace","objectType":0},{"class":"cModuleScriptObject","name":"CamUtilModule","guid":[1811723231,1873694369,3200685174,4215485454],"spaceId":"kDefaultSpace","objectType":0},{"class":"cModuleScriptObject","name":"UuidModule","guid":[4105454780,3236446477,3000779626,2374634919],"spaceId":"kDefaultSpace","objectType":0},{"class":"cModuleScriptObject","name":"LuaJsonUtilModule","guid":[758916311,3749724666,2270297798,2806016452],"spaceId":"kDefaultSpace","objectType":0},{"class":"cModuleScriptObject","name":"ObjPoolUtilModule","guid":[224260482,2246003615,2615419330,1326750316],"spaceId":"kDefaultSpace","objectType":0},{"class":"cModuleScriptObject","name":"SoundUtilModule","guid":[2791942787,3066971825,2597952715,4258126891],"spaceId":"kDefaultSpace","objectType":0},{"class":"cModuleScriptObject","name":"LinkedListModule","guid":[1855297973,3798353823,2294500910,1039830298],"spaceId":"kDefaultSpace","objectType":0},{"class":"cFolderObject","name":"Plugin","guid":[3421449223,220021494,2714239174,1946870819],"spaceId":"kDefaultSpace","objectType":0},{"class":"cFolderObject","name":"FUNC_UIAnimation","guid":[1331349991,2616282402,2630754420,1905460436],"spaceId":"kDefaultSpace","objectType":0},{"class":"cFolderObject","name":"Code","guid":[2747130650,1726107529,2983478535,4170811724],"spaceId":"kDefaultSpace","objectType":0},{"class":"cModuleScriptObject","name":"DataModule","guid":[2329789835,1245463234,2338128988,1464284537],"spaceId":"kDefaultSpace","objectType":0},{"class":"cModuleScriptObject","name":"AnimationMainModule","guid":[2680157156,1245725629,2963263301,1750898223],"spaceId":"kDefaultSpace","objectType":0},{"class":"cFolderObject","name":"FUNC_Guide","guid":[1446776724,3800580518,2279243129,2439855281],"spaceId":"kDefaultSpace","objectType":0},{"class":"cModuleScriptObject","name":"GuideSystemModule","guid":[454206779,4231676146,2841482287,3968778047],"spaceId":"kDefaultSpace","objectType":0},{"class":"cFolderObject","name":"Define","guid":[3643209718,4192551772,2636302611,3473650035],"spaceId":"kDefaultSpace","objectType":0},{"class":"cModuleScriptObject","name":"GlobalDefModule","guid":[3584163079,3374337710,2390188471,2399437392],"spaceId":"kDefaultSpace","objectType":0},{"class":"cModuleScriptObject","name":"ConstDefModule","guid":[1768866970,2821735027,2612949907,3460044805],"spaceId":"kDefaultSpace","objectType":0},{"class":"cFolderObject","name":"Module","guid":[2883110320,3875490972,2778882821,1569891889],"spaceId":"kDefaultSpace","objectType":0},{"class":"cFolderObject","name":"S_Module","guid":[2325219688,3448000480,2204321929,4246846969],"spaceId":"kDefaultSpace","objectType":0},{"class":"cModuleScriptObject","name":"GameMgrModule","guid":[112830824,171854255,2946136964,1894336579],"spaceId":"kDefaultSpace","objectType":0},{"class":"cModuleScriptObject","name":"GameCsvModule","guid":[112798298,387337249,2420484563,3059665706],"spaceId":"kDefaultSpace","objectType":0},{"class":"cModuleScriptObject","name":"TimeMgrModule","guid":[284737459,3705621769,2322183270,2078970709],"spaceId":"kDefaultSpace","objectType":0},{"class":"cModuleScriptObject","name":"ExampleAModule","guid":[2387834855,1574587674,2670415526,3557140699],"spaceId":"kDefaultSpace","objectType":0},{"class":"cFolderObject","name":"C_Module","guid":[2085024476,779046503,2599607412,4053327341],"spaceId":"kDefaultSpace","objectType":0},{"class":"cModuleScriptObject","name":"PlayerMgrModule","guid":[1039137540,2610905714,3183561849,1647783672],"spaceId":"kDefaultSpace","objectType":0},{"class":"cModuleScriptObject","name":"PlayerCsvModule","guid":[2729918295,1728660374,3050895705,1791746946],"spaceId":"kDefaultSpace","objectType":0},{"class":"cModuleScriptObject","name":"ExampleBModule","guid":[646356249,1292323580,2768118403,2865367294],"spaceId":"kDefaultSpace","objectType":0},{"class":"cFolderObject","name":"Csv","guid":[2272249561,3378007281,2688214392,3190071702],"spaceId":"kDefaultSpace","objectType":0},{"class":"cTableObject","name":"Sound","guid":[3493131070,3460776380,2414127771,1386876338],"spaceId":"kDefaultSpace","objectType":0},{"class":"cTableObject","name":"UIAnimation","guid":[1097962876,3754445060,2192136032,4179300550],"spaceId":"kDefaultSpace","objectType":0},{"class":"cTableObject","name":"Example01","guid":[1009384381,1318601170,2335100178,2096260731],"spaceId":"kDefaultSpace","objectType":0},{"class":"cTableObject","name":"Example02","guid":[519619536,3748807551,2763899961,330082025],"spaceId":"kDefaultSpace","objectType":0},{"class":"cDataStoreObject","name":"DataStore","guid":[2710467589,909002119,2168690283,4082947604],"spaceId":"kDefaultSpace","objectType":0},{"class":"cFolderObject","name":"S_Event","guid":[3388698598,504056136,2819280548,3600804874],"spaceId":"kDefaultSpace","objectType":0},{"class":"cCustomEventObject","name":"Example01CustomEvent","guid":[1849321353,1174686080,2581212444,423150465],"spaceId":"kDefaultSpace","objectType":0},{"class":"cCustomEventObject","name":"Example02CustomEvent","guid":[2464372298,3888661849,2219280214,4227873962],"spaceId":"kDefaultSpace","objectType":0},{"class":"cCustomEventObject","name":"Example03CustomEvent","guid":[3522954919,4107421185,2760879892,839023523],"spaceId":"kDefaultSpace","objectType":0},{"class":"cFolderObject","name":"S_Code","guid":[3588299831,2838581107,2638019367,1912244102],"spaceId":"kDefaultSpace","objectType":0},{"class":"cScriptObject","name":"ServerMain","guid":[3478165892,3968682922,3091200964,3154749412],"spaceId":"kDefaultSpace","objectType":0},{"class":"cFolderObject","name":"Test","guid":[1121972396,3387441651,2555498827,995696856],"spaceId":"kDefaultSpace","objectType":0},{"class":"cScriptObject","name":"TestServerMainScript","guid":[2047870622,3659025888,2164427045,478373359],"spaceId":"kDefaultSpace","objectType":0},{"class":"cScriptObject","name":"TestTimeMgrScript","guid":[2274526775,1538082644,2178394526,1746432296],"spaceId":"kDefaultSpace","objectType":0},{"class":"cScriptObject","name":"TestUuidScript","guid":[368416891,4081337539,2747298938,74001986],"spaceId":"kDefaultSpace","objectType":0},{"class":"cScriptObject","name":"TestLinkedListScript","guid":[330541558,674188470,2346921062,4021525952],"spaceId":"kDefaultSpace","objectType":0},{"class":"cPrimitiveObject","name":"BaseFloor","guid":[4211227124,399589691,2212667733,3335218667],"spaceId":"kDefaultSpace","objectType":0},{"class":"cFolderObject","name":"SpawnLocations","guid":[1803916521,3674621259,2355104850,441818688],"spaceId":"kDefaultSpace","objectType":0},{"class":"cStartPortal","name":"StartPortal00","guid":[362184257,1300644271,2169624314,2670603163],"spaceId":"kDefaultSpace","objectType":0},{"class":"cStartPortal","name":"StartPortal01","guid":[651144420,800934336,3039799213,1377036607],"spaceId":"kDefaultSpace","objectType":0},{"class":"cStartPortal","name":"StartPortal02","guid":[4009425966,1206468687,2439525561,4287493119],"spaceId":"kDefaultSpace","objectType":0},{"class":"cStartPortal","name":"StartPortal03","guid":[3415283602,2930724749,3175953031,3420113780],"spaceId":"kDefaultSpace","objectType":0},{"class":"cAudioSource","name":"BGM","guid":[1596674502,2319271992,2900844459,2801180766],"spaceId":"kDefaultSpace","objectType":-842150451},{"class":"cSkydome","name":"Sky","guid":[3956874685,1991789763,3220541584,1456680764],"spaceId":"kDefaultSpace","objectType":-842150451},{"class":"cFolderObject","name":"Players","guid":[3397398191,850542637,3138524115,1333674022],"spaceId":"kDefaultSpace","objectType":0},{"class":"cPlayerInstanceSlot","name":"PlayerInstanceSlot","guid":[718760084,1257915969,2962466066,2150526306],"spaceId":"kDefaultSpace","objectType":0},{"class":"cPlayerInstanceSlot","name":"PlayerInstanceSlot","guid":[438081159,4019275113,2394302102,997050187],"spaceId":"kDefaultSpace","objectType":0},{"class":"cPlayerInstanceSlot","name":"PlayerInstanceSlot","guid":[154289415,229392516,2254790969,287930189],"spaceId":"kDefaultSpace","objectType":0},{"class":"cTerrainObject","name":"Terrain","guid":[2381081137,2979483093,3156488065,1492146101],"spaceId":"kDefaultSpace","objectType":0}],"ObjectsData":[{"class":"cWorkspace","name":"World","guid":[1981988479,3555894,2597800867,69741929],"parentGuid":[0,0,0,0],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"World"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":10,"class":"sWorkspaceComponent","data":{}},{"id":11,"class":"sConfigPhysicsComponent","data":{"m_collisionGroupMaskFlags":[0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}}]},{"class":"cWorkspace","name":"Global","guid":[344576033,1668630255,2683907297,2226597768],"parentGuid":[1981988479,3555894,2597800867,69741929],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"Global"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":10,"class":"sWorkspaceComponent","data":{}},{"id":11,"class":"sConfigPhysicsComponent","data":{"m_collisionGroupMaskFlags":[0,3,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}}]},{"class":"cScriptObject","name":"LuaFunctionScript","guid":[3330332978,589909841,2774054172,1565862559],"parentGuid":[344576033,1668630255,2683907297,2226597768],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"LuaFunctionScript"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":10,"class":"sLuaComponent","data":{"m_luaContent":"--- 提供一组常用函数，以及对 Lua 标准库的扩展\r\n-- @script Lua function extension libraries\r\n-- @author Lilith Games, Avatar Team\r\n-- @see https://wiki.lilithgames.com/x/tSkMAg\r\n\r\n--- 检查并尝试转换为数值，如果无法转换则返回 0\r\n-- @param mixed value 要检查的值\r\n-- @param [integer base] 进制，默认为十进制\r\n-- @return number\r\nfunction checknumber(value, base)\r\n    return tonumber(value, base) or 0\r\nend\r\n\r\n--- 检查是否是有效的number类型\r\n-- @param number\r\nfunction isValidNumber(num)\r\n    return num ~= nil and num > 0\r\nend\r\n\r\n--- 检查并尝试转换为整数，如果无法转换则返回 0\r\n-- @param mixed value 要检查的值\r\n-- @return integer\r\nfunction checkint(value)\r\n    return math.round(checknumber(value))\r\nend\r\n\r\n--- 检查并尝试转换为布尔值，除了 nil 和 false，其他任何值都会返回 true\r\n-- @param mixed value 要检查的值\r\n-- @return boolean\r\nfunction checkbool(value)\r\n    return (value ~= nil and value ~= false)\r\nend\r\n\r\n--- 检查值是否是一个表格，如果不是则返回一个空表格\r\n-- @param mixed value 要检查的值\r\n-- @return table\r\nfunction checktable(value)\r\n    if type(value) ~= 'table' then\r\n        value = {}\r\n    end\r\n    return value\r\nend\r\n\r\n--- 处理对象\r\n-- @param mixed obj Lua 对象\r\n-- @param function method 对象方法\r\n-- @return function\r\nfunction handler(obj, method)\r\n    return function(...)\r\n        return method(obj, ...)\r\n    end\r\nend\r\n\r\n--- 计算表格包含的字段数量\r\n-- Lua table 的 \"#\" 操作只对依次排序的数值下标数组有效，table.nums() 则计算 table 中所有不为 nil 的值的个数。\r\n-- @param table\r\nfunction table.nums(t)\r\n    if t == nil then\r\n        return 0\r\n    end\r\n    local count = 0\r\n    for k, v in pairs(t) do\r\n        count = count + 1\r\n    end\r\n    return count\r\nend\r\n\r\n--- 返回指定表格中的所有键\r\n-- @param k-v table\r\n-- @return keys' table\r\n-- @usage example\r\n-- local hashtable = {a = 1, b = 2, c = 3}\r\n-- local keys = table.keys(hashtable)\r\n-- >> keys = {\"a\", \"b\", \"c\"}\r\nfunction table.keys(hashtable)\r\n    local keys = {}\r\n    for k, _ in pairs(hashtable) do\r\n        table.insert(keys, k)\r\n    end\r\n    return keys\r\nend\r\n\r\n--- 返回指定表格中的所有值\r\n-- @param k-v table\r\n-- @return values' table\r\n-- @usage example\r\n-- local hashtable = {a = 1, b = 2, c = 3}\r\n-- local values = table.values(hashtable)\r\n-- >> values = {1, 2, 3}\r\nfunction table.values(hashtable)\r\n    local values = {}\r\n    local i = 1\r\n    for k, v in pairs(hashtable) do\r\n        values[i] = v\r\n        i = i + 1\r\n    end\r\n    return values\r\nend\r\n\r\n--- 将来源表格中所有键及其值复制到目标表格对象中，如果存在同名键，则覆盖其值\r\n-- @param target table\r\n-- @param source table\r\n-- @usage example\r\n-- local dest = {a = 1, b = 2}\r\n-- local src  = {c = 3, d = 4}\r\n-- table.merge(dest, src)\r\n-- >> dest = {a = 1, b = 2, c = 3, d = 4}\r\nfunction table.merge(dest, src)\r\n    for k, v in pairs(src) do\r\n        dest[k] = v\r\n    end\r\nend\r\n\r\n--- 在目标表格的指定位置插入来源表格，如果没有指定位置则连接两个表格\r\n-- @param target table\r\n-- @param source table\r\n-- @param start index\r\n-- @usage example #1\r\n-- local dest = {1, 2, 3}\r\n-- local src  = {4, 5, 6}\r\n-- table.insertto(dest, src)\r\n-- >> dest = {1, 2, 3, 4, 5, 6}\r\n-- @usage example #2\r\n-- local dest = {1, 2, 3}\r\n-- local src  = {4, 5, 6}\r\n-- table.insertto(dest, src, 5)\r\n-- >> dest = {1, 2, 3, nil, 4, 5, 6}\r\nfunction table.insertto(dest, src, begin)\r\n    if begin == nil then\r\n        begin = #dest + 1\r\n    else\r\n        begin = checkint(begin)\r\n        if begin <= 0 then\r\n            begin = #dest + 1\r\n        end\r\n    end\r\n\r\n    local len = #src\r\n    for i = 0, len - 1 do\r\n        dest[i + begin] = src[i + 1]\r\n    end\r\nend\r\n\r\n--- 从表格中查找指定值，返回其索引，如果没找到返回 false\r\n-- @param array table\r\n-- @param target value\r\n-- @param start index\r\n-- @return index or false\r\n-- @usage example\r\n-- local array = {\"a\", \"b\", \"c\"}\r\n-- print(table.indexof(array, \"b\"))\r\n-- >> 2\r\nfunction table.indexof(array, value, begin)\r\n    if array ~= nil then\r\n        for i = begin or 1, #array do\r\n            if array[i] == value then\r\n                return i\r\n            end\r\n        end\r\n    end\r\n    return 0\r\nend\r\n\r\n--- 检查表格中是否存在指定值\r\n-- @param array table\r\n-- @param target value\r\n-- @return @boolean\r\nfunction table.exists(array, value)\r\n    return table.indexof(array, value) > 0\r\nend\r\n\r\n--- 清空数组表格\r\n-- @param array table\r\nfunction table.cleararray(array)\r\n    if array ~= nil then\r\n        local count = #array\r\n        while count > 0 do\r\n            table.remove(array, count)\r\n            count = #array\r\n        end\r\n    end\r\nend\r\n\r\n--- 清空k-v表格\r\n-- @param k-v table\r\nfunction table.clearhashtable(hashtable)\r\n    if hashtable ~= nil then\r\n        for k, v in pairs(hashtable) do\r\n            hashtable[k] = nil\r\n        end\r\n    end\r\nend\r\n\r\n--- 清空表格\r\n-- @param table\r\n-- @see table.clearhashtable\r\nfunction table.cleartable(t)\r\n    table.clearhashtable(t)\r\nend\r\n\r\n--- 截取Array其中一段，startIndex从1开始 return截取后的新数组\r\n-- @param table array table\r\n-- @param @number start index\r\n-- @param @number length\r\n-- @return @table array table\r\n-- @usage example\r\n-- local array = {\"a\", \"b\", \"c\", \"d\"}\r\n-- print(table.subArray(array, 2, 2))\r\n-- >> {\"b\", \"c\"}\r\nfunction table.subArray(array, startIndex, length)\r\n    if array ~= nil then\r\n        local count = table.nums(array)\r\n        local tempArray = array\r\n        array = {}\r\n        if startIndex <= count then\r\n            local maxlength = count - startIndex + 1\r\n            length = length > maxlength and maxlength or length\r\n            local endIndex = startIndex + length - 1\r\n            for i = startIndex, endIndex do\r\n                table.insert(array, tempArray[i])\r\n            end\r\n        end\r\n    end\r\n    return array\r\nend\r\n\r\n--- 截取Array的后半段，startIndex从1开始 return截取后的新数组\r\n-- @param table array table\r\n-- @param @number start index\r\n-- @return @table array table\r\nfunction table.subArrayByStartIndex(array, startIndex)\r\n    if array ~= nil then\r\n        local count = table.nums(array)\r\n        local length = count - startIndex + 1\r\n        return table.subArray(array, startIndex, length)\r\n    end\r\n    return array\r\nend\r\n\r\n--- 从表格中查找指定值，返回其 key，如果没找到返回 nil\r\n-- @param table hash table\r\n-- @param any value\r\n-- @return key of value\r\n-- @usage\r\n-- local hashtable = {name = \"dualface\", comp = \"chukong\"}\r\n-- print(table.keyof(hashtable, \"chukong\"))\r\n-- >> comp\r\nfunction table.keyof(hashtable, value)\r\n    for k, v in pairs(hashtable) do\r\n        if v == value then\r\n            return k\r\n        end\r\n    end\r\n    return nil\r\nend\r\n\r\n--- 从表格中删除指定值，返回删除的值的个数\r\n-- @usage\r\n-- local array = {\"a\", \"b\", \"c\", \"c\"}\r\n-- print(table.removebyvalue(array, \"c\", true))\r\n-- >> 输出 2\r\nfunction table.removebyvalue(array, value, removeall)\r\n    local c, i, max = 0, 1, #array\r\n    while i <= max do\r\n        if array[i] == value then\r\n            table.remove(array, i)\r\n            c = c + 1\r\n            i = i - 1\r\n            max = max - 1\r\n            if not removeall then\r\n                break\r\n            end\r\n        end\r\n        i = i + 1\r\n    end\r\n    return c\r\nend\r\n\r\n--- 对表格中每一个值执行一次指定的函数，并用函数返回值更新表格内容\r\n-- @param table\r\n-- @param function fn 参数指定的函数具有两个参数，并且返回一个值。原型如下：\r\n-- function map_function(value, key)\r\n--     return value\r\n-- end\r\n-- @usage\r\n-- local t = {name = \"dualface\", comp = \"chukong\"}\r\n-- table.map(t, function(v, k)\r\n--    -- 在每一个值前后添加括号\r\n--    return \"[\" .. v .. \"]\"\r\n-- end)\r\n-- 输出修改后的表格内容\r\n-- for k, v in pairs(t) do\r\n--     print(k, v)\r\n-- end\r\n-- >> 输出\r\n-- name [dualface]\r\n-- comp [chukong]\r\nfunction table.map(t, fn)\r\n    for k, v in pairs(t) do\r\n        t[k] = fn(v, k)\r\n    end\r\nend\r\n\r\n--- 对表格中每一个值执行一次指定的函数，但不改变表格内容\r\n-- @param table\r\n-- @param function fn 参数指定的函数具有两个参数，没有返回值。原型如下：\r\n-- function map_function(value, key)\r\n--     -- no return here\r\n-- end\r\n-- @usage\r\n-- local t = {name = \"dualface\", comp = \"chukong\"}\r\n-- table.walk(t, function(v, k)\r\n--     -- 输出每一个值\r\n--     print(v)\r\n-- end)\r\nfunction table.walk(t, fn)\r\n    for k, v in pairs(t) do\r\n        fn(v, k)\r\n    end\r\nend\r\n\r\n--- 对表格中每一个值执行一次指定的函数，如果该函数返回 false，则对应的值会从表格中删除\r\n-- @param table\r\n-- @param function fn 参数指定的函数具有两个参数，并且返回一个 boolean 值。原型如下：\r\n-- !!!!该方法有局限性，执行后会修改原表格t中值\r\n-- function map_function(value, key)\r\n--     return true or false\r\n-- end\r\n-- @usage\r\n-- local t = {name = \"dualface\", comp = \"chukong\"}\r\n-- table.filter(t, function(v, k)\r\n--     return v ~= \"dualface\" -- 当值等于 dualface 时过滤掉该值\r\n-- end)\r\n-- 输出修改后的表格内容\r\n-- for k, v in pairs(t) do\r\n--     print(k, v)\r\n-- end\r\n-- >> 输出 comp chukong\r\nfunction table.filter(t, fn)\r\n    for k, v in pairs(t) do\r\n        if not fn(v, k) then\r\n            t[k] = nil\r\n        end\r\n    end\r\nend\r\n\r\n--- 找到表格中每个符合matchFunc的条目\r\n-- @param array table\r\n-- @param match function, return T/F\r\n-- @return all elements matched, default is {}\r\nfunction table.findAll(array, matchFunc)\r\n    local ret, idx = {}, 1\r\n    for i = 1, #array do\r\n        if matchFunc(array[i]) then\r\n            ret[idx] = array[i]\r\n            idx = idx + 1\r\n        end\r\n    end\r\n    return ret\r\nend\r\n\r\n--- 找到表格中每个符合matchFunc的条目，并执行walkFunc\r\n-- @param array table\r\n-- @param match function, return T/F\r\n-- @param walk function\r\nfunction table.findAllAndWalk(array, matchFunc, walkFunc)\r\n    for i = 1, #array do\r\n        if matchFunc(array[i]) then\r\n            walkFunc(array[i])\r\n        end\r\n    end\r\nend\r\n\r\n--- 在表格中插入一个新值\r\n-- @param array table\r\n-- @param new element\r\nfunction table.insert_once(T, elem)\r\n    for _, v in ipairs(T) do\r\n        if v == elem then\r\n            return\r\n        end\r\n    end\r\n    table.insert(T, elem)\r\nend\r\n\r\n--- 遍历表格，确保其中的值唯一\r\n-- @function [parent=#table] unique\r\n-- @param table t 表格\r\n-- @param boolean bArray t是否是数组,是数组,t中重复的项被移除后,后续的项会前移\r\n-- @return table#table  包含所有唯一值的新表格\r\n-- @usage\r\n-- 遍历表格，确保其中的值唯一\r\n-- local t = {\"a\", \"a\", \"b\", \"c\"} -- 重复的 a 会被过滤掉\r\n-- local n = table.unique(t)\r\n-- for k, v in pairs(n) do\r\n--     print(v)\r\n-- end\r\n-- >> 输出 a b c\r\nfunction table.unique(t, bArray)\r\n    local check = {}\r\n    local n = {}\r\n    local idx = 1\r\n    for k, v in pairs(t) do\r\n        if not check[v] then\r\n            if bArray then\r\n                n[idx] = v\r\n                idx = idx + 1\r\n            else\r\n                n[k] = v\r\n            end\r\n            check[v] = true\r\n        end\r\n    end\r\n    return n\r\nend\r\n\r\n--- table 深度复制\r\n-- @param table\r\n-- @return a net table with same data\r\nfunction table.deepcopy(object)\r\n    local lookup_table = {}\r\n    local function _copy(object)\r\n        if type(object) ~= 'table' then\r\n            return object\r\n        elseif lookup_table[object] then\r\n            return lookup_table[object]\r\n        end\r\n        local new_table = {}\r\n        lookup_table[object] = new_table\r\n        for key, value in pairs(object) do\r\n            new_table[_copy(key)] = _copy(value)\r\n        end\r\n        return setmetatable(new_table, getmetatable(object))\r\n    end\r\n    return _copy(object)\r\nend\r\n\r\n--- table 浅度复制(不处理metatable)\r\nfunction table.shallowcopy(orig)\r\n    local orig_type = type(orig)\r\n    local copy\r\n    if orig_type == 'table' then\r\n        copy = {}\r\n        for orig_key, orig_value in next, orig, nil do\r\n            copy[table.shallowcopy(orig_key)] = table.shallowcopy(orig_value)\r\n        end\r\n    else\r\n        copy = orig\r\n    end\r\n    return copy\r\nend\r\n\r\n--- 获取or创建一个子表\r\nfunction table.need(tb, key)\r\n    if type(tb) == 'table' then\r\n        local subTb = tb[key]\r\n        if subTb == nil then\r\n            subTb = {}\r\n            tb[key] = subTb\r\n        end\r\n        return subTb\r\n    end\r\n    return\r\nend\r\n\r\n--- 打印table中的所有内容\r\n-- @param data table\r\n-- @param @boolean showMetatable 是否显示元表\r\nfunction table.dump(data, showMetatable)\r\n    local result, tab = {}, '    '\r\n    local function _dump(data, showMetatable, lastCount)\r\n        if type(data) ~= 'table' then\r\n            if type(data) == 'string' then\r\n                table.insert(result, '\"')\r\n                table.insert(result, data)\r\n                table.insert(result, '\"')\r\n            else\r\n                table.insert(result, tostring(data))\r\n            end\r\n        else\r\n            --Format\r\n            local count = lastCount or 0\r\n            count = count + 1\r\n            table.insert(result, '{\\n')\r\n            --Metatable\r\n            if showMetatable then\r\n                for i = 1, count do\r\n                    table.insert(result, tab)\r\n                end\r\n                local mt = getmetatable(data)\r\n                table.insert(result, '\"__metatable\" = ')\r\n                _dump(mt, showMetatable, count)\r\n                table.insert(result, ',\\n')\r\n            end\r\n            --Key\r\n            for key, value in pairs(data) do\r\n                for i = 1, count do\r\n                    table.insert(result, tab)\r\n                end\r\n                if type(key) == 'string' then\r\n                    table.insert(result, '\"')\r\n                    table.insert(result, key)\r\n                    table.insert(result, '\" = ')\r\n                elseif type(key) == 'number' then\r\n                    table.insert(result, '[')\r\n                    table.insert(result, key)\r\n                    table.insert(result, '] = ')\r\n                else\r\n                    table.insert(result, tostring(key))\r\n                end\r\n                _dump(value, showMetatable, count)\r\n                table.insert(result, ',\\n')\r\n            end\r\n            --Format\r\n            for i = 1, lastCount or 0 do\r\n                table.insert(result, tab)\r\n            end\r\n            table.insert(result, '}')\r\n        end\r\n        --Format\r\n        if not lastCount then\r\n            table.insert(result, '\\n')\r\n        end\r\n    end\r\n    _dump(data, showMetatable, 0)\r\n\r\n    print('dump from: \\n' .. table.concat(result))\r\nend\r\n\r\n--- 用指定字符或字符串分割输入字符串，返回包含分割结果的数组\r\n-- @param @string input 输入的字符串\r\n-- @param @string delimiter 分隔符\r\n-- @return array\r\n-- @usage example #1\r\n-- local input = \"Hello,World\"\r\n-- local res = string.split(input, \",\")\r\n-- >> res = {\"Hello\", \"World\"}\r\n-- @usage example #2\r\n-- local input = \"Hello-+-World-+-Quick\"\r\n-- local res = string.split(input, \"-+-\")\r\n-- >> res = {\"Hello\", \"World\", \"Quick\"}\r\nfunction string.split(input, delimiter)\r\n    input = tostring(input)\r\n    delimiter = tostring(delimiter)\r\n    if (delimiter == '') then\r\n        return false\r\n    end\r\n    local pos, arr = 0, {}\r\n    -- for each divider found\r\n    for st, sp in function()\r\n        return string.find(input, delimiter, pos, true)\r\n    end do\r\n        table.insert(arr, string.sub(input, pos, st - 1))\r\n        pos = sp + 1\r\n    end\r\n    table.insert(arr, string.sub(input, pos))\r\n    return arr\r\nend\r\n\r\n--- 判断字符串是否为空或者长度为零\r\n-- @param @string 输入的字符串\r\nfunction string.isnilorempty(inputStr)\r\n    return inputStr == nil or inputStr == ''\r\nend\r\n\r\n--- 去除输入字符串头部的空白字符，返回结果\r\n-- @param @string input\r\n-- @return @string\r\n-- @usage example\r\n-- local input = \"  ABC\"\r\n-- print(string.ltrim(input))\r\n-- >> 输出 ABC，输入字符串前面的两个空格被去掉了\r\n-- 空白字符包括：\r\n-- -   空格\r\n-- -   制表符 \\t\r\n-- -   换行符 \\n\r\n-- -   回到行首符 \\r\r\nfunction string.ltrim(input)\r\n    return string.gsub(input, '^[ \\t\\n\\r]+', '')\r\nend\r\n\r\n--- 去除输入字符串尾部的空白字符，返回结果\r\n-- @param @string input\r\n-- @return @string\r\n-- @usage example\r\n-- local input = \"ABC  \"\r\n-- print(string.rtrim(input))\r\n-- >> 输出 ABC，输入字符串最后的两个空格被去掉了\r\nfunction string.rtrim(input)\r\n    return string.gsub(input, '[ \\t\\n\\r]+$', '')\r\nend\r\n\r\n--- 去掉字符串首尾的空白字符，返回结果\r\n-- @param @string input\r\n-- @return @string\r\nfunction string.trim(input)\r\n    input = string.gsub(input, '^[ \\t\\n\\r]+', '')\r\n    return string.gsub(input, '[ \\t\\n\\r]+$', '')\r\nend\r\n\r\n--- 将字符串的第一个字符转为大写，返回结果\r\n-- @param @string input\r\n-- @return @string\r\n-- @usage example\r\n-- local input = \"hello\"\r\n-- print(string.ucfirst(input))\r\n-- >> 输出 Hello\r\nfunction string.ucfirst(input)\r\n    return string.upper(string.sub(input, 1, 1)) .. string.sub(input, 2)\r\nend\r\n\r\nfunction string.firstToUpper(str)\r\n    return (str:gsub('^%l', string.upper))\r\nend\r\n\r\n--- 计算 UTF8 字符串的长度，每一个中文算一个字符\r\n-- @param @string input\r\n-- @return @number cnt\r\n-- @usage example\r\n-- local input = \"你好World\"\r\n-- print(string.utf8len(input))\r\n-- >> 输出 7\r\nfunction string.utf8len(input)\r\n    local len = string.len(input)\r\n    local left = len\r\n    local cnt = 0\r\n    local arr = {0, 0xc0, 0xe0, 0xf0, 0xf8, 0xfc}\r\n    while left ~= 0 do\r\n        local tmp = string.byte(input, -left)\r\n        local i = #arr\r\n        while arr[i] do\r\n            if tmp >= arr[i] then\r\n                left = left - i\r\n                break\r\n            end\r\n            i = i - 1\r\n        end\r\n        cnt = cnt + 1\r\n    end\r\n    return cnt\r\nend\r\n\r\n--- 替换字符串内容\r\n-- @param @string input\r\n-- @param @number start index\r\n-- @param new context\r\n-- @return a new string\r\nfunction string.replace(str, index, char)\r\n    return table.concat {str:sub(1, index - 1), char, str:sub(index + 1)}\r\nend\r\n\r\n--- 检查字符串是否为指定字符串开头\r\n-- @param @string target\r\n-- @param @string start\r\n-- @return @boolean\r\nfunction string.startswith(str, start)\r\n    return str:sub(1, #start) == start\r\nend\r\n\r\n--- 检查字符串是否以指定字符串结尾\r\n-- @param @string target\r\n-- @param @string start\r\n-- @return @boolean\r\nfunction string.endswith(str, ending)\r\n    return ending == '' or str:sub(-(#ending)) == ending\r\nend\r\n\r\n--- 四舍五入\r\n-- @param a number\r\n-- @return a round number\r\nfunction math.round(value)\r\n    return math.floor(value + 0.5)\r\nend\r\n\r\n--- [0, 1]区间限定函数\r\n-- @param a number or\r\n-- @return a clamped number\r\nfunction math.clamp01(value)\r\n    return math.min(1, math.max(0, value))\r\nend\r\n\r\n--- 数据结构 队列\r\n-- @usage queue example\r\n-- local myQueue = Queue:New()\r\n-- myQueue:Enqueue('a')\r\n-- myQueue:Enqueue('b')\r\n-- myQueue:Enqueue('c')\r\n-- myQueue:PrintElement()\r\n-- print(myQueue:Dequeue())\r\n-- myQueue:PrintElement()\r\n-- myQueue:Clear()\r\n-- myQueue:PrintElement()\r\nQueue = {}\r\nfunction Queue:New()\r\n    local inst = {\r\n        _first = -1,\r\n        _last = -1,\r\n        _size = 0,\r\n        _queue = {}\r\n    }\r\n    setmetatable(inst, {__index = self})\r\n    return inst\r\nend\r\n\r\nfunction Queue:IsEmpty()\r\n    if self._size == 0 then\r\n        return true\r\n    end\r\n    return false\r\nend\r\n\r\nfunction Queue:Enqueue(inElement)\r\n    if self._size == 0 then\r\n        self._first = 0\r\n        self._last = 1\r\n        self._size = 1\r\n        self._queue[self._last] = inElement\r\n    else\r\n        self._last = self._last + 1\r\n        self._queue[self._last] = inElement\r\n        self._size = self._size + 1\r\n    end\r\nend\r\n\r\nfunction Queue:Dequeue()\r\n    if self:IsEmpty() then\r\n        print('Error: the queue is empty')\r\n        return\r\n    end\r\n    self._size = self._size - 1\r\n    self._first = self._first + 1\r\n    local value = self._queue[self._first]\r\n    return value\r\nend\r\n\r\nfunction Queue:Clear()\r\n    self._queue = nil\r\n    self._queue = {}\r\n    self._size = 0\r\n    self._first = -1\r\n    self._last = -1\r\nend\r\n\r\nfunction Queue:Size()\r\n    return self._size or 0\r\nend\r\n\r\nfunction Queue:PrintElement()\r\n    if self._size == 0 then\r\n        print('{}')\r\n    else\r\n        local f = self._first + 1\r\n        local l = self._last\r\n        local str\r\n        local flag = true\r\n        while f ~= l do\r\n            if flag == true then\r\n                str = '{' .. tostring(self._queue[f])\r\n                f = f + 1\r\n                flag = false\r\n            else\r\n                str = str .. ',' .. tostring(self._queue[f])\r\n                f = f + 1\r\n            end\r\n        end\r\n        str = str .. ',' .. tostring(self._queue[l]) .. '}'\r\n        print(str)\r\n    end\r\nend\r\n\r\nfunction Queue:GetValue(index)\r\n    if self:IsEmpty() or index == nil or index == 0 then\r\n        print('Error: Get Value Failure!')\r\n        return\r\n    end\r\n    if index > 0 then\r\n        return self._queue[self._first + index]\r\n    else\r\n        return self._queue[self._last + index + 1]\r\n    end\r\nend\r\n\r\nfunction Queue:GetValues()\r\n    if self:IsEmpty() then\r\n        return\r\n    end\r\n    local data = {}\r\n    for i = self._first + 1, self._last, 1 do\r\n        data[#data + 1] = self._queue[i]\r\n    end\r\n    return data\r\nend\r\n\r\n--- 数据结构 栈\r\n-- @usage example\r\n-- local myStack = Stack:New()\r\n-- myStack:Push(\"a\")\r\n-- myStack:Push(\"b\")\r\n-- myStack:Push(\"c\")\r\n-- myStack:PrintElement()\r\n-- print(myStack:Pop())\r\n-- myStack:PrintElement()\r\n-- myStack:Clear()\r\n-- myStack:PrintElement()\r\nStack = {}\r\nfunction Stack:New()\r\n    local inst = {\r\n        _last = 0,\r\n        _stack = {}\r\n    }\r\n    setmetatable(inst, {__index = self})\r\n\r\n    return inst\r\nend\r\n\r\nfunction Stack:IsEmpty()\r\n    if self._last == 0 then\r\n        return true\r\n    end\r\n    return false\r\nend\r\n\r\nfunction Stack:Push(inElement)\r\n    self._last = self._last + 1\r\n    self._stack[self._last] = inElement\r\nend\r\n\r\nfunction Stack:Pop()\r\n    if self:IsEmpty() then\r\n        --print(\"Error: the stack is empty\")\r\n        return\r\n    end\r\n    local value = self._stack[self._last]\r\n    self._stack[self._last] = nil\r\n    self._last = self._last - 1\r\n    return value\r\nend\r\n\r\nfunction Stack:Exists(element, compairFunc)\r\n    if compairFunc == nil then\r\n        compairFunc = function(a, b)\r\n            return a == b\r\n        end\r\n    end\r\n    for i = self._last, 1, -1 do\r\n        if compairFunc(element, self._stack[i]) then\r\n            return i\r\n        end\r\n    end\r\n    return -1\r\nend\r\n\r\nfunction Stack:RemoveAt(index)\r\n    if index < 1 or index > self._last then\r\n        return\r\n    end\r\n    table.remove(self._stack, index)\r\n    self._last = self._last - 1\r\nend\r\n\r\nfunction Stack:Clear()\r\n    self._stack = nil\r\n    self._stack = {}\r\n    self._last = 0\r\nend\r\n\r\nfunction Stack:Size()\r\n    return self._last\r\nend\r\n\r\nfunction Stack:PrintElement()\r\n    local str = '{'\r\n    for i = self._last, 1, -1 do\r\n        str = str .. tostring(self._stack[i]) .. ','\r\n    end\r\n    str = str .. '}'\r\n    print(str)\r\nend\r\n"}}]},{"class":"cScriptObject","name":"ModuleRequireScript","guid":[2221840009,1976321846,2245245619,407532979],"parentGuid":[344576033,1668630255,2683907297,2226597768],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"ModuleRequireScript"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":10,"class":"sLuaComponent","data":{"m_luaContent":"--- 将Global.Module目录下每一个用到模块提前require,定义为全局变量\r\n-- @script Module Defines\r\n-- @copyright Lilith Games, Avatar Team\r\n\r\n-- Log utility\r\nlocal LogUtil = require(Utility.LogUtilModule)\r\n-- 封装四个全局接口\r\ntest = LogUtil.Test\r\ndebug = LogUtil.Debug\r\ninfo = LogUtil.Info\r\nwarn = LogUtil.Warn\r\nerror = LogUtil.Error\r\n\r\n-- 定义日志等级、开关\r\nLogUtil.level = LogUtil.LevelEnum.DEBUG\r\nLogUtil.debugMode = true\r\n\r\n-- Utilities\r\nNetUtil = require(Utility.NetUtilModule)\r\nCsvUtil = require(Utility.CsvUtilModule)\r\nEventUtil = require(Utility.EventUitlModule)\r\nUUID = require(Utility.UuidModule)\r\nLinkedList = Utility.LinkedListModule\r\n\r\n-- Defines\r\nGlobalDef = require(Define.GlobalDefModule)\r\nConstDef = require(Define.ConstDefModule)\r\n\r\n-- Server Modules\r\nGameMgr = require(Module.S_Module.GameMgrModule)\r\nTimeMgr = require(Module.S_Module.TimeMgrModule)\r\nGameCsv = require(Module.S_Module.GameCsvModule)\r\nExampleA = require(Module.S_Module.ExampleAModule)\r\n\r\n-- Client Modules\r\nPlayerMgr = require(Module.C_Module.PlayerMgrModule)\r\nPlayerCsv = require(Module.C_Module.PlayerCsvModule)\r\nExampleB = require(Module.C_Module.ExampleBModule)\r\n\r\n-- Plugin Modules\r\nAnimationMain = require(world.Global.Plugin.FUNC_UIAnimation.Code.AnimationMainModule)\r\nGuideSystem = require(world.Global.Plugin.FUNC_Guide.GuideSystemModule)\r\n"}}]},{"class":"cScriptObject","name":"AutoAssignTeamScript","guid":[1988307774,2442019711,2592872571,1277204125],"parentGuid":[344576033,1668630255,2683907297,2226597768],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"AutoAssignTeamScript"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":10,"class":"sLuaComponent","data":{"m_luaContent":"--- 玩家加入\r\n-- @script Auto assign\r\n-- @copyright Lilith Games, Avatar Team\r\n\r\n--- 编辑器默认方法\r\n-- run once when script init\r\nfunction autoAssign()\r\n    local container = world:FindTeams()\r\n    local min = 1\r\n    local teamTojoin = {}\r\n    local playerfolder = world.Players\r\n    for i = 1, #container, 1 do\r\n        if container[i].CurrentMaxMemberNum > 0 then\r\n            temp = container[i].CurrentMemberNum / (container[i].CurrentMaxMemberNum)\r\n            if (temp < min and temp ~= 1) then\r\n                teamTojoin = {}\r\n                min = temp\r\n                table.insert(teamTojoin, container[i])\r\n            elseif temp == min and temp ~= 1 then\r\n                table.insert(teamTojoin, container[i])\r\n            end\r\n        end\r\n    end\r\n    local a = 1\r\n    if #teamTojoin > 0 then\r\n        a = math.random(1, #teamTojoin)\r\n        return teamTojoin[a]\r\n    else\r\n        return nil\r\n    end\r\nend\r\n"}}]},{"class":"cFolderObject","name":"Utility","guid":[1158799413,2751941742,3186700785,1570109853],"parentGuid":[344576033,1668630255,2683907297,2226597768],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"Utility"}},{"id":40000,"class":"sScriptHelperComponent","data":{}}]},{"class":"cModuleScriptObject","name":"NetUtilModule","guid":[3138092138,940262650,3093420508,667201143],"parentGuid":[1158799413,2751941742,3186700785,1570109853],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"NetUtilModule"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":10,"class":"sLuaComponent","data":{"m_luaContent":"--- 网路工具/事件工具\r\n-- @module Network utilities\r\n-- @copyright Lilith Games, Avatar Team\r\n-- @author Sharif Ma, Yuancheng Zhang, Yen Yuan\r\nlocal NetUtil = {}\r\n\r\n--- 向指定的玩家发送消息\r\n-- @param @string _eventName 事件的名字\r\n-- @param _player 玩家对象\r\n-- @param ... 事件参数\r\nfunction NetUtil.Fire_C(_eventName, _player, ...)\r\n    if _player.Player == nil or _player.Player.ClassName ~= 'PlayerInstance' then\r\n        error('Fire_C 第二个参数需要是玩家对象,错误事件为 ', _eventName)\r\n        return\r\n    end\r\n    if _player.C_Event[_eventName] == nil then\r\n        error(string.format('玩家身上不存在%s事件', _eventName))\r\n        return\r\n    end\r\n    local args = {...}\r\n    for k, v in pairs(args) do\r\n        if type(v) == 'table' then\r\n            args[k] = string.format('JSON%sJSON', LuaJson:encode(v))\r\n        end\r\n    end\r\n    table.dump(args)\r\n    _player.C_Event[_eventName]:Fire(table.unpack(args))\r\n    debug(string.format('客户端事件: %s , 玩家: ', _eventName, _player.Name))\r\nend\r\n\r\n--- 向服务端发送消息\r\n-- @param @string _eventName 事件的名字(严格对应)\r\n-- @param ... 事件参数\r\nfunction NetUtil.Fire_S(_eventName, ...)\r\n    if world.S_Event[_eventName] == nil then\r\n        error(string.format('服务端不存在%s事件', _eventName))\r\n        return\r\n    end\r\n    local _msg = {...}\r\n    for k, v in pairs(_msg) do\r\n        if type(v) == 'table' then\r\n            _msg[k] = string.format('JSON%sJSON', LuaJson:encode(v))\r\n        end\r\n    end\r\n    world.S_Event[_eventName]:Fire(table.unpack(_msg))\r\n    info(string.format('服务器事件: %s', _eventName))\r\nend\r\n\r\n--- 客户端广播\r\n-- @param @string _eventName 事件的名字(严格对应)\r\n-- @param ... 事件参数\r\nfunction NetUtil.Broadcast(_eventName, ...)\r\n    local _msg = {...}\r\n    for k, v in pairs(_msg) do\r\n        if type(v) == 'table' then\r\n            _msg[k] = string.format('JSON%sJSON', LuaJson:encode(v))\r\n        end\r\n    end\r\n    world.Players:BroadcastEvent(_eventName, table.unpack(_msg))\r\n    info(string.format('[信息] 客户端广播事件: %s ,参数为：%s ', _eventName, table.unpack(_msg)))\r\nend\r\n\r\nreturn NetUtil\r\n","m_scriptType":"kModuleScript"}}]},{"class":"cModuleScriptObject","name":"CsvUtilModule","guid":[3433342930,3050064207,3042438006,35244977],"parentGuid":[1158799413,2751941742,3186700785,1570109853],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"CsvUtilModule"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":10,"class":"sLuaComponent","data":{"m_luaContent":"--- 读表工具: 讲CSV导入成Lua Table，支持单一主键和多主键\r\n-- @module CSV Utility\r\n-- @copyright Lilith Games, Avatar Team\r\n-- @author Yuancheng Zhang\r\n-- @see https://wiki.lilithgames.com/x/RGEMAg\r\nlocal CsvUtil = {}\r\n\r\n--- 读取配置表,会根据id生成lua表\r\n-- @param _csv 表格\r\n-- @parma _id 表格的\r\n-- @parma _isPrimaryKey 是否为主键,默认值为true\r\n-- @usage exmaple #1 如果 _isPrimaryKey == true, 单一键值为主键\r\n-- Level.csv 表格内容为:\r\n-- ----------------------------------\r\n-- | String   | String     | Int    |\r\n-- | level_id | level_name | reward |\r\n-- | easy_01  | Level 01   | 100    |\r\n-- | easy_02  | Level 02   | 140    |\r\n-- | hard_01  | Level 03   | 280    |\r\n-- | hard_02  | Level 04   | 320    |\r\n-- ----------------------------------\r\n-- 调用函数 local levelCsv = CsvUtil.GetCsvInfo(Level, 'level_id', true) 导入的lua表格结果为:\r\n-- levelCsv = {\r\n--     easy_01 = {\r\n--         level_id = 'easy_01',\r\n--         level_name = 'Level 01',\r\n--         reward = 100\r\n--     },\r\n--     easy_02 = {\r\n--         level_id = 'easy_02',\r\n--         level_name = 'Level 02',\r\n--         reward = 140\r\n--     },\r\n--     hard_01 = {\r\n--         level_id = 'hard_01',\r\n--         level_name = 'Level 03',\r\n--         reward = 280\r\n--     },\r\n--     hard_02 = {\r\n--         level_id = 'hard_02',\r\n--         level_name = 'Level 04',\r\n--         reward = 320\r\n--     }\r\n-- }\r\n-- @usage exmaple #2 如果 _isPrimaryKey == false, 多键值为主键\r\n-- Enemy.csv 表格内容为:\r\n-- ----------------------------------\r\n-- | String   | String     | Int    |\r\n-- | enemy_id | difficulty | hp     |\r\n-- | foe_01   | easy       | 100    |\r\n-- | foe_01   | hard       | 150    |\r\n-- | foe_02   | easy       | 300    |\r\n-- | foe_02   | hard       | 400    |\r\n-- ----------------------------------\r\n-- 调用函数 local enemyCsv = CsvUtil.GetCsvInfo(Enemy, 'enemy_id', false) 导入的lua表格结果为:\r\n-- enemyCsv = {\r\n--     foe_01 = {\r\n--         [1] = {\r\n--             enemy_id = 'foe_01',\r\n--             difficulty = 'easy',\r\n--             hp = 100\r\n--         },\r\n--         [2] = {\r\n--             enemy_id = 'foe_02',\r\n--             difficulty = 'hard',\r\n--             hp = 150\r\n--         }\r\n--     },\r\n--     foe_02 = {\r\n--         [1] = {\r\n--             enemy_id = 'foe_02',\r\n--             difficulty = 'easy',\r\n--             hp = 300\r\n--         },\r\n--         [2] = {\r\n--             enemy_id = 'foe_02',\r\n--             difficulty = 'hard',\r\n--             hp = 400\r\n--         }\r\n--     }\r\n-- }\r\nfunction CsvUtil.GetCsvInfo(_csv, _id, _isPrimaryKey)\r\n    _isPrimaryKey = _isPrimaryKey or _isPrimaryKey == nil -- default is true\r\n    local tmp = _csv:GetRows()\r\n\r\n    if _id == 'Type' then\r\n        info(string.format('CSV数据载入, CSV:%s, key:%s', _csv.Name, _id))\r\n        return tmp\r\n    end\r\n\r\n    local result = {}\r\n    for k, v in pairs(tmp) do\r\n        if v[_id] == nil then\r\n            error(string.format('CSV缺少参数, CSV:%s, _id:%s', _csv.Name, _id))\r\n            return\r\n        end\r\n        if _isPrimaryKey then\r\n            -- id是唯一主键\r\n            if result[v[_id]] ~= nil then\r\n                warn(string.format('CSV数据覆盖, CSV:%s, _id:%s', _csv.Name, _id))\r\n            end\r\n            result[v[_id]] = v\r\n            v.Type = tonumber(k)\r\n        else\r\n            -- id不是主键,合并同id的数据\r\n            if result[v[_id]] == nil then\r\n                result[v[_id]] = {}\r\n            end\r\n            table.insert(result[v[_id]], v)\r\n        end\r\n    end\r\n\r\n    info(string.format('CSV数据载入, CSV:%s, key:%s', _csv.Name, _id))\r\n    return result\r\nend\r\n\r\nreturn CsvUtil\r\n","m_scriptType":"kModuleScript"}}]},{"class":"cModuleScriptObject","name":"EventUitlModule","guid":[2990017477,1670333273,2674323178,1532840206],"parentGuid":[1158799413,2751941742,3186700785,1570109853],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"EventUitlModule"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":10,"class":"sLuaComponent","data":{"m_luaContent":"--- 事件绑定工具\r\n-- @module Event Connects Handler\r\n-- @copyright Lilith Games, Avatar Team\r\n-- @author Yuancheng Zhang, Yen Yuan\r\nlocal EventUtil = {}\r\n\r\n--- 检查是否为Json化的字符串\r\n-- @param _str @string 输入的字符串\r\n-- @return @boolean true: json table string\r\nlocal function IsJsonTable(_str)\r\n    return type(_str) == 'string' and string.endswith(_str, 'JSON') and string.startswith(_str, 'JSON')\r\nend\r\n\r\n--- 处理Handler的传入参数\r\n--@param variable args\r\n--@return variable args\r\nlocal function ArgsAux(...)\r\n    local _s = {...}\r\n    for k, v in pairs(_s) do\r\n        if IsJsonTable(v) then\r\n            local json = string.sub(v, 5, -5)\r\n            _s[k] = LuaJson:decode(json)\r\n        end\r\n    end\r\n    return table.unpack(_s)\r\nend\r\n\r\n--- 遍历所有的events,找到module中对应名称的handler,建立Connect\r\n-- @param _eventFolder 事件所在的节点folder\r\n-- @param _module 模块\r\n-- @param _moduleName module的名字,用于打印日志\r\n-- @param _this module的self指针,用于闭包\r\nfunction EventUtil.LinkConnects(_eventFolder, _module, _moduleName, _this)\r\n    local events = _eventFolder:GetChildren()\r\n    local total = 0\r\n    for _, ent in pairs(events) do\r\n        if string.endswith(ent.Name, 'Event') then\r\n            local handler = _module[ent.Name .. 'Handler']\r\n            if handler ~= nil then\r\n                ent:Connect(\r\n                    function(...)\r\n                        handler(_this, ArgsAux(...))\r\n                    end\r\n                )\r\n                debug(string.format('%s/%s 事件绑定%s成功', _eventFolder.Name, ent.Name, _moduleName))\r\n                total = total + 1\r\n            end\r\n        else\r\n            warn(string.format('S_Event/%s 命名没有以Event结尾', ent.Name))\r\n        end\r\n    end\r\n    debug(string.format('%s共绑定%s个事件', _moduleName, total))\r\nend\r\n\r\nreturn EventUtil\r\n","m_scriptType":"kModuleScript"}}]},{"class":"cModuleScriptObject","name":"LogUtilModule","guid":[331530011,3698477199,2826898349,1604055611],"parentGuid":[1158799413,2751941742,3186700785,1570109853],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"LogUtilModule"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":10,"class":"sLuaComponent","data":{"m_luaContent":"--- Debug工具\r\n-- @module Debug utilities\r\n-- @copyright Lilith Games, Avatar Team\r\n-- @author Yuancheng Zhang\r\nlocal LogUtil = {}\r\n\r\n--- 日志级别枚举\r\nLogUtil.LevelEnum = {\r\n    -- 指出细粒度信息事件对调试应用程序是非常有帮助的 主要用于开发过程中打印一些运行信息\r\n    DEBUG = 1,\r\n    -- 消息在粗粒度级别上突出强调应用程序的运行过程\r\n    -- 打印一些你感兴趣的或者重要的信息 这个可以用于生产环境中输出程序运行的一些重要信息\r\n    -- 但是不能滥用 避免打印过多的日志\r\n    INFO = 2,\r\n    -- 表明会出现潜在错误的情形 有些信息不是错误信息 但是也要给程序员的一些提示\r\n    WARN = 3,\r\n    -- 指出虽然发生错误事件 但仍然不影响系统的继续运行\r\n    -- 打印错误和异常信息 如果不想输出太多的日志 可以使用这个级别\r\n    ERROR = 4\r\n}\r\n\r\n--- 日志级别\r\nLogUtil.level = LogUtil.LevelEnum.DEBUG\r\n\r\n--- 开关\r\nLogUtil.debugMode = true\r\n\r\nfunction LogUtil.Test(...)\r\n    if LogUtil.debugMode and LogUtil.level <= LogUtil.LevelEnum.DEBUG then\r\n        print('[TEST]', ...)\r\n    end\r\nend\r\n\r\nfunction LogUtil.Debug(...)\r\n    if LogUtil.debugMode and LogUtil.level <= LogUtil.LevelEnum.DEBUG then\r\n        print('[DEBUG]', ...)\r\n    end\r\nend\r\n\r\nfunction LogUtil.Info(...)\r\n    if LogUtil.debugMode and LogUtil.level <= LogUtil.LevelEnum.INFO then\r\n        print('[INFO]', ...)\r\n    end\r\nend\r\n\r\nfunction LogUtil.Warn(...)\r\n    if LogUtil.debugMode and LogUtil.level <= LogUtil.LevelEnum.WARN then\r\n        print('[WARN]', ...)\r\n    end\r\nend\r\n\r\nfunction LogUtil.Error(...)\r\n    if LogUtil.debugMode and LogUtil.level <= LogUtil.LevelEnum.ERROR then\r\n        print('[ERROR]', ...)\r\n    end\r\nend\r\n\r\nreturn LogUtil\r\n","m_scriptType":"kModuleScript"}}]},{"class":"cModuleScriptObject","name":"CamUtilModule","guid":[1811723231,1873694369,3200685174,4215485454],"parentGuid":[1158799413,2751941742,3186700785,1570109853],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"CamUtilModule"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":10,"class":"sLuaComponent","data":{"m_luaContent":"---摄像机工具类\r\n---@module Cam Utility\r\n---@copyright Lilith Games, Avatar Team\r\n---@author Sharif Ma\r\n---@class CamUtil\r\nlocal CamUtil = {}\r\n\r\n---将摄像机在水平面上转动到和角色朝向一致的角度\r\n---@param _player PlayerInstance 摄像机看向的物体\r\n---@param _cam Camera 转动的摄像机\r\n---@param _time number 转动过程的事件，不填则瞬间转动\r\nfunction CamUtil.ToRoleForward(_player, _cam, _time)\r\n    _time = _time or 0\r\n    local dir = _player.Position - _cam.Position\r\n    local forward = _player.Forward\r\n    local alpha = Vector2.Angle(Vector2(dir.x, dir.z), Vector2(forward.x, forward.z))\r\n    local left = _player.Left\r\n    if Vector3.Angle(left, dir) > 90 then\r\n        alpha = 360 - alpha\r\n    end\r\n    if _time == 0 then\r\n        _cam:CameraMoveInDegree(Vector2(alpha, 0))\r\n        return\r\n    end\r\n    invoke(\r\n        function()\r\n            local curTime = 0\r\n            while true do\r\n                local dt = wait()\r\n                local dtDe = alpha * dt / _time\r\n                _cam:CameraMoveInDegree(Vector2(dtDe, 0))\r\n                curTime = curTime + dt\r\n                if curTime >= _time then\r\n                    return\r\n                end\r\n            end\r\n        end\r\n    )\r\nend\r\n","m_scriptType":"kModuleScript"}}]},{"class":"cModuleScriptObject","name":"UuidModule","guid":[4105454780,3236446477,3000779626,2374634919],"parentGuid":[1158799413,2751941742,3186700785,1570109853],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"UuidModule"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":10,"class":"sLuaComponent","data":{"m_luaContent":"---------------------------------------------------------------------------------------\r\n-- Copyright 2012 Rackspace (original), 2013 Thijs Schreijer (modifications)\r\n--\r\n-- Licensed under the Apache License, Version 2.0 (the \"License\");\r\n-- you may not use this file except in compliance with the License.\r\n-- You may obtain a copy of the License at\r\n--\r\n--     http://www.apache.org/licenses/LICENSE-2.0\r\n--\r\n-- Unless required by applicable law or agreed to in writing, software\r\n-- distributed under the License is distributed on an \"AS-IS\" BASIS,\r\n-- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n-- See the License for the specific language governing permissions and\r\n-- limitations under the License.\r\n--\r\n-- see http://www.ietf.org/rfc/rfc4122.txt\r\n--\r\n-- Note that this is not a true version 4 (random) UUID.  Since `os.time()` precision is only 1 second, it would be hard\r\n-- to guarantee spacial uniqueness when two hosts generate a uuid after being seeded during the same second.  This\r\n-- is solved by using the node field from a version 1 UUID.  It represents the mac address.\r\n--\r\n-- 28-apr-2013 modified by Thijs Schreijer from the original [Rackspace code](https://github.com/kans/zirgo/blob/807250b1af6725bad4776c931c89a784c1e34db2/util/uuid.lua) as a generic Lua module.\r\n-- Regarding the above mention on `os.time()`; the modifications use the `socket.gettime()` function from LuaSocket\r\n-- if available and hence reduce that problem (provided LuaSocket has been loaded before uuid).\r\n--\r\n-- **6-nov-2015 Please take note of this issue**; [https://github.com/Mashape/kong/issues/478](https://github.com/Mashape/kong/issues/478)\r\n-- It demonstrates the problem of using time as a random seed. Specifically when used from multiple processes.\r\n-- So make sure to seed only once, application wide. And to not have multiple processes do that\r\n-- simultaneously (like nginx does for example).\r\n\r\nlocal M = {}\r\n\r\nlocal bitsize = 32  -- bitsize assumed for Lua VM. See randomseed function below.\r\nlocal lua_version = tonumber(_VERSION:match(\"%d%.*%d*\"))  -- grab Lua version used\r\n\r\nlocal MATRIX_AND = {{0,0},{0,1} }\r\nlocal MATRIX_OR = {{0,1},{1,1}}\r\nlocal HEXES = '0123456789abcdef'\r\n\r\nlocal math_floor = math.floor\r\nlocal math_random = math.random\r\nlocal math_abs = math.abs\r\nlocal string_sub = string.sub\r\nlocal to_number = tonumber\r\nlocal assert = assert\r\nlocal type = type\r\n\r\n-- performs the bitwise operation specified by truth matrix on two numbers.\r\nlocal function BITWISE(x, y, matrix)\r\n    local z = 0\r\n    local pow = 1\r\n    while x > 0 or y > 0 do\r\n        z = z + (matrix[x%2+1][y%2+1] * pow)\r\n        pow = pow * 2\r\n        x = math_floor(x/2)\r\n        y = math_floor(y/2)\r\n    end\r\n    return z\r\nend\r\n\r\nlocal function INT2HEX(x)\r\n    local s,base = '',16\r\n    local d\r\n    while x > 0 do\r\n        d = x % base + 1\r\n        x = math_floor(x/base)\r\n        s = string_sub(HEXES, d, d)..s\r\n    end\r\n    while #s < 2 do s = \"0\" .. s end\r\n    return s\r\nend\r\n\r\n----------------------------------------------------------------------------\r\n-- Creates a new uuid. Either provide a unique hex string, or make sure the\r\n-- random seed is properly set. The module table itself is a shortcut to this\r\n-- function, so `my_uuid = uuid.new()` equals `my_uuid = uuid()`.\r\n--\r\n-- For proper use there are 3 options;\r\n--\r\n-- 1. first require `luasocket`, then call `uuid.seed()`, and request a uuid using no\r\n-- parameter, eg. `my_uuid = uuid()`\r\n-- 2. use `uuid` without `luasocket`, set a random seed using `uuid.randomseed(some_good_seed)`,\r\n-- and request a uuid using no parameter, eg. `my_uuid = uuid()`\r\n-- 3. use `uuid` without `luasocket`, and request a uuid using an unique hex string,\r\n-- eg. `my_uuid = uuid(my_networkcard_macaddress)`\r\n--\r\n-- @return a properly formatted uuid string\r\n-- @param hwaddr (optional) string containing a unique hex value (e.g.: `00:0c:29:69:41:c6`), to be used to compensate for the lesser `math_random()` function. Use a mac address for solid results. If omitted, a fully randomized uuid will be generated, but then you must ensure that the random seed is set properly!\r\n-- @usage\r\n-- local uuid = require(\"uuid\")\r\n-- print(\"here's a new uuid: \",uuid())\r\nfunction M.new(hwaddr)\r\n    -- bytes are treated as 8bit unsigned bytes.\r\n    local bytes = {\r\n        math_random(0, 255),\r\n        math_random(0, 255),\r\n        math_random(0, 255),\r\n        math_random(0, 255),\r\n        math_random(0, 255),\r\n        math_random(0, 255),\r\n        math_random(0, 255),\r\n        math_random(0, 255),\r\n        math_random(0, 255),\r\n        math_random(0, 255),\r\n        math_random(0, 255),\r\n        math_random(0, 255),\r\n        math_random(0, 255),\r\n        math_random(0, 255),\r\n        math_random(0, 255),\r\n        math_random(0, 255)\r\n    }\r\n\r\n    if hwaddr then\r\n        assert(type(hwaddr)==\"string\", \"Expected hex string, got \"..type(hwaddr))\r\n        -- Cleanup provided string, assume mac address, so start from back and cleanup until we've got 12 characters\r\n        local i,str = #hwaddr, hwaddr\r\n        hwaddr = \"\"\r\n        while i>0 and #hwaddr<12 do\r\n            local c = str:sub(i,i):lower()\r\n            if HEXES:find(c, 1, true) then\r\n                -- valid HEX character, so append it\r\n                hwaddr = c..hwaddr\r\n            end\r\n            i = i - 1\r\n        end\r\n        assert(#hwaddr == 12, \"Provided string did not contain at least 12 hex characters, retrieved '\"..hwaddr..\"' from '\"..str..\"'\")\r\n\r\n        -- no split() in lua. :(\r\n        bytes[11] = to_number(hwaddr:sub(1, 2), 16)\r\n        bytes[12] = to_number(hwaddr:sub(3, 4), 16)\r\n        bytes[13] = to_number(hwaddr:sub(5, 6), 16)\r\n        bytes[14] = to_number(hwaddr:sub(7, 8), 16)\r\n        bytes[15] = to_number(hwaddr:sub(9, 10), 16)\r\n        bytes[16] = to_number(hwaddr:sub(11, 12), 16)\r\n    end\r\n\r\n    -- set the version\r\n    bytes[7] = BITWISE(bytes[7], 0x0f, MATRIX_AND)\r\n    bytes[7] = BITWISE(bytes[7], 0x40, MATRIX_OR)\r\n    -- set the variant\r\n    bytes[9] = BITWISE(bytes[7], 0x3f, MATRIX_AND)\r\n    bytes[9] = BITWISE(bytes[7], 0x80, MATRIX_OR)\r\n    return INT2HEX(bytes[1])..INT2HEX(bytes[2])..INT2HEX(bytes[3])..INT2HEX(bytes[4])..\"-\"..\r\n            INT2HEX(bytes[5])..INT2HEX(bytes[6])..\"-\"..\r\n            INT2HEX(bytes[7])..INT2HEX(bytes[8])..\"-\"..\r\n            INT2HEX(bytes[9])..INT2HEX(bytes[10])..\"-\"..\r\n            INT2HEX(bytes[11])..INT2HEX(bytes[12])..INT2HEX(bytes[13])..INT2HEX(bytes[14])..INT2HEX(bytes[15])..INT2HEX(bytes[16])\r\nend\r\n\r\n----------------------------------------------------------------------------\r\n-- Improved randomseed function.\r\n-- Lua 5.1 and 5.2 both truncate the seed given if it exceeds the integer\r\n-- range. If this happens, the seed will be 0 or 1 and all randomness will\r\n-- be gone (each application run will generate the same sequence of random\r\n-- numbers in that case). This improved version drops the most significant\r\n-- bits in those cases to get the seed within the proper range again.\r\n-- @param seed the random seed to set (integer from 0 - 2^32, negative values will be made positive)\r\n-- @return the (potentially modified) seed used\r\n-- @usage\r\n-- local socket = require(\"socket\")  -- gettime() has higher precision than os.time()\r\n-- local uuid = require(\"uuid\")\r\n-- -- see also example at uuid.seed()\r\n-- uuid.randomseed(socket.gettime()*10000)\r\n-- print(\"here's a new uuid: \",uuid())\r\nfunction M.randomseed(seed)\r\n    seed = math_floor(math_abs(seed))\r\n    if seed >= (2^bitsize) then\r\n        -- integer overflow, so reduce to prevent a bad seed\r\n        seed = seed - math_floor(seed / 2^bitsize) * (2^bitsize)\r\n    end\r\n    if lua_version < 5.2 then\r\n        -- 5.1 uses (incorrect) signed int\r\n        math.randomseed(seed - 2^(bitsize-1))\r\n    else\r\n        -- 5.2 uses (correct) unsigned int\r\n        math.randomseed(seed)\r\n    end\r\n    return seed\r\nend\r\n\r\n----------------------------------------------------------------------------\r\n-- Seeds the random generator.\r\n-- It does so in 2 possible ways;\r\n--\r\n-- 1. use `os.time()`: this only offers resolution to one second (used when\r\n-- LuaSocket hasn't been loaded yet\r\n-- 2. use luasocket `gettime()` function, but it only does so when LuaSocket\r\n-- has been required already.\r\n-- @usage\r\n-- local socket = require(\"socket\")  -- gettime() has higher precision than os.time()\r\n-- -- LuaSocket loaded, so below line does the same as the example from randomseed()\r\n-- uuid.seed()\r\n-- print(\"here's a new uuid: \",uuid())\r\nfunction M.seed()\r\n    if package.loaded[\"socket\"] and package.loaded[\"socket\"].gettime then\r\n        return M.randomseed(package.loaded[\"socket\"].gettime()*10000)\r\n    else\r\n        return M.randomseed(os.time())\r\n    end\r\nend\r\n\r\nreturn setmetatable( M, { __call = function(self, hwaddr) return self.new(hwaddr) end} )","m_scriptType":"kModuleScript"}}]},{"class":"cModuleScriptObject","name":"LuaJsonUtilModule","guid":[758916311,3749724666,2270297798,2806016452],"parentGuid":[1158799413,2751941742,3186700785,1570109853],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"LuaJsonUtilModule"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":10,"class":"sLuaComponent","data":{"m_luaContent":"--- -*- coding: utf-8 -*-\r\n---\r\n--- Simple JSON encoding and decoding in pure Lua.\r\n---\r\n--- Copyright 2010-2014 Jeffrey Friedl\r\n--- http://regex.info/blog/\r\n---\r\n--- Latest version: http://regex.info/blog/lua/json\r\n---\r\n--- This code is released under a Creative Commons CC-BY \"Attribution\" License:\r\n--- http://creativecommons.org/licenses/by/3.0/deed.en_US\r\n---\r\n--- It can be used for any purpose so long as the copyright notice above,\r\n--- the web-page links above, and the 'AUTHOR_NOTE' string below are\r\n--- maintained. Enjoy.\r\n---\r\nlocal VERSION = 20141223.14 --- version history at end of file\r\nlocal AUTHOR_NOTE = \"-[ JSON.lua package by Jeffrey Friedl (http://regex.info/blog/lua/json) version 20141223.14 ]-\"\r\n\r\n---\r\n--- The 'AUTHOR_NOTE' variable exists so that information about the source\r\n--- of the package is maintained even in compiled versions. It's also\r\n--- included in OBJDEF below mostly to quiet warnings about unused variables.\r\n---\r\n---@module LuaJson\r\nlocal OBJDEF = {\r\n    VERSION      = VERSION,\r\n    AUTHOR_NOTE  = AUTHOR_NOTE,\r\n}\r\n\r\n\r\n---\r\n--- Simple JSON encoding and decoding in pure Lua.\r\n--- http://www.json.org/\r\n---\r\n--\r\n--   JSON = assert(loadfile \"JSON.lua\")() -- one-time load of the routines\r\n--\r\n--   local lua_value = JSON:decode(raw_json_text)\r\n--\r\n--   local raw_json_text    = JSON:encode(lua_table_or_value)\r\n--   local pretty_json_text = JSON:encode_pretty(lua_table_or_value) -- \"pretty printed\" version for human readability\r\n--\r\n--\r\n--\r\n-- DECODING (from a JSON string to a Lua table)\r\n--\r\n--\r\n--   JSON = assert(loadfile \"JSON.lua\")() -- one-time load of the routines\r\n--\r\n--   local lua_value = JSON:decode(raw_json_text)\r\n--\r\n--   If the JSON text is for an object or an array, e.g.\r\n--     { \"what\": \"books\", \"count\": 3 }\r\n--   or\r\n--     [ \"Larry\", \"Curly\", \"Moe\" ]\r\n--\r\n--   the result is a Lua table, e.g.\r\n--     { what = \"books\", count = 3 }\r\n--   or\r\n--     { \"Larry\", \"Curly\", \"Moe\" }\r\n--\r\n--\r\n--   The encode and decode routines accept an optional second argument,\r\n--   \"etc\", which is not used during encoding or decoding, but upon error\r\n--   is passed along to error handlers. It can be of any type (including nil).\r\n--\r\n--\r\n--\r\n-- ERROR HANDLING\r\n--\r\n--   With most errors during decoding, this code calls\r\n--\r\n--      JSON:onDecodeError(message, text, location, etc)\r\n--\r\n--   with a message about the error, and if known, the JSON text being\r\n--   parsed and the byte count where the problem was discovered. You can\r\n--   replace the default JSON:onDecodeError() with your own function.\r\n--\r\n--   The default onDecodeError() merely augments the message with data\r\n--   about the text and the location if known (and if a second 'etc'\r\n--   argument had been provided to decode(), its value is tacked onto the\r\n--   message as well), and then calls JSON.assert(), which itself defaults\r\n--   to Lua's built-in assert(), and can also be overridden.\r\n--\r\n--   For example, in an Adobe Lightroom plugin, you might use something like\r\n--\r\n--          function JSON:onDecodeError(message, text, location, etc)\r\n--             LrErrors.throwUserError(\"Internal Error: invalid JSON data\")\r\n--          end\r\n--\r\n--   or even just\r\n--\r\n--          function JSON.assert(message)\r\n--             LrErrors.throwUserError(\"Internal Error: \" .. message)\r\n--          end\r\n--\r\n--   If JSON:decode() is passed a nil, this is called instead:\r\n--\r\n--      JSON:onDecodeOfNilError(message, nil, nil, etc)\r\n--\r\n--   and if JSON:decode() is passed HTML instead of JSON, this is called:\r\n--\r\n--      JSON:onDecodeOfHTMLError(message, text, nil, etc)\r\n--\r\n--   The use of the fourth 'etc' argument allows stronger coordination\r\n--   between decoding and error reporting, especially when you provide your\r\n--   own error-handling routines. Continuing with the the Adobe Lightroom\r\n--   plugin example:\r\n--\r\n--          function JSON:onDecodeError(message, text, location, etc)\r\n--             local note = \"Internal Error: invalid JSON data\"\r\n--             if type(etc) = 'table' and etc.photo then\r\n--                note = note .. \" while processing for \" .. etc.photo:getFormattedMetadata('fileName')\r\n--             end\r\n--             LrErrors.throwUserError(note)\r\n--          end\r\n--\r\n--            :\r\n--            :\r\n--\r\n--          for i, photo in ipairs(photosToProcess) do\r\n--               :\r\n--               :\r\n--               local data = JSON:decode(someJsonText, { photo = photo })\r\n--               :\r\n--               :\r\n--          end\r\n--\r\n--\r\n--\r\n--\r\n--\r\n-- DECODING AND STRICT TYPES\r\n--\r\n--   Because both JSON objects and JSON arrays are converted to Lua tables,\r\n--   it's not normally possible to tell which original JSON type a\r\n--   particular Lua table was derived from, or guarantee decode-encode\r\n--   round-trip equivalency.\r\n--\r\n--   However, if you enable strictTypes, e.g.\r\n--\r\n--      JSON = assert(loadfile \"JSON.lua\")() --load the routines\r\n--      JSON.strictTypes = true\r\n--\r\n--   then the Lua table resulting from the decoding of a JSON object or\r\n--   JSON array is marked via Lua metatable, so that when re-encoded with\r\n--   JSON:encode() it ends up as the appropriate JSON type.\r\n--\r\n--   (This is not the default because other routines may not work well with\r\n--   tables that have a metatable set, for example, Lightroom API calls.)\r\n--\r\n--\r\n-- ENCODING (from a lua table to a JSON string)\r\n--\r\n--   JSON = assert(loadfile \"JSON.lua\")() -- one-time load of the routines\r\n--\r\n--   local raw_json_text    = JSON:encode(lua_table_or_value)\r\n--   local pretty_json_text = JSON:encode_pretty(lua_table_or_value) -- \"pretty printed\" version for human readability\r\n--   local custom_pretty    = JSON:encode(lua_table_or_value, etc, { pretty = true, indent = \"|  \", align_keys = false })\r\n--\r\n--   On error during encoding, this code calls:\r\n--\r\n--     JSON:onEncodeError(message, etc)\r\n--\r\n--   which you can override in your local JSON object.\r\n--\r\n--   The 'etc' in the error call is the second argument to encode()\r\n--   and encode_pretty(), or nil if it wasn't provided.\r\n--\r\n--\r\n-- PRETTY-PRINTING\r\n--\r\n--   An optional third argument, a table of options, allows a bit of\r\n--   configuration about how the encoding takes place:\r\n--\r\n--     pretty = JSON:encode(val, etc, {\r\n--                                       pretty = true,      -- if false, no other options matter\r\n--                                       indent = \"   \",     -- this provides for a three-space indent per nesting level\r\n--                                       align_keys = false, -- see below\r\n--                                     })\r\n--\r\n--   encode() and encode_pretty() are identical except that encode_pretty()\r\n--   provides a default options table if none given in the call:\r\n--\r\n--       { pretty = true, align_keys = false, indent = \"  \" }\r\n--\r\n--   For example, if\r\n--\r\n--      JSON:encode(data)\r\n--\r\n--   produces:\r\n--\r\n--      {\"city\":\"Kyoto\",\"climate\":{\"avg_temp\":16,\"humidity\":\"high\",\"snowfall\":\"minimal\"},\"country\":\"Japan\",\"wards\":11}\r\n--\r\n--   then\r\n--\r\n--      JSON:encode_pretty(data)\r\n--\r\n--   produces:\r\n--\r\n--      {\r\n--        \"city\": \"Kyoto\",\r\n--        \"climate\": {\r\n--          \"avg_temp\": 16,\r\n--          \"humidity\": \"high\",\r\n--          \"snowfall\": \"minimal\"\r\n--        },\r\n--        \"country\": \"Japan\",\r\n--        \"wards\": 11\r\n--      }\r\n--\r\n--   The following three lines return identical results:\r\n--       JSON:encode_pretty(data)\r\n--       JSON:encode_pretty(data, nil, { pretty = true, align_keys = false, indent = \"  \" })\r\n--       JSON:encode       (data, nil, { pretty = true, align_keys = false, indent = \"  \" })\r\n--\r\n--   An example of setting your own indent string:\r\n--\r\n--     JSON:encode_pretty(data, nil, { pretty = true, indent = \"|    \" })\r\n--\r\n--   produces:\r\n--\r\n--      {\r\n--      |    \"city\": \"Kyoto\",\r\n--      |    \"climate\": {\r\n--      |    |    \"avg_temp\": 16,\r\n--      |    |    \"humidity\": \"high\",\r\n--      |    |    \"snowfall\": \"minimal\"\r\n--      |    },\r\n--      |    \"country\": \"Japan\",\r\n--      |    \"wards\": 11\r\n--      }\r\n--\r\n--   An example of setting align_keys to true:\r\n--\r\n--     JSON:encode_pretty(data, nil, { pretty = true, indent = \"  \", align_keys = true })\r\n--\r\n--   produces:\r\n--\r\n--      {\r\n--           \"city\": \"Kyoto\",\r\n--        \"climate\": {\r\n--                     \"avg_temp\": 16,\r\n--                     \"humidity\": \"high\",\r\n--                     \"snowfall\": \"minimal\"\r\n--                   },\r\n--        \"country\": \"Japan\",\r\n--          \"wards\": 11\r\n--      }\r\n--\r\n--   which I must admit is kinda ugly, sorry. This was the default for\r\n--   encode_pretty() prior to version 20141223.14.\r\n--\r\n--\r\n--  AMBIGUOUS SITUATIONS DURING THE ENCODING\r\n--\r\n--   During the encode, if a Lua table being encoded contains both string\r\n--   and numeric keys, it fits neither JSON's idea of an object, nor its\r\n--   idea of an array. To get around this, when any string key exists (or\r\n--   when non-positive numeric keys exist), numeric keys are converted to\r\n--   strings.\r\n--\r\n--   For example,\r\n--     JSON:encode({ \"one\", \"two\", \"three\", SOMESTRING = \"some string\" }))\r\n--   produces the JSON object\r\n--     {\"1\":\"one\",\"2\":\"two\",\"3\":\"three\",\"SOMESTRING\":\"some string\"}\r\n--\r\n--   To prohibit this conversion and instead make it an error condition, set\r\n--      JSON.noKeyConversion = true\r\n--\r\n\r\n\r\n\r\n\r\n--\r\n-- SUMMARY OF METHODS YOU CAN OVERRIDE IN YOUR LOCAL LUA JSON OBJECT\r\n--\r\n--    assert\r\n--    onDecodeError\r\n--    onDecodeOfNilError\r\n--    onDecodeOfHTMLError\r\n--    onEncodeError\r\n--\r\n--  If you want to create a separate Lua JSON object with its own error handlers,\r\n--  you can reload JSON.lua or use the :new() method.\r\n--\r\n---------------------------------------------------------------------------\r\n\r\nlocal default_pretty_indent  = \"  \"\r\nlocal default_pretty_options = { pretty = true, align_keys = false, indent = default_pretty_indent }\r\n\r\nlocal isArray  = { __tostring = function() return \"JSON array\"  end }    isArray.__index  = isArray\r\nlocal isObject = { __tostring = function() return \"JSON object\" end }    isObject.__index = isObject\r\n\r\n\r\nfunction OBJDEF:newArray(tbl)\r\n    return setmetatable(tbl or {}, isArray)\r\nend\r\n\r\nfunction OBJDEF:newObject(tbl)\r\n    return setmetatable(tbl or {}, isObject)\r\nend\r\n\r\nlocal function unicode_codepoint_as_utf8(codepoint)\r\n    --\r\n    -- codepoint is a number\r\n    --\r\n    if codepoint <= 127 then\r\n        return string.char(codepoint)\r\n\r\n    elseif codepoint <= 2047 then\r\n        --\r\n        -- 110yyyxx 10xxxxxx         <-- useful notation from http://en.wikipedia.org/wiki/Utf8\r\n        --\r\n        local highpart = math.floor(codepoint / 0x40)\r\n        local lowpart  = codepoint - (0x40 * highpart)\r\n        return string.char(0xC0 + highpart,\r\n                0x80 + lowpart)\r\n\r\n    elseif codepoint <= 65535 then\r\n        --\r\n        -- 1110yyyy 10yyyyxx 10xxxxxx\r\n        --\r\n        local highpart  = math.floor(codepoint / 0x1000)\r\n        local remainder = codepoint - 0x1000 * highpart\r\n        local midpart   = math.floor(remainder / 0x40)\r\n        local lowpart   = remainder - 0x40 * midpart\r\n\r\n        highpart = 0xE0 + highpart\r\n        midpart  = 0x80 + midpart\r\n        lowpart  = 0x80 + lowpart\r\n\r\n        --\r\n        -- Check for an invalid character (thanks Andy R. at Adobe).\r\n        -- See table 3.7, page 93, in http://www.unicode.org/versions/Unicode5.2.0/ch03.pdf#G28070\r\n        --\r\n        if ( highpart == 0xE0 and midpart < 0xA0 ) or\r\n                ( highpart == 0xED and midpart > 0x9F ) or\r\n                ( highpart == 0xF0 and midpart < 0x90 ) or\r\n                ( highpart == 0xF4 and midpart > 0x8F )\r\n        then\r\n            return \"?\"\r\n        else\r\n            return string.char(highpart,\r\n                    midpart,\r\n                    lowpart)\r\n        end\r\n\r\n    else\r\n        --\r\n        -- 11110zzz 10zzyyyy 10yyyyxx 10xxxxxx\r\n        --\r\n        local highpart  = math.floor(codepoint / 0x40000)\r\n        local remainder = codepoint - 0x40000 * highpart\r\n        local midA      = math.floor(remainder / 0x1000)\r\n        remainder       = remainder - 0x1000 * midA\r\n        local midB      = math.floor(remainder / 0x40)\r\n        local lowpart   = remainder - 0x40 * midB\r\n\r\n        return string.char(0xF0 + highpart,\r\n                0x80 + midA,\r\n                0x80 + midB,\r\n                0x80 + lowpart)\r\n    end\r\nend\r\n\r\nfunction OBJDEF:onDecodeError(message, text, location, etc)\r\n    if text then\r\n        if location then\r\n            message = string.format(\"%s at char %d of: %s\", message, location, text)\r\n        else\r\n            message = string.format(\"%s: %s\", message, text)\r\n        end\r\n    end\r\n\r\n    if etc ~= nil then\r\n        message = message .. \" (\" .. OBJDEF:encode(etc) .. \")\"\r\n    end\r\n\r\n    if self.assert then\r\n        self.assert(false, message)\r\n    else\r\n        assert(false, message)\r\n    end\r\nend\r\n\r\nOBJDEF.onDecodeOfNilError  = OBJDEF.onDecodeError\r\nOBJDEF.onDecodeOfHTMLError = OBJDEF.onDecodeError\r\n\r\nfunction OBJDEF:onEncodeError(message, etc)\r\n    if etc ~= nil then\r\n        message = message .. \" (\" .. OBJDEF:encode(etc) .. \")\"\r\n    end\r\n\r\n    if self.assert then\r\n        self.assert(false, message)\r\n    else\r\n        assert(false, message)\r\n    end\r\nend\r\n\r\nlocal function grok_number(self, text, start, etc)\r\n    --\r\n    -- Grab the integer part\r\n    --\r\n    local integer_part = text:match('^-?[1-9]%d*', start)\r\n            or text:match(\"^-?0\",        start)\r\n\r\n    if not integer_part then\r\n        self:onDecodeError(\"expected number\", text, start, etc)\r\n    end\r\n\r\n    local i = start + integer_part:len()\r\n\r\n    --\r\n    -- Grab an optional decimal part\r\n    --\r\n    local decimal_part = text:match('^%.%d+', i) or \"\"\r\n\r\n    i = i + decimal_part:len()\r\n\r\n    --\r\n    -- Grab an optional exponential part\r\n    --\r\n    local exponent_part = text:match('^[eE][-+]?%d+', i) or \"\"\r\n\r\n    i = i + exponent_part:len()\r\n\r\n    local full_number_text = integer_part .. decimal_part .. exponent_part\r\n    local as_number = tonumber(full_number_text)\r\n\r\n    if not as_number then\r\n        self:onDecodeError(\"bad number\", text, start, etc)\r\n    end\r\n\r\n    return as_number, i\r\nend\r\n\r\n\r\nlocal function grok_string(self, text, start, etc)\r\n\r\n    if text:sub(start,start) ~= '\"' then\r\n        self:onDecodeError(\"expected string's opening quote\", text, start, etc)\r\n    end\r\n\r\n    local i = start + 1 -- +1 to bypass the initial quote\r\n    local text_len = text:len()\r\n    local VALUE = \"\"\r\n    while i <= text_len do\r\n        local c = text:sub(i,i)\r\n        if c == '\"' then\r\n            return VALUE, i + 1\r\n        end\r\n        if c ~= '\\\\' then\r\n            VALUE = VALUE .. c\r\n            i = i + 1\r\n        elseif text:match('^\\\\b', i) then\r\n            VALUE = VALUE .. \"\\b\"\r\n            i = i + 2\r\n        elseif text:match('^\\\\f', i) then\r\n            VALUE = VALUE .. \"\\f\"\r\n            i = i + 2\r\n        elseif text:match('^\\\\n', i) then\r\n            VALUE = VALUE .. \"\\n\"\r\n            i = i + 2\r\n        elseif text:match('^\\\\r', i) then\r\n            VALUE = VALUE .. \"\\r\"\r\n            i = i + 2\r\n        elseif text:match('^\\\\t', i) then\r\n            VALUE = VALUE .. \"\\t\"\r\n            i = i + 2\r\n        else\r\n            local hex = text:match('^\\\\u([0123456789aAbBcCdDeEfF][0123456789aAbBcCdDeEfF][0123456789aAbBcCdDeEfF][0123456789aAbBcCdDeEfF])', i)\r\n            if hex then\r\n                i = i + 6 -- bypass what we just read\r\n\r\n                -- We have a Unicode codepoint. It could be standalone, or if in the proper range and\r\n                -- followed by another in a specific range, it'll be a two-code surrogate pair.\r\n                local codepoint = tonumber(hex, 16)\r\n                if codepoint >= 0xD800 and codepoint <= 0xDBFF then\r\n                    -- it's a hi surrogate... see whether we have a following low\r\n                    local lo_surrogate = text:match('^\\\\u([dD][cdefCDEF][0123456789aAbBcCdDeEfF][0123456789aAbBcCdDeEfF])', i)\r\n                    if lo_surrogate then\r\n                        i = i + 6 -- bypass the low surrogate we just read\r\n                        codepoint = 0x2400 + (codepoint - 0xD800) * 0x400 + tonumber(lo_surrogate, 16)\r\n                    else\r\n                        -- not a proper low, so we'll just leave the first codepoint as is and spit it out.\r\n                    end\r\n                end\r\n                VALUE = VALUE .. unicode_codepoint_as_utf8(codepoint)\r\n\r\n            else\r\n\r\n                -- just pass through what's escaped\r\n                VALUE = VALUE .. text:match('^\\\\(.)', i)\r\n                i = i + 2\r\n            end\r\n        end\r\n    end\r\n\r\n    self:onDecodeError(\"unclosed string\", text, start, etc)\r\nend\r\n\r\nlocal function skip_whitespace(text, start)\r\n\r\n    local _, match_end = text:find(\"^[ \\n\\r\\t]+\", start) -- [http://www.ietf.org/rfc/rfc4627.txt] Section 2\r\n    if match_end then\r\n        return match_end + 1\r\n    else\r\n        return start\r\n    end\r\nend\r\n\r\nlocal grok_one -- assigned later\r\n\r\nlocal function grok_object(self, text, start, etc)\r\n    if text:sub(start,start) ~= '{' then\r\n        self:onDecodeError(\"expected '{'\", text, start, etc)\r\n    end\r\n\r\n    local i = skip_whitespace(text, start + 1) -- +1 to skip the '{'\r\n\r\n    local VALUE = self.strictTypes and self:newObject { } or { }\r\n\r\n    if text:sub(i,i) == '}' then\r\n        return VALUE, i + 1\r\n    end\r\n    local text_len = text:len()\r\n    while i <= text_len do\r\n        local key, new_i = grok_string(self, text, i, etc)\r\n\r\n        i = skip_whitespace(text, new_i)\r\n\r\n        if text:sub(i, i) ~= ':' then\r\n            self:onDecodeError(\"expected colon\", text, i, etc)\r\n        end\r\n\r\n        i = skip_whitespace(text, i + 1)\r\n\r\n        local new_val, new_i = grok_one(self, text, i)\r\n\r\n        VALUE[key] = new_val\r\n\r\n        --\r\n        -- Expect now either '}' to end things, or a ',' to allow us to continue.\r\n        --\r\n        i = skip_whitespace(text, new_i)\r\n\r\n        local c = text:sub(i,i)\r\n\r\n        if c == '}' then\r\n            return VALUE, i + 1\r\n        end\r\n\r\n        if text:sub(i, i) ~= ',' then\r\n            self:onDecodeError(\"expected comma or '}'\", text, i, etc)\r\n        end\r\n\r\n        i = skip_whitespace(text, i + 1)\r\n    end\r\n\r\n    self:onDecodeError(\"unclosed '{'\", text, start, etc)\r\nend\r\n\r\nlocal function grok_array(self, text, start, etc)\r\n    if text:sub(start,start) ~= '[' then\r\n        self:onDecodeError(\"expected '['\", text, start, etc)\r\n    end\r\n\r\n    local i = skip_whitespace(text, start + 1) -- +1 to skip the '['\r\n    local VALUE = self.strictTypes and self:newArray { } or { }\r\n    if text:sub(i,i) == ']' then\r\n        return VALUE, i + 1\r\n    end\r\n\r\n    local VALUE_INDEX = 1\r\n\r\n    local text_len = text:len()\r\n    while i <= text_len do\r\n        local val, new_i = grok_one(self, text, i)\r\n\r\n        -- can't table.insert(VALUE, val) here because it's a no-op if val is nil\r\n        VALUE[VALUE_INDEX] = val\r\n        VALUE_INDEX = VALUE_INDEX + 1\r\n\r\n        i = skip_whitespace(text, new_i)\r\n\r\n        --\r\n        -- Expect now either ']' to end things, or a ',' to allow us to continue.\r\n        --\r\n        local c = text:sub(i,i)\r\n        if c == ']' then\r\n            return VALUE, i + 1\r\n        end\r\n        if text:sub(i, i) ~= ',' then\r\n            self:onDecodeError(\"expected comma or '['\", text, i, etc)\r\n        end\r\n        i = skip_whitespace(text, i + 1)\r\n    end\r\n    self:onDecodeError(\"unclosed '['\", text, start, etc)\r\nend\r\n\r\n\r\ngrok_one = function(self, text, start, etc)\r\n    -- Skip any whitespace\r\n    start = skip_whitespace(text, start)\r\n\r\n    if start > text:len() then\r\n        self:onDecodeError(\"unexpected end of string\", text, nil, etc)\r\n    end\r\n\r\n    if text:find('^\"', start) then\r\n        return grok_string(self, text, start, etc)\r\n\r\n    elseif text:find('^[-0123456789 ]', start) then\r\n        return grok_number(self, text, start, etc)\r\n\r\n    elseif text:find('^%{', start) then\r\n        return grok_object(self, text, start, etc)\r\n\r\n    elseif text:find('^%[', start) then\r\n        return grok_array(self, text, start, etc)\r\n\r\n    elseif text:find('^true', start) then\r\n        return true, start + 4\r\n\r\n    elseif text:find('^false', start) then\r\n        return false, start + 5\r\n\r\n    elseif text:find('^null', start) then\r\n        return nil, start + 4\r\n\r\n    else\r\n        self:onDecodeError(\"can't parse JSON\", text, start, etc)\r\n    end\r\nend\r\n\r\n---@param text string\r\nfunction OBJDEF:decode(text, etc)\r\n    if type(self) ~= 'table' or self.__index ~= OBJDEF then\r\n        OBJDEF:onDecodeError(\"JSON:decode must be called in method format\", nil, nil, etc)\r\n    end\r\n\r\n    if text == nil then\r\n        self:onDecodeOfNilError(string.format(\"nil passed to JSON:decode()\"), nil, nil, etc)\r\n    elseif type(text) ~= 'string' then\r\n        self:onDecodeError(string.format(\"expected string argument to JSON:decode(), got %s\", type(text)), nil, nil, etc)\r\n    end\r\n\r\n    if text:match('^%s*$') then\r\n        return nil\r\n    end\r\n\r\n    if text:match('^%s*<') then\r\n        -- Can't be JSON... we'll assume it's HTML\r\n        self:onDecodeOfHTMLError(string.format(\"html passed to JSON:decode()\"), text, nil, etc)\r\n    end\r\n\r\n    --\r\n    -- Ensure that it's not UTF-32 or UTF-16.\r\n    -- Those are perfectly valid encodings for JSON (as per RFC 4627 section 3),\r\n    -- but this package can't handle them.\r\n    --\r\n    if text:sub(1,1):byte() == 0 or (text:len() >= 2 and text:sub(2,2):byte() == 0) then\r\n        self:onDecodeError(\"JSON package groks only UTF-8, sorry\", text, nil, etc)\r\n    end\r\n\r\n    local success, value = pcall(grok_one, self, text, 1, etc)\r\n\r\n    if success then\r\n        return value\r\n    else\r\n        -- if JSON:onDecodeError() didn't abort out of the pcall, we'll have received the error message here as \"value\", so pass it along as an assert.\r\n        if self.assert then\r\n            self.assert(false, value)\r\n        else\r\n            assert(false, value)\r\n        end\r\n        -- and if we're still here, return a nil and throw the error message on as a second arg\r\n        return nil, value\r\n    end\r\nend\r\n\r\nlocal function backslash_replacement_function(c)\r\n    if c == \"\\n\" then\r\n        return \"\\\\n\"\r\n    elseif c == \"\\r\" then\r\n        return \"\\\\r\"\r\n    elseif c == \"\\t\" then\r\n        return \"\\\\t\"\r\n    elseif c == \"\\b\" then\r\n        return \"\\\\b\"\r\n    elseif c == \"\\f\" then\r\n        return \"\\\\f\"\r\n    elseif c == '\"' then\r\n        return '\\\\\"'\r\n    elseif c == '\\\\' then\r\n        return '\\\\\\\\'\r\n    else\r\n        return string.format(\"\\\\u%04x\", c:byte())\r\n    end\r\nend\r\n\r\nlocal chars_to_be_escaped_in_JSON_string\r\n= '['\r\n        ..    '\"'    -- class sub-pattern to match a double quote\r\n        ..    '%\\\\'  -- class sub-pattern to match a backslash\r\n        ..    '%z'   -- class sub-pattern to match a null\r\n        ..    '\\001' .. '-' .. '\\031' -- class sub-pattern to match control characters\r\n        .. ']'\r\n\r\nlocal function json_string_literal(value)\r\n    local newval = value:gsub(chars_to_be_escaped_in_JSON_string, backslash_replacement_function)\r\n    return '\"' .. newval .. '\"'\r\nend\r\n\r\nlocal function object_or_array(self, T, etc)\r\n    --\r\n    -- We need to inspect all the keys... if there are any strings, we'll convert to a JSON\r\n    -- object. If there are only numbers, it's a JSON array.\r\n    --\r\n    -- If we'll be converting to a JSON object, we'll want to sort the keys so that the\r\n    -- end result is deterministic.\r\n    --\r\n    local string_keys = { }\r\n    local number_keys = { }\r\n    local number_keys_must_be_strings = false\r\n    local maximum_number_key\r\n\r\n    for key in pairs(T) do\r\n        if type(key) == 'string' then\r\n            table.insert(string_keys, key)\r\n        elseif type(key) == 'number' then\r\n            table.insert(number_keys, key)\r\n            if key <= 0 or key >= math.huge then\r\n                number_keys_must_be_strings = true\r\n            elseif not maximum_number_key or key > maximum_number_key then\r\n                maximum_number_key = key\r\n            end\r\n        else\r\n            self:onEncodeError(\"can't encode table with a key of type \" .. type(key), etc)\r\n        end\r\n    end\r\n\r\n    if #string_keys == 0 and not number_keys_must_be_strings then\r\n        --\r\n        -- An empty table, or a numeric-only array\r\n        --\r\n        if #number_keys > 0 then\r\n            return nil, maximum_number_key -- an array\r\n        elseif tostring(T) == \"JSON array\" then\r\n            return nil\r\n        elseif tostring(T) == \"JSON object\" then\r\n            return { }\r\n        else\r\n            -- have to guess, so we'll pick array, since empty arrays are likely more common than empty objects\r\n            return nil\r\n        end\r\n    end\r\n\r\n    table.sort(string_keys)\r\n\r\n    local map\r\n    if #number_keys > 0 then\r\n        --\r\n        -- If we're here then we have either mixed string/number keys, or numbers inappropriate for a JSON array\r\n        -- It's not ideal, but we'll turn the numbers into strings so that we can at least create a JSON object.\r\n        --\r\n\r\n        if self.noKeyConversion then\r\n            self:onEncodeError(\"a table with both numeric and string keys could be an object or array; aborting\", etc)\r\n        end\r\n\r\n        --\r\n        -- Have to make a shallow copy of the source table so we can remap the numeric keys to be strings\r\n        --\r\n        map = { }\r\n        for key, val in pairs(T) do\r\n            map[key] = val\r\n        end\r\n\r\n        table.sort(number_keys)\r\n\r\n        --\r\n        -- Throw numeric keys in there as strings\r\n        --\r\n        for _, number_key in ipairs(number_keys) do\r\n            local string_key = tostring(number_key)\r\n            if map[string_key] == nil then\r\n                table.insert(string_keys , string_key)\r\n                map[string_key] = T[number_key]\r\n            else\r\n                self:onEncodeError(\"conflict converting table with mixed-type keys into a JSON object: key \" .. number_key .. \" exists both as a string and a number.\", etc)\r\n            end\r\n        end\r\n    end\r\n\r\n    return string_keys, nil, map\r\nend\r\n\r\n--\r\n-- Encode\r\n--\r\n-- 'options' is nil, or a table with possible keys:\r\n--    pretty            -- if true, return a pretty-printed version\r\n--    indent            -- a string (usually of spaces) used to indent each nested level\r\n--    align_keys        -- if true, align all the keys when formatting a table\r\n--\r\nlocal encode_value -- must predeclare because it calls itself\r\nfunction encode_value(self, value, parents, etc, options, indent)\r\n\r\n    if value == nil then\r\n        return 'null'\r\n\r\n    elseif type(value) == 'string' then\r\n        return json_string_literal(value)\r\n\r\n    elseif type(value) == 'number' then\r\n        if value ~= value then\r\n            --\r\n            -- NaN (Not a Number).\r\n            -- JSON has no NaN, so we have to fudge the best we can. This should really be a package option.\r\n            --\r\n            return \"null\"\r\n        elseif value >= math.huge then\r\n            --\r\n            -- Positive infinity. JSON has no INF, so we have to fudge the best we can. This should\r\n            -- really be a package option. Note: at least with some implementations, positive infinity\r\n            -- is both \">= math.huge\" and \"<= -math.huge\", which makes no sense but that's how it is.\r\n            -- Negative infinity is properly \"<= -math.huge\". So, we must be sure to check the \">=\"\r\n            -- case first.\r\n            --\r\n            return \"1e+9999\"\r\n        elseif value <= -math.huge then\r\n            --\r\n            -- Negative infinity.\r\n            -- JSON has no INF, so we have to fudge the best we can. This should really be a package option.\r\n            --\r\n            return \"-1e+9999\"\r\n        else\r\n            return tostring(value)\r\n        end\r\n\r\n    elseif type(value) == 'boolean' then\r\n        return tostring(value)\r\n\r\n    elseif type(value) ~= 'table' then\r\n        self:onEncodeError(\"can't convert \" .. type(value) .. \" to JSON\", etc)\r\n\r\n    else\r\n        --\r\n        -- A table to be converted to either a JSON object or array.\r\n        --\r\n        local T = value\r\n\r\n        if type(options) ~= 'table' then\r\n            options = {}\r\n        end\r\n        if type(indent) ~= 'string' then\r\n            indent = \"\"\r\n        end\r\n\r\n        if parents[T] then\r\n            self:onEncodeError(\"table \" .. tostring(T) .. \" is a child of itself\", etc)\r\n        else\r\n            parents[T] = true\r\n        end\r\n\r\n        local result_value\r\n\r\n        local object_keys, maximum_number_key, map = object_or_array(self, T, etc)\r\n        if maximum_number_key then\r\n            --\r\n            -- An array...\r\n            --\r\n            local ITEMS = { }\r\n            for i = 1, maximum_number_key do\r\n                table.insert(ITEMS, encode_value(self, T[i], parents, etc, options, indent))\r\n            end\r\n\r\n            if options.pretty then\r\n                result_value = \"[ \" .. table.concat(ITEMS, \", \") .. \" ]\"\r\n            else\r\n                result_value = \"[\"  .. table.concat(ITEMS, \",\")  .. \"]\"\r\n            end\r\n\r\n        elseif object_keys then\r\n            --\r\n            -- An object\r\n            --\r\n            local TT = map or T\r\n\r\n            if options.pretty then\r\n\r\n                local KEYS = { }\r\n                local max_key_length = 0\r\n                for _, key in ipairs(object_keys) do\r\n                    local encoded = encode_value(self, tostring(key), parents, etc, options, indent)\r\n                    if options.align_keys then\r\n                        max_key_length = math.max(max_key_length, #encoded)\r\n                    end\r\n                    table.insert(KEYS, encoded)\r\n                end\r\n                local key_indent = indent .. tostring(options.indent or \"\")\r\n                local subtable_indent = key_indent .. string.rep(\" \", max_key_length) .. (options.align_keys and \"  \" or \"\")\r\n                local FORMAT = \"%s%\" .. string.format(\"%d\", max_key_length) .. \"s: %s\"\r\n\r\n                local COMBINED_PARTS = { }\r\n                for i, key in ipairs(object_keys) do\r\n                    local encoded_val = encode_value(self, TT[key], parents, etc, options, subtable_indent)\r\n                    table.insert(COMBINED_PARTS, string.format(FORMAT, key_indent, KEYS[i], encoded_val))\r\n                end\r\n                result_value = \"{\\n\" .. table.concat(COMBINED_PARTS, \",\\n\") .. \"\\n\" .. indent .. \"}\"\r\n\r\n            else\r\n\r\n                local PARTS = { }\r\n                for _, key in ipairs(object_keys) do\r\n                    local encoded_val = encode_value(self, TT[key],       parents, etc, options, indent)\r\n                    local encoded_key = encode_value(self, tostring(key), parents, etc, options, indent)\r\n                    table.insert(PARTS, string.format(\"%s:%s\", encoded_key, encoded_val))\r\n                end\r\n                result_value = \"{\" .. table.concat(PARTS, \",\") .. \"}\"\r\n\r\n            end\r\n        else\r\n            --\r\n            -- An empty array/object... we'll treat it as an array, though it should really be an option\r\n            --\r\n            result_value = \"[]\"\r\n        end\r\n\r\n        parents[T] = false\r\n        return result_value\r\n    end\r\nend\r\n\r\n\r\nfunction OBJDEF:encode(value, etc, options)\r\n    if type(self) ~= 'table' or self.__index ~= OBJDEF then\r\n        OBJDEF:onEncodeError(\"JSON:encode must be called in method format\", etc)\r\n    end\r\n    return encode_value(self, value, {}, etc, options or nil)\r\nend\r\n\r\nfunction OBJDEF:encode_pretty(value, etc, options)\r\n    if type(self) ~= 'table' or self.__index ~= OBJDEF then\r\n        OBJDEF:onEncodeError(\"JSON:encode_pretty must be called in method format\", etc)\r\n    end\r\n    return encode_value(self, value, {}, etc, options or default_pretty_options)\r\nend\r\n\r\nfunction OBJDEF.__tostring()\r\n    return \"JSON encode/decode package\"\r\nend\r\n\r\nOBJDEF.__index = OBJDEF\r\n\r\nfunction OBJDEF:new(args)\r\n    local new = { }\r\n\r\n    if args then\r\n        for key, val in pairs(args) do\r\n            new[key] = val\r\n        end\r\n    end\r\n\r\n    return setmetatable(new, OBJDEF)\r\nend\r\n\r\nreturn OBJDEF:new()\r\n\r\n--\r\n-- Version history:\r\n--\r\n--   20141223.14   The encode_pretty() routine produced fine results for small datasets, but isn't really\r\n--                 appropriate for anything large, so with help from Alex Aulbach I've made the encode routines\r\n--                 more flexible, and changed the default encode_pretty() to be more generally useful.\r\n--\r\n--                 Added a third 'options' argument to the encode() and encode_pretty() routines, to control\r\n--                 how the encoding takes place.\r\n--\r\n--                 Updated docs to add assert() call to the loadfile() line, just as good practice so that\r\n--                 if there is a problem loading JSON.lua, the appropriate error message will percolate up.\r\n--\r\n--   20140920.13   Put back (in a way that doesn't cause warnings about unused variables) the author string,\r\n--                 so that the source of the package, and its version number, are visible in compiled copies.\r\n--\r\n--   20140911.12   Minor lua cleanup.\r\n--                 Fixed internal reference to 'JSON.noKeyConversion' to reference 'self' instead of 'JSON'.\r\n--                 (Thanks to SmugMug's David Parry for these.)\r\n--\r\n--   20140418.11   JSON nulls embedded within an array were being ignored, such that\r\n--                     [\"1\",null,null,null,null,null,\"seven\"],\r\n--                 would return\r\n--                     {1,\"seven\"}\r\n--                 It's now fixed to properly return\r\n--                     {1, nil, nil, nil, nil, nil, \"seven\"}\r\n--                 Thanks to \"haddock\" for catching the error.\r\n--\r\n--   20140116.10   The user's JSON.assert() wasn't always being used. Thanks to \"blue\" for the heads up.\r\n--\r\n--   20131118.9    Update for Lua 5.3... it seems that tostring(2/1) produces \"2.0\" instead of \"2\",\r\n--                 and this caused some problems.\r\n--\r\n--   20131031.8    Unified the code for encode() and encode_pretty(); they had been stupidly separate,\r\n--                 and had of course diverged (encode_pretty didn't get the fixes that encode got, so\r\n--                 sometimes produced incorrect results; thanks to Mattie for the heads up).\r\n--\r\n--                 Handle encoding tables with non-positive numeric keys (unlikely, but possible).\r\n--\r\n--                 If a table has both numeric and string keys, or its numeric keys are inappropriate\r\n--                 (such as being non-positive or infinite), the numeric keys are turned into\r\n--                 string keys appropriate for a JSON object. So, as before,\r\n--                         JSON:encode({ \"one\", \"two\", \"three\" })\r\n--                 produces the array\r\n--                         [\"one\",\"two\",\"three\"]\r\n--                 but now something with mixed key types like\r\n--                         JSON:encode({ \"one\", \"two\", \"three\", SOMESTRING = \"some string\" }))\r\n--                 instead of throwing an error produces an object:\r\n--                         {\"1\":\"one\",\"2\":\"two\",\"3\":\"three\",\"SOMESTRING\":\"some string\"}\r\n--\r\n--                 To maintain the prior throw-an-error semantics, set\r\n--                      JSON.noKeyConversion = true\r\n--\r\n--   20131004.7    Release under a Creative Commons CC-BY license, which I should have done from day one, sorry.\r\n--\r\n--   20130120.6    Comment update: added a link to the specific page on my blog where this code can\r\n--                 be found, so that folks who come across the code outside of my blog can find updates\r\n--                 more easily.\r\n--\r\n--   20111207.5    Added support for the 'etc' arguments, for better error reporting.\r\n--\r\n--   20110731.4    More feedback from David Kolf on how to make the tests for Nan/Infinity system independent.\r\n--\r\n--   20110730.3    Incorporated feedback from David Kolf at http://lua-users.org/wiki/JsonModules:\r\n--\r\n--                   * When encoding lua for JSON, Sparse numeric arrays are now handled by\r\n--                     spitting out full arrays, such that\r\n--                        JSON:encode({\"one\", \"two\", [10] = \"ten\"})\r\n--                     returns\r\n--                        [\"one\",\"two\",null,null,null,null,null,null,null,\"ten\"]\r\n--\r\n--                     In 20100810.2 and earlier, only up to the first non-null value would have been retained.\r\n--\r\n--                   * When encoding lua for JSON, numeric value NaN gets spit out as null, and infinity as \"1+e9999\".\r\n--                     Version 20100810.2 and earlier created invalid JSON in both cases.\r\n--\r\n--                   * Unicode surrogate pairs are now detected when decoding JSON.\r\n--\r\n--   20100810.2    added some checking to ensure that an invalid Unicode character couldn't leak in to the UTF-8 encoding\r\n--\r\n--   20100731.1    initial public release\r\n--\r\n\r\n","m_scriptType":"kModuleScript"}}]},{"class":"cModuleScriptObject","name":"ObjPoolUtilModule","guid":[224260482,2246003615,2615419330,1326750316],"parentGuid":[1158799413,2751941742,3186700785,1570109853],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"ObjPoolUtilModule"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":10,"class":"sLuaComponent","data":{"m_luaContent":"---对象池工具模块\r\n---@module ObjPoolUtil\r\n-- @copyright Lilith Games, Avatar Team\r\n-- @author Yen Yuan\r\n---@class ObjPoolUtil\r\nlocal ObjPoolUtil = class('ObjPoolUtil')\r\n\r\n---创建某一个对象的对象池\r\n---@param _folderName Object 管理的目录\r\n---@param _objName string 对象的Archetype名\r\n---@param _maxCount number 对象池最大上限，不填则为100\r\n---@return ObjPoolUtil\r\nfunction ObjPoolUtil.static.Newpool(_folderName, _objName, _maxCount)\r\n    if _folderName == nil or _objName == nil then\r\n        error('管理目录或管理对象为空')\r\n    end\r\n    if _maxCount == nil then\r\n        _maxCount = 100\r\n    end\r\n    local realPool = class(_objName .. 'Pool', ObjPoolUtil)\r\n    realPool.static.obj = _objName\r\n    realPool.static.folder = _folderName\r\n    realPool.static.maxCount = _maxCount\r\n    realPool.pool = {}\r\n    debug(string.format('创建了一个%s的对象池，目录为%s', _objName, _folderName))\r\n    return realPool\r\nend\r\n\r\n---从池中创建对象到世界下\r\n---@param _position Vector3\r\n---@param _rotation EulerDegree\r\nfunction ObjPoolUtil:Create(_position, _rotation)\r\n    local realObj = nil\r\n    if #self.pool == 0 then\r\n        realObj = world:CreateInstance(self.obj, self.obj, self.folder, _position, _rotation)\r\n        if realObj == nil then\r\n            error(string.format('Archetype下没有名为%s的对象', self.obj))\r\n            return\r\n        end\r\n        return realObj\r\n    else\r\n        realObj = self.pool[1]\r\n        self.pool[1].Position = _position\r\n        self.pool[1].Rotation = _rotation\r\n        self.pool[1]:SetActive(true)\r\n        table.remove(self.pool, 1)\r\n        return realObj\r\n    end\r\nend\r\n\r\n---从世界中销毁对象到池中\r\n---@param _obj Object\r\nfunction ObjPoolUtil:Destroy(_obj)\r\n    if _obj == nil then\r\n        error('传入对象为空')\r\n    elseif #self.pool > self.maxCount then\r\n        warn(string.format('%s对象池已满，该对象会永久销毁', self.obj))\r\n        _obj:Destroy()\r\n    else\r\n        table.insert(self.pool, _obj)\r\n        _obj:SetActive(false)\r\n    end\r\nend\r\n\r\nreturn ObjPoolUtil\r\n","m_scriptType":"kModuleScript"}}]},{"class":"cModuleScriptObject","name":"SoundUtilModule","guid":[2791942787,3066971825,2597952715,4258126891],"parentGuid":[1158799413,2751941742,3186700785,1570109853],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"SoundUtilModule"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":10,"class":"sLuaComponent","data":{"m_luaContent":"--- 音效播放模块\r\n---@module SoundUtil\r\n---@copyright Lilith Games, Avatar Team\r\n---@author Sharif Ma\r\n---@class SoundUtil\r\nlocal SoundUtil = {}\r\n\r\nfunction SoundUtil:Init()\r\n    self.SoundPlaying = {}\r\n    self.Table_Sound = GameCsv.Sound\r\nend\r\n\r\n---创建一个新音效并播放\r\n---@param _ID number 音效的ID\r\n---@param  _SoundSourceObj Object 音效的挂载物体,不填则为2D音效,挂载在主摄像机上\r\nfunction SoundUtil:PlaySound(_ID, _SoundSourceObj)\r\n    local Info, _Duration\r\n    _SoundSourceObj = _SoundSourceObj or world.CurrentCamera\r\n    Info = self.Table_Sound[_ID]\r\n    if not Info then\r\n        error('表中不存在该ID的音效')\r\n        return\r\n    end\r\n    _Duration = Info.Duration\r\n    local sameSoundPlayingNum = 0\r\n    for k, v in pairs(self.SoundPlaying) do\r\n        if v == _ID then\r\n            sameSoundPlayingNum = sameSoundPlayingNum + 1\r\n        end\r\n    end\r\n    if sameSoundPlayingNum > 0 and not Info.CoverPlay then\r\n        info(_ID .. '音效CoverPlay字段为false，不能覆盖播放')\r\n        return\r\n    end\r\n\r\n    local Audio = world:CreateObject('AudioSource', 'Audio_' .. Info.FileName, _SoundSourceObj)\r\n    Audio.LocalPosition = Vector3.Zero\r\n    Audio.SoundClip = ResourceManager.GetSoundClip('Audio/' .. Info.FileName)\r\n    print('Audio.SoundClip', Audio.SoundClip)\r\n    Audio.Volume = Info.Volume\r\n    Audio.MaxDistance = 10\r\n    Audio.MinDistance = 10\r\n    Audio.Loop = Info.IsLoop\r\n    Audio:Play()\r\n    table.insert(self.SoundPlaying, _ID)\r\n    _Duration = _Duration or 1\r\n    invoke(\r\n        function()\r\n            if Audio then\r\n                Audio:Destroy()\r\n            end\r\n        end,\r\n        _Duration\r\n    )\r\n    invoke(\r\n        function()\r\n            for k, v in pairs(self.SoundPlaying) do\r\n                if v == _ID then\r\n                    table.remove(self.SoundPlaying, k)\r\n                end\r\n            end\r\n        end,\r\n        _Duration\r\n    )\r\nend\r\n\r\nreturn SoundUtil\r\n","m_scriptType":"kModuleScript"}}]},{"class":"cModuleScriptObject","name":"LinkedListModule","guid":[1855297973,3798353823,2294500910,1039830298],"parentGuid":[1158799413,2751941742,3186700785,1570109853],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"LinkedListModule"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":10,"class":"sLuaComponent","data":{"m_luaContent":"--- C# 双向链表\r\n-- @module C# doubly linked list implemented with lua\r\n-- @copyright Lilith Games, Avatar Team\r\n-- @author Bruce Chen\r\n-- @see https://wiki.lilithgames.com/x/7yRZAg\r\n-- @see https://github.com/BruceCheng1995/LuaLinkedList\r\n\r\nlocal LinkedList = {}\r\nlocal LinkedNode = {}\r\nLinkedNode.__index = LinkedNode\r\n\r\nlocal NativePrint = print\r\nlocal EmptuFunc = function()\r\nend\r\n--是否开放内部日志\r\nfunction LinkedList:EnableLog(_enable)\r\n    if _enable then\r\n        print = NativePrint\r\n    else\r\n        print = EmptuFunc\r\n    end\r\nend\r\nLinkedList:EnableLog(false)\r\n--新建节点\r\nfunction LinkedNode:new(value, list)\r\n    local o = {}\r\n    setmetatable(o, self)\r\n    o.List = list\r\n    o.Next = nil\r\n    o.Prev = nil\r\n    o.Value = value\r\n    return o\r\nend\r\n--克隆这个节点\r\nfunction LinkedNode:Clone()\r\n    return LinkedNode:new(self.Value, nil)\r\nend\r\n--节点失效\r\nfunction LinkedNode:Invalidate()\r\n    self.Next = nil\r\n    self.Prev = nil\r\n    self.List = nil\r\nend\r\n--打印\r\nfunction LinkedNode:tostring()\r\n    return tostring(self.Value)\r\nend\r\nLinkedNode.__tostring = LinkedNode.tostring\r\n\r\n--验证新节点是否是自由节点\r\nfunction LinkedList:ValidateNewNode(node)\r\n    if not node then\r\n        return false\r\n    end\r\n    --assert(LinkedNode:include(node),\"instance of LinkedNode needed.\")\r\n    if node.List ~= nil then\r\n        return false\r\n    end\r\n    return true\r\nend\r\n--验证该节点是否是属于该表\r\nfunction LinkedList:ValidateNode(node)\r\n    if not node then\r\n        return false\r\n    end\r\n    --assert(LinkedNode:include(node),\"instance of LinkedNode needed.\")\r\n    if node.List ~= self then\r\n        return false\r\n    end\r\n    return true\r\nend\r\n--将节点插入到node节点之前(list:链表,node:插在这个节点前面,newnode:被插入的节点)\r\nlocal function InternalInsertNodeBefore(list, node, newnode)\r\n    newnode.Next = node\r\n    newnode.Prev = node.Prev\r\n    node.Prev.Next = newnode\r\n    node.Prev = newnode\r\n    list.Count = list.Count + 1\r\nend\r\n--将节点插入到一个空链表之前(list:链表,newnode:被插入的节点)\r\nlocal function InternalInsertNodeToEmptyList(list, newnode)\r\n    newnode.Next = newnode\r\n    newnode.Prev = newnode\r\n    list.First = newnode\r\n    list.Count = list.Count + 1\r\nend\r\n--移除链表中的节点(list:链表,node:被删除的节点)\r\nlocal function InternalRemoveNode(list, node)\r\n    if node.Next == node then\r\n        list.First = nil\r\n    else\r\n        node.Next.Prev = node.Prev\r\n        node.Prev.Next = node.Next\r\n        if list.First == node then\r\n            list.First = node.Next\r\n        end\r\n    end\r\n    node:Invalidate()\r\n    list.Count = list.Count - 1\r\nend\r\n\r\n--新建双向链表\r\nfunction LinkedList:new(tab)\r\n    local o = {}\r\n    setmetatable(o, self)\r\n    o.Count = 0\r\n    o.First = nil\r\n    if type(tab) == 'table' then\r\n        for _, v in pairs(tab) do\r\n            o:AddLast(v)\r\n        end\r\n    end\r\n    return o\r\nend\r\n--Add Value\r\n--在尾部添加值(若传入值是表，则遍历表，并将所有值添加到尾部)\r\nfunction LinkedList:Add(value)\r\n    if type(value) == 'table' then\r\n        for _, v in pairs(value) do\r\n            self:AddLast(v)\r\n        end\r\n    else\r\n        self:AddLast(value)\r\n    end\r\nend\r\n--在尾部添加值\r\nfunction LinkedList:AddLast(value)\r\n    local newnode = LinkedNode:new(value, self)\r\n    if not self.First then\r\n        InternalInsertNodeToEmptyList(self, newnode)\r\n    else\r\n        InternalInsertNodeBefore(self, self.First, newnode)\r\n    end\r\n    return newnode\r\nend\r\n--在头部添加值\r\nfunction LinkedList:AddFirst(value)\r\n    local newnode = LinkedNode:new(value, self)\r\n    if not self.First then\r\n        InternalInsertNodeToEmptyList(self, newnode)\r\n    else\r\n        InternalInsertNodeBefore(self, self.First, newnode)\r\n        self.First = newnode\r\n    end\r\n    return newnode\r\nend\r\n--在指定节点后面添加值(node:插入在这个节点后,value:被插入的值)\r\nfunction LinkedList:AddAfter(node, value)\r\n    if not self:ValidateNewNode(node) then\r\n        return\r\n    end\r\n    local newnode = LinkedNode:new(value, self)\r\n    InternalInsertNodeBefore(self, node.Next, newnode)\r\n    return newnode\r\nend\r\n--在指定节点前面添加值(node:插入在这个节点前,value:被插入的值)\r\nfunction LinkedList:AddBefore(node, value)\r\n    if not self:ValidateNode(node) then\r\n        return\r\n    end\r\n    local newnode = LinkedNode:new(value, self)\r\n    InternalInsertNodeBefore(self, node, newnode)\r\n    if node == self.First then\r\n        self.First = newnode\r\n    end\r\n    return newnode\r\nend\r\n--Add Node\r\n--在头部添加节点\r\nfunction LinkedList:AddNodeFirst(node)\r\n    if not self:ValidateNewNode(node) then\r\n        return\r\n    end\r\n    if not self.First then\r\n        InternalInsertNodeToEmptyList(self, node)\r\n    else\r\n        InternalInsertNodeBefore(self, self.First, node)\r\n        self.First = node\r\n    end\r\n    node.List = self\r\nend\r\n--在尾部添加节点\r\nfunction LinkedList:AddNodeLast(node)\r\n    if not self:ValidateNewNode(node) then\r\n        return\r\n    end\r\n    if not self.First then\r\n        InternalInsertNodeToEmptyList(self, node)\r\n    else\r\n        InternalInsertNodeBefore(self, self.First, node)\r\n    end\r\n    node.List = self\r\nend\r\n--在指定节点后面添加值(node:插入在这个节点后,newnode:被插入的节点)\r\nfunction LinkedList:AddNodeAfter(node, newnode)\r\n    if not self:ValidateNode(node) and not self:ValidateNewNode(newnode) then\r\n        return\r\n    end\r\n    InternalInsertNodeBefore(self, node.Next, newnode)\r\n    newnode.List = self\r\nend\r\n--在指定节点后面添加值(node:插入在这个节点前,newnode:被插入的节点)\r\nfunction LinkedList:AddNodeBefore(node, newnode)\r\n    if not self:ValidateNode(node) and not self:ValidateNewNode(newnode) then\r\n        return\r\n    end\r\n    InternalInsertNodeBefore(self, node, newnode)\r\n    newnode.List = self\r\n    if node ~= self.First then\r\n        return\r\n    end\r\n    self.First = newnode\r\nend\r\n--Remove\r\n--找到表中的第一个指定值，并删除，返回是否命中\r\nfunction LinkedList:Remove(value)\r\n    local node = self:Find(value)\r\n    if not node then\r\n        return false\r\n    end\r\n    InternalRemoveNode(self, node)\r\n    return true\r\nend\r\n--找到表中的第一个指定节点，并删除，返回是否命中\r\nfunction LinkedList:RemoveNode(node)\r\n    if not self:ValidateNode(node) then\r\n        return\r\n    end\r\n    InternalRemoveNode(self, node)\r\nend\r\n--移除头部节点\r\nfunction LinkedList:RemoveFirst()\r\n    if self.First == nil then\r\n        print('list is empty.')\r\n    else\r\n        InternalRemoveNode(self, self.First)\r\n    end\r\nend\r\n--移除尾部节点\r\nfunction LinkedList:RemoveLast()\r\n    if self.First == nil then\r\n        print('list is empty.')\r\n    else\r\n        InternalRemoveNode(self, self.First.Prev)\r\n    end\r\nend\r\n--Find\r\n--尝试找到表中的第一个指定值，若有则返回这个节点\r\nfunction LinkedList:Find(value)\r\n    local ptrnode = self.First\r\n    if value ~= nil then\r\n        while ptrnode.Value ~= value do\r\n            ptrnode = ptrnode.Next\r\n            if ptrnode == self.First then\r\n                goto close1\r\n            end\r\n        end\r\n        return ptrnode\r\n    else\r\n        while ptrnode.Value ~= nil do\r\n            ptrnode = ptrnode.Next\r\n            if ptrnode == self.First then\r\n                goto close1\r\n            end\r\n        end\r\n        return ptrnode\r\n    end\r\n    ::close1::\r\n    return\r\nend\r\n--尝试反向找到表中第一个指定值，若有则返回这个节点\r\nfunction LinkedList:FindLast(value)\r\n    if self.First == nil then\r\n        return\r\n    end\r\n    local prev = self.First.Prev\r\n    local ptrnode = prev\r\n    if value ~= nil then\r\n        while ptrnode.Value ~= value do\r\n            ptrnode = ptrnode.Prev\r\n            if ptrnode == Prev then\r\n                goto close2\r\n            end\r\n        end\r\n        return ptrnode\r\n    else\r\n        while ptrnode.Value ~= nil do\r\n            ptrnode = ptrnode.Prev\r\n            if ptrnode == prev then\r\n                goto close2\r\n            end\r\n        end\r\n        return ptrnode\r\n    end\r\n    ::close2::\r\n    return\r\nend\r\n--Other\r\n--清空链表\r\nfunction LinkedList:Clear()\r\n    local ptrnode = self.First\r\n    while ptrnode ~= nil do\r\n        local lastnode = ptrnode\r\n        ptrnode = ptrnode.Next\r\n        lastnode:Invalidate()\r\n    end\r\n    self.First = nil\r\n    self.Count = 0\r\nend\r\n--向给定table的指定位置插入数值(tab:被插入表,index:序号)\r\nfunction LinkedList:CopyTo(tab, index)\r\n    if type(tab) ~= 'table' then\r\n        error('bad argument \"table\"')\r\n        return\r\n    end\r\n    if index < 1 then\r\n        error('Index out of range')\r\n        return\r\n    end\r\n    local ptrnode = self.First\r\n    if ptrnode == nil then\r\n        return\r\n    end\r\n    repeat\r\n        table.insert(tab, index, ptrnode.Value)\r\n        ptrnode = ptrnode.Next\r\n        index = index + 1\r\n    until (ptrnode == self.First)\r\nend\r\n--将链表中的数据拷贝到新表中，并将这个表输出\r\nfunction LinkedList:ToTable()\r\n    local tab = {}\r\n    self:CopyTo(tab, 1)\r\n    return tab\r\nend\r\n--克隆当前链表，并返回\r\nfunction LinkedList:Clone()\r\n    local newlist = LinkedList:new()\r\n    local ptrnode = self.First\r\n    repeat\r\n        local clnode = ptrnode:Clone()\r\n        newlist:AddNodeLast(clnode)\r\n        ptrnode = ptrnode.Next\r\n    until (ptrnode == self.First)\r\n    return newlist\r\nend\r\n--检查链表中是否包含指定值\r\nfunction LinkedList:Contains(value)\r\n    return self:Find(value) and true or false\r\nend\r\n--将链表反向\r\nfunction LinkedList:Reverse()\r\n    local tmp\r\n    if not self.First then\r\n        print('list is empty')\r\n        return\r\n    end\r\n    self.First = self.First.Prev\r\n    for item in self:ipairer() do\r\n        tmp = item.Next\r\n        item.Next = item.Prev\r\n        item.Prev = tmp\r\n    end\r\nend\r\n--返回头部节点\r\nfunction LinkedList:GetFirst()\r\n    return self.First\r\nend\r\n--返回尾部节点\r\nfunction LinkedList:GetLast()\r\n    return self.First ~= nil and self.First.Prev or nil\r\nend\r\n--返回第index个节点\r\nfunction LinkedList:GetNode(index)\r\n    if index < 1 or index > self.Count then\r\n        print('Index out of range')\r\n        return\r\n    end\r\n    local ptrnode = self.First.Prev\r\n    while index > 0 do\r\n        ptrnode = ptrnode.Next\r\n        index = index - 1\r\n    end\r\n    return ptrnode\r\nend\r\n--返回链表长度\r\nfunction LinkedList:Len()\r\n    return self.Count\r\nend\r\n--返回迭代器\r\nfunction LinkedList:ipairer()\r\n    local ptrnode = self:GetLast()\r\n    local passFirst = false\r\n    return function()\r\n        if ptrnode then\r\n            if ptrnode ~= self:GetLast() or not passFirst then\r\n                passFirst = true\r\n                ptrnode = ptrnode.Next\r\n                return ptrnode\r\n            end\r\n        end\r\n    end\r\nend\r\n--以文本方式表示此表\r\nfunction LinkedList:tostring()\r\n    local t = {}\r\n    for item in self:ipairer() do\r\n        table.insert(t, tostring(item))\r\n    end\r\n    return 'LinkedList:{' .. table.concat(t, ',') .. '}'\r\nend\r\n\r\nLinkedList.__index = LinkedList\r\nLinkedList.__tostring = LinkedList.tostring\r\n\r\nreturn {\r\n    list = setmetatable(LinkedList, {__call = LinkedList.new}),\r\n    node = setmetatable(LinkedNode, {__call = LinkedNode.new})\r\n}\r\n","m_scriptType":"kModuleScript"}}]},{"class":"cFolderObject","name":"Plugin","guid":[3421449223,220021494,2714239174,1946870819],"parentGuid":[344576033,1668630255,2683907297,2226597768],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"Plugin"}},{"id":40000,"class":"sScriptHelperComponent","data":{}}]},{"class":"cFolderObject","name":"FUNC_UIAnimation","guid":[1331349991,2616282402,2630754420,1905460436],"parentGuid":[3421449223,220021494,2714239174,1946870819],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"FUNC_UIAnimation"}},{"id":40000,"class":"sScriptHelperComponent","data":{}}]},{"class":"cFolderObject","name":"Code","guid":[2747130650,1726107529,2983478535,4170811724],"parentGuid":[1331349991,2616282402,2630754420,1905460436],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"Code"}},{"id":40000,"class":"sScriptHelperComponent","data":{}}]},{"class":"cModuleScriptObject","name":"DataModule","guid":[2329789835,1245463234,2338128988,1464284537],"parentGuid":[2747130650,1726107529,2983478535,4170811724],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"DataModule"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":10,"class":"sLuaComponent","data":{"m_luaContent":"--- UI动画插件-数据相关\r\n-- @module UI Animation Plugin - DataModule\r\n-- @copyright Lilith Games, Avatar Team\r\n-- @author Xinwu Zhang\r\n-- @see https://github.com/lilith-avatar/avatar-ava/wiki/Plugins#func_uianimation\r\nlocal DataModule = {Data = {}}\r\n\r\n--初始化函数,读取动画表\r\nfunction DataModule:Init()\r\n    if localPlayer == nil then\r\n        return\r\n    end\r\n    local InfoTable = world.Global.Csv.UIAnimation\r\n    local RowNum = InfoTable:GetRowNum()\r\n    for i = 1, RowNum do\r\n        local AnimationName = InfoTable:GetCell('AnimationName', i)\r\n        --如果该数据的动画名为新增,则在数据表中新插入一段空的动画数据\r\n        if self.Data[AnimationName] == nil then\r\n            self.Data[AnimationName] = {}\r\n            self.Data[AnimationName].count = InfoTable:GetCell('Count', i)\r\n        end\r\n\r\n        --解析UI节点路径,获取UI节点\r\n        local PathStr = InfoTable:GetCell('UINode', i)\r\n        local UiPath = string.split(InfoTable:GetCell('UINode', i), '.')\r\n        local UiNode\r\n        if UiPath[1] == 'Local' then\r\n            UiNode = localPlayer\r\n            for k, v in pairs(UiPath) do\r\n                if UiNode[v] then\r\n                    UiNode = UiNode[v]\r\n                else\r\n                    print('AnimationName = ', AnimationName, 'The Path NotFind:', v, 'in', UiPath)\r\n                    return\r\n                end\r\n            end\r\n        else\r\n            print('暂时不支持Local以外的UI节点动画')\r\n            return\r\n        end\r\n\r\n        --判断初始帧,并执行初始帧逻辑\r\n        if InfoTable:GetCell('IsInit', i) == true then\r\n            --记录初始帧\r\n            self.Data[AnimationName][PathStr] = {}\r\n            local NowData = self.Data[AnimationName][PathStr]\r\n            NowData.Obj = UiNode\r\n            NowData.KeyFrame = {}\r\n            NowData.Init = {}\r\n            NowData.PerFrame = {}\r\n            if InfoTable:GetCell('Size', i) ~= Vector2(0, 0) then\r\n                NowData.Init.Size = InfoTable:GetCell('Size', i)\r\n            end\r\n            if InfoTable:GetCell('AnchorsX', i) ~= Vector2(0, 0) then\r\n                NowData.Init.AnchorsX = InfoTable:GetCell('AnchorsX', i)\r\n            end\r\n            if InfoTable:GetCell('AnchorsY', i) ~= Vector2(0, 0) then\r\n                NowData.Init.AnchorsY = InfoTable:GetCell('AnchorsY', i)\r\n            end\r\n            if InfoTable:GetCell('Angle', i) ~= 0 then\r\n                NowData.Init.Angle = InfoTable:GetCell('Angle', i)\r\n            end\r\n            if InfoTable:GetCell('Offset', i) ~= Vector2(0, 0) then\r\n                NowData.Init.Offset = InfoTable:GetCell('Offset', i)\r\n            end\r\n            if InfoTable:GetCell('Alpha', i) ~= 0 then\r\n                NowData.Init.Alpha = InfoTable:GetCell('Alpha', i)\r\n            end\r\n        else\r\n            --配置表初始帧配置校验\r\n            if self.Data[AnimationName][PathStr] == nil then\r\n                print(AnimationName, '未配置初始帧,配表错误')\r\n                return\r\n            end\r\n            local tFrame, tSize, tAnchorsX, tAnchorsY, tAngle, tOffset, tAlpha, tTag\r\n            --记录关键帧数据\r\n            tType = InfoTable:GetCell('Type', i)\r\n            if tType == '' then\r\n                tType = 'Linear'\r\n            end\r\n            if InfoTable:GetCell('KeyFrame', i) ~= Vector2(0, 0) then\r\n                tFrame = InfoTable:GetCell('KeyFrame', i)\r\n            end\r\n            if InfoTable:GetCell('Size', i) ~= Vector2(0, 0) then\r\n                tSize = InfoTable:GetCell('Size', i)\r\n            end\r\n            if InfoTable:GetCell('AnchorsX', i) ~= Vector2(0, 0) then\r\n                tAnchorsX = InfoTable:GetCell('AnchorsX', i)\r\n            end\r\n            if InfoTable:GetCell('AnchorsY', i) ~= Vector2(0, 0) then\r\n                tAnchorsY = InfoTable:GetCell('AnchorsY', i)\r\n            end\r\n            if InfoTable:GetCell('Angle', i) ~= 0 then\r\n                tAngle = InfoTable:GetCell('Angle', i)\r\n            end\r\n            if InfoTable:GetCell('Offset', i) ~= Vector2(0, 0) then\r\n                tOffset = InfoTable:GetCell('Offset', i)\r\n            end\r\n            if InfoTable:GetCell('Alpha', i) ~= 0 then\r\n                tAlpha = InfoTable:GetCell('Alpha', i)\r\n            end\r\n            if InfoTable:GetCell('Tag', i) ~= '' then\r\n                tTag = InfoTable:GetCell('Tag', i)\r\n            end\r\n\r\n            OneFrame = {\r\n                Frame = tFrame,\r\n                Size = tSize,\r\n                AnchorsX = tAnchorsX,\r\n                AnchorsY = tAnchorsY,\r\n                Angle = tAngle,\r\n                Offset = tOffset,\r\n                Alpha = tAlpha,\r\n                Tag = tTag,\r\n                Type = tType\r\n            }\r\n            table.insert(self.Data[AnimationName][PathStr].KeyFrame, OneFrame)\r\n        end\r\n    end\r\nend\r\n\r\nfunction DataModule:Calculate(DataName)\r\n    for k, v in pairs(self.Data[DataName]) do\r\n        local NowKeyFrame = 0\r\n        local NextKeyFrame = 0\r\n        if k ~= 'count' then\r\n            --Tag\r\n            for i = 1, #v.KeyFrame do\r\n                if v.KeyFrame[i].Tag then\r\n                    if v.PerFrame[v.KeyFrame[i].Frame] == nil then\r\n                        v.PerFrame[v.KeyFrame[i].Frame] = {}\r\n                    end\r\n                    v.PerFrame[v.KeyFrame[i].Frame].Tag = v.KeyFrame[i].Tag\r\n                end\r\n            end\r\n\r\n            --Alpha\r\n            for i = 1, #v.KeyFrame do\r\n                if v.KeyFrame[i].Alpha then\r\n                    NowKeyFrame = i\r\n                    NextKeyFrame = i\r\n                    break\r\n                end\r\n            end\r\n            if NowKeyFrame ~= 0 then\r\n                while next(v.KeyFrame, NextKeyFrame) do\r\n                    local _, temp = next(v.KeyFrame, NextKeyFrame)\r\n                    NextKeyFrame = next(v.KeyFrame, NextKeyFrame)\r\n                    if temp.Alpha then\r\n                        local n = v.KeyFrame[NowKeyFrame].Frame\r\n                        local Count = v.KeyFrame[NextKeyFrame].Frame - v.KeyFrame[NowKeyFrame].Frame\r\n                        local PerFrame =\r\n                            DataModule:Interpolation(\r\n                            v.KeyFrame[NowKeyFrame].Alpha,\r\n                            v.KeyFrame[NowKeyFrame].Type,\r\n                            v.KeyFrame[NextKeyFrame].Alpha,\r\n                            v.KeyFrame[NextKeyFrame].Type,\r\n                            Count\r\n                        )\r\n                        for i = n + 1, n + Count do\r\n                            if v.PerFrame[i] == nil then\r\n                                v.PerFrame[i] = {}\r\n                            end\r\n                            v.PerFrame[i].Alpha = PerFrame[i - n]\r\n                        end\r\n                        NowKeyFrame = NextKeyFrame\r\n                    end\r\n                end\r\n            end\r\n\r\n            --Offset\r\n            NowKeyFrame = 0\r\n            for i = 1, #v.KeyFrame do\r\n                if v.KeyFrame[i].Offset then\r\n                    NowKeyFrame = i\r\n                    NextKeyFrame = i\r\n                    break\r\n                end\r\n            end\r\n            if NowKeyFrame ~= 0 then\r\n                while next(v.KeyFrame, NextKeyFrame) do\r\n                    local _, temp = next(v.KeyFrame, NextKeyFrame)\r\n                    NextKeyFrame = next(v.KeyFrame, NextKeyFrame)\r\n                    if temp.Offset then\r\n                        local n = v.KeyFrame[NowKeyFrame].Frame\r\n                        local Count = v.KeyFrame[NextKeyFrame].Frame - v.KeyFrame[NowKeyFrame].Frame\r\n                        local PerFrame =\r\n                            DataModule:Interpolation(\r\n                            v.KeyFrame[NowKeyFrame].Offset,\r\n                            v.KeyFrame[NowKeyFrame].Type,\r\n                            v.KeyFrame[NextKeyFrame].Offset,\r\n                            v.KeyFrame[NextKeyFrame].Type,\r\n                            Count\r\n                        )\r\n                        for i = n + 1, n + Count do\r\n                            if v.PerFrame[i] == nil then\r\n                                v.PerFrame[i] = {}\r\n                            end\r\n                            v.PerFrame[i].Offset = PerFrame[i - n]\r\n                        end\r\n                        NowKeyFrame = NextKeyFrame\r\n                    end\r\n                end\r\n            end\r\n\r\n            --Size\r\n            NowKeyFrame = 0\r\n            for i = 1, #v.KeyFrame do\r\n                if v.KeyFrame[i].Size then\r\n                    NowKeyFrame = i\r\n                    NextKeyFrame = i\r\n                    break\r\n                end\r\n            end\r\n            if NowKeyFrame ~= 0 then\r\n                while next(v.KeyFrame, NextKeyFrame) do\r\n                    local _, temp = next(v.KeyFrame, NextKeyFrame)\r\n                    NextKeyFrame = next(v.KeyFrame, NextKeyFrame)\r\n                    if temp.Size then\r\n                        local n = v.KeyFrame[NowKeyFrame].Frame\r\n                        local Count = v.KeyFrame[NextKeyFrame].Frame - v.KeyFrame[NowKeyFrame].Frame\r\n                        local PerFrame =\r\n                            DataModule:Interpolation(\r\n                            v.KeyFrame[NowKeyFrame].Size,\r\n                            v.KeyFrame[NowKeyFrame].Type,\r\n                            v.KeyFrame[NextKeyFrame].Size,\r\n                            v.KeyFrame[NextKeyFrame].Type,\r\n                            Count\r\n                        )\r\n                        for i = n + 1, n + Count do\r\n                            if v.PerFrame[i] == nil then\r\n                                v.PerFrame[i] = {}\r\n                            end\r\n                            v.PerFrame[i].Size = PerFrame[i - n]\r\n                        end\r\n                        NowKeyFrame = NextKeyFrame\r\n                    end\r\n                end\r\n            end\r\n\r\n            --AnchorsX\r\n            NowKeyFrame = 0\r\n            for i = 1, #v.KeyFrame do\r\n                if v.KeyFrame[i].AnchorsX then\r\n                    NowKeyFrame = i\r\n                    NextKeyFrame = i\r\n                    break\r\n                end\r\n            end\r\n            if NowKeyFrame ~= 0 then\r\n                while next(v.KeyFrame, NextKeyFrame) do\r\n                    local _, temp = next(v.KeyFrame, NextKeyFrame)\r\n                    NextKeyFrame = next(v.KeyFrame, NextKeyFrame)\r\n                    if temp.AnchorsX then\r\n                        local n = v.KeyFrame[NowKeyFrame].Frame\r\n                        local Count = v.KeyFrame[NextKeyFrame].Frame - v.KeyFrame[NowKeyFrame].Frame\r\n                        local PerFrame =\r\n                            DataModule:Interpolation(\r\n                            v.KeyFrame[NowKeyFrame].AnchorsX,\r\n                            v.KeyFrame[NowKeyFrame].Type,\r\n                            v.KeyFrame[NextKeyFrame].AnchorsX,\r\n                            v.KeyFrame[NextKeyFrame].Type,\r\n                            Count\r\n                        )\r\n                        for i = n + 1, n + Count do\r\n                            if v.PerFrame[i] == nil then\r\n                                v.PerFrame[i] = {}\r\n                            end\r\n                            v.PerFrame[i].AnchorsX = PerFrame[i - n]\r\n                        end\r\n                        NowKeyFrame = NextKeyFrame\r\n                    end\r\n                end\r\n            end\r\n\r\n            --AnchorsY\r\n            NowKeyFrame = 0\r\n            for i = 1, #v.KeyFrame do\r\n                if v.KeyFrame[i].AnchorsY then\r\n                    NowKeyFrame = i\r\n                    NextKeyFrame = i\r\n                    break\r\n                end\r\n            end\r\n            if NowKeyFrame ~= 0 then\r\n                while next(v.KeyFrame, NextKeyFrame) do\r\n                    local _, temp = next(v.KeyFrame, NextKeyFrame)\r\n                    NextKeyFrame = next(v.KeyFrame, NextKeyFrame)\r\n                    if temp.AnchorsY then\r\n                        local n = v.KeyFrame[NowKeyFrame].Frame\r\n                        local Count = v.KeyFrame[NextKeyFrame].Frame - v.KeyFrame[NowKeyFrame].Frame\r\n                        local PerFrame =\r\n                            DataModule:Interpolation(\r\n                            v.KeyFrame[NowKeyFrame].AnchorsY,\r\n                            v.KeyFrame[NowKeyFrame].Type,\r\n                            v.KeyFrame[NextKeyFrame].AnchorsY,\r\n                            v.KeyFrame[NextKeyFrame].Type,\r\n                            Count\r\n                        )\r\n                        for i = n + 1, n + Count do\r\n                            if v.PerFrame[i] == nil then\r\n                                v.PerFrame[i] = {}\r\n                            end\r\n                            v.PerFrame[i].AnchorsY = PerFrame[i - n]\r\n                        end\r\n                        NowKeyFrame = NextKeyFrame\r\n                    end\r\n                end\r\n            end\r\n\r\n            --Angle\r\n            NowKeyFrame = 0\r\n            for i = 1, #v.KeyFrame do\r\n                if v.KeyFrame[i].Angle then\r\n                    NowKeyFrame = i\r\n                    NextKeyFrame = i\r\n                    break\r\n                end\r\n            end\r\n            if NowKeyFrame ~= 0 then\r\n                while next(v.KeyFrame, NextKeyFrame) do\r\n                    local _, temp = next(v.KeyFrame, NextKeyFrame)\r\n                    NextKeyFrame = next(v.KeyFrame, NextKeyFrame)\r\n                    if temp.Angle then\r\n                        local n = v.KeyFrame[NowKeyFrame].Frame\r\n                        local Count = v.KeyFrame[NextKeyFrame].Frame - v.KeyFrame[NowKeyFrame].Frame\r\n                        local PerFrame =\r\n                            DataModule:Interpolation(\r\n                            v.KeyFrame[NowKeyFrame].Angle,\r\n                            v.KeyFrame[NowKeyFrame].Type,\r\n                            v.KeyFrame[NextKeyFrame].Angle,\r\n                            v.KeyFrame[NextKeyFrame].Type,\r\n                            Count\r\n                        )\r\n                        for i = n + 1, n + Count do\r\n                            if v.PerFrame[i] == nil then\r\n                                v.PerFrame[i] = {}\r\n                            end\r\n                            v.PerFrame[i].Angle = PerFrame[i - n]\r\n                        end\r\n                        NowKeyFrame = NextKeyFrame\r\n                    end\r\n                end\r\n            end\r\n        end\r\n    end\r\nend\r\n\r\nfunction DataModule:Interpolation(_ParaOne, _TypeOne, _ParaTwo, _TypeTwo, _Count)\r\n    local Result = {}\r\n    if _TypeOne == 'Linear' and _TypeTwo == 'Linear' then\r\n        for i = 1, _Count do\r\n            local Frame = _ParaOne * (_Count - i) / _Count + _ParaTwo * i / _Count\r\n            table.insert(Result, Frame)\r\n        end\r\n    end\r\n    return Result\r\nend\r\n\r\nreturn DataModule\r\n","m_scriptType":"kModuleScript"}}]},{"class":"cModuleScriptObject","name":"AnimationMainModule","guid":[2680157156,1245725629,2963263301,1750898223],"parentGuid":[2747130650,1726107529,2983478535,4170811724],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"AnimationMainModule"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":10,"class":"sLuaComponent","data":{"m_luaContent":"--- UI动画插件-表现相关\r\n-- @module UI Animation Plugin - Animation Main\r\n-- @copyright Lilith Games, Avatar Team\r\n-- @author Xinwu Zhang, Yuancheng Zhang\r\n-- @see https://github.com/lilith-avatar/avatar-ava/wiki/Plugins#func_uianimation\r\nlocal AnimationMain = {}\r\n\r\nfunction AnimationMain:Init()\r\n    info('AnimationMain:Init')\r\n    self.onPlay = false\r\n    self:InitListeners()\r\n    self.DataModule = require(world.Global.Plugin.FUNC_UIAnimation.Code.DataModule)\r\n    self.DataModule:Init()\r\nend\r\n\r\nfunction AnimationMain:InitListeners()\r\n    EventUtil.LinkConnects(localPlayer.C_Event, AnimationMain, 'AnimationMain', self)\r\nend\r\n\r\nfunction AnimationMain:StartAnimationEventHandler(_dataName, _isBackRun)\r\n    --判断是否已经有动画正在播放中\r\n    if self.onPlay then\r\n        warn('不允许同时播放两段动画')\r\n        return\r\n    end\r\n\r\n    self.onPlay = true\r\n\r\n    self.DataModule:Calculate(_dataName)\r\n    local Data = self.DataModule.Data[_dataName]\r\n    if Data.count == nil or Data.count == 0 then\r\n        error('配表错误,请填写动画数据的帧数')\r\n        return\r\n    end\r\n    if _isBackRun == nil or _isBackRun == false then\r\n        for k, v in pairs(Data) do\r\n            if k ~= 'count' then\r\n                self:InsertParameter(v.Obj, v.Init)\r\n            end\r\n        end\r\n        localPlayer.C_Event.AnimationStateEvent:Fire(_dataName, 'Start')\r\n        for i = 1, Data.count do\r\n            wait(0.016)\r\n            for k, v in pairs(Data) do\r\n                if k ~= 'count' and v.PerFrame[i] then\r\n                    self:InsertParameter(v.Obj, v.PerFrame[i], _dataName)\r\n                end\r\n            end\r\n        end\r\n    elseif _isBackRun == true then\r\n        for k, v in pairs(Data) do\r\n            if k ~= 'count' then\r\n                self:InsertParameter(v.Obj, v.PerFrame[#v.PerFrame])\r\n            end\r\n        end\r\n        localPlayer.C_Event.AnimationStateEvent:Fire(_dataName, 'Start')\r\n        for i = 1, Data.count do\r\n            wait(0.016)\r\n            for k, v in pairs(Data) do\r\n                if k ~= 'count' and v.PerFrame[Data.count - i + 1] then\r\n                    self:InsertParameter(v.Obj, v.PerFrame[Data.count - i + 1], _dataName)\r\n                end\r\n            end\r\n        end\r\n    end\r\n    localPlayer.C_Event.AnimationStateEvent:Fire(_dataName, 'Complete')\r\n    self.onPlay = false\r\nend\r\n\r\nfunction AnimationMain:InsertParameter(UIObj, ParaTable, DataName)\r\n    if ParaTable.Size then\r\n        UIObj.Size = ParaTable.Size\r\n    end\r\n    if ParaTable.AnchorsX then\r\n        UIObj.AnchorsX = ParaTable.AnchorsX\r\n    end\r\n    if ParaTable.AnchorsY then\r\n        UIObj.AnchorsY = ParaTable.AnchorsY\r\n    end\r\n    if ParaTable.Angle then\r\n        UIObj.Angle = ParaTable.Angle\r\n    end\r\n    if ParaTable.Offset then\r\n        UIObj.Offset = ParaTable.Offset\r\n    end\r\n    if ParaTable.Alpha then\r\n        UIObj.Alpha = ParaTable.Alpha\r\n        for k, v in pairs(UIObj:GetChildren()) do\r\n            if v.Alpha then\r\n                v.Alpha = ParaTable.Alpha\r\n            end\r\n            for k2, v2 in pairs(v:GetChildren()) do\r\n                if v2.Alpha then\r\n                    v2.Alpha = ParaTable.Alpha\r\n                end\r\n            end\r\n        end\r\n    end\r\n    if ParaTable.Tag then\r\n        localPlayer.C_Event.AnimationStateEvent:Fire(DataName, ParaTable.Tag)\r\n    end\r\nend\r\n\r\nreturn AnimationMain\r\n","m_scriptType":"kModuleScript"}}]},{"class":"cFolderObject","name":"FUNC_Guide","guid":[1446776724,3800580518,2279243129,2439855281],"parentGuid":[3421449223,220021494,2714239174,1946870819],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"FUNC_Guide"}},{"id":40000,"class":"sScriptHelperComponent","data":{}}]},{"class":"cModuleScriptObject","name":"GuideSystemModule","guid":[454206779,4231676146,2841482287,3968778047],"parentGuid":[1446776724,3800580518,2279243129,2439855281],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"GuideSystemModule"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":10,"class":"sLuaComponent","data":{"m_luaContent":"---引导系统\r\n---@module GuideSystem\r\n---@copyright Lilith Games, Avatar Team\r\n---@author Sid Zhang, Yuancheng Zhang\r\n\r\nlocal GuideSystem = {}\r\n\r\n--- 引导的枚举类型\r\nGuideSystem.Enum = {\r\n\tClickGuide = 'ClickGuide'\r\n}\r\n\r\n--- 显示强引导Ui\r\n---@param _type Int 1:点击\r\n---@param _position Vector2 生成引导UI在屏幕的位置,Anchors值\r\n---@param _area Vector2 响应范围,Size\r\n---@param _content String 文本介绍,nil则不显示文本\r\nfunction GuideSystem:ShowGuide(_type, _position, _area, _content, _callBack, ...)\r\n\tlocal args = {...}\r\n\tif _type == GuideSystem.Enum.ClickGuide then\r\n\t\tlocal GuideNode = world:CreateInstance('ClickGuide', 'ClickGuide', localPlayer.Local)\r\n\t\tif _position then\r\n\t\t\tGuideNode.ImgDot.AnchorsX = Vector2(_position.X, _position.X)\r\n\t\t\tGuideNode.ImgDot.AnchorsY = Vector2(_position.Y, _position.Y)\r\n\t\tend\r\n\t\tif _content then\r\n\t\t\tGuideNode.ImgDot.FigTextBox.TxtContent.Text = _content\r\n\t\telse\r\n\t\t\tGuideNode.ImgDot.FigTextBox.Visible = false\r\n\t\tend\r\n\t\tif _area then\r\n\t\t\tGuideNode.ImgDot.BtnClose.Size = _area\r\n\t\tend\r\n\t\tGuideNode.ImgDot.BtnClose.OnClick:Connect(\r\n\t\t\tfunction()\r\n\t\t\t\tif _callBack and type(_callBack) == 'function' then\r\n\t\t\t\t\t_callBack(table.unpack(args))\r\n\t\t\t\tend\r\n\t\t\t\tGuideNode:Destroy()\r\n\t\t\tend\r\n\t\t)\r\n\telse\r\n\t\twarn('param #1 :_type error')\r\n\tend\r\nend\r\n\r\nreturn GuideSystem\r\n","m_scriptType":"kModuleScript"}}]},{"class":"cFolderObject","name":"Define","guid":[3643209718,4192551772,2636302611,3473650035],"parentGuid":[344576033,1668630255,2683907297,2226597768],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"Define"}},{"id":40000,"class":"sScriptHelperComponent","data":{}}]},{"class":"cModuleScriptObject","name":"GlobalDefModule","guid":[3584163079,3374337710,2390188471,2399437392],"parentGuid":[3643209718,4192551772,2636302611,3473650035],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"GlobalDefModule"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":10,"class":"sLuaComponent","data":{"m_luaContent":"--- 全局变量的定义,全部定义在GlobalDef这张表下面,用于全局可修改的参数\r\n-- @module Global Defines\r\n-- @copyright Lilith Games, Avatar Team\r\nlocal GlobalDef = {}\r\n\r\n-- e.g. (need DELETE)\r\nGlobalDef.a = 123\r\n\r\nGlobalDef.b = {\r\n    tom = '1231',\r\n    bob = '23423'\r\n}\r\n\r\n-- TODO: other constant defines\r\n\r\nreturn GlobalDef\r\n","m_scriptType":"kModuleScript"}}]},{"class":"cModuleScriptObject","name":"ConstDefModule","guid":[1768866970,2821735027,2612949907,3460044805],"parentGuid":[3643209718,4192551772,2636302611,3473650035],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"ConstDefModule"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":10,"class":"sLuaComponent","data":{"m_luaContent":"--- 全局常量的定义,全部定义在ConstDef这张表下面,用于定义全局常量参数或者枚举类型\r\n-- @module Constant Defines\r\n-- @copyright Lilith Games, Avatar Team\r\nlocal ConstDef = {}\r\n\r\n-- e.g. (need DELETE)\r\nConstDef.MAX_PLAYERS = 4\r\n\r\nConstDef.MonsterTypeEnum = {\r\n    FOE = 0,\r\n    VILLAGER = 1,\r\n    BOSS = 2\r\n}\r\n\r\n-- TODO: other constant defines\r\n\r\nreturn ConstDef\r\n","m_scriptType":"kModuleScript"}}]},{"class":"cFolderObject","name":"Module","guid":[2883110320,3875490972,2778882821,1569891889],"parentGuid":[344576033,1668630255,2683907297,2226597768],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"Module"}},{"id":40000,"class":"sScriptHelperComponent","data":{}}]},{"class":"cFolderObject","name":"S_Module","guid":[2325219688,3448000480,2204321929,4246846969],"parentGuid":[2883110320,3875490972,2778882821,1569891889],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"S_Module"}},{"id":40000,"class":"sScriptHelperComponent","data":{}}]},{"class":"cModuleScriptObject","name":"GameMgrModule","guid":[112830824,171854255,2946136964,1894336579],"parentGuid":[2325219688,3448000480,2204321929,4246846969],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"GameMgrModule"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":10,"class":"sLuaComponent","data":{"m_luaContent":"--- 游戏服务器主逻辑\r\n-- @module Game Manager, Server-side\r\n-- @copyright Lilith Games, Avatar Team\r\n-- @author Yuancheng Zhang\r\nlocal GameMgr, this =\r\n    {\r\n        isRun = false,\r\n        baseTime = 0, -- 游戏开始的时间戳\r\n        dt = 0, -- delta time 每帧时间\r\n        tt = 0 -- total time 游戏总时间\r\n    },\r\n    nil\r\n\r\nlocal now = os.clock -- 用于lua优化\r\n\r\n--- 初始化\r\nfunction GameMgr:Init()\r\n    info('GameMgr:Init')\r\n    this = self\r\n    self.baseTime = now()\r\n    self:InitListeners()\r\n\r\n    TimeMgr:Init()\r\n    GameCsv:Init()\r\n\r\n    -- TODO: 其他服务器模块初始化\r\n    ExampleA:Init()\r\nend\r\n\r\n--- 初始化Game Manager自己的监听事件\r\nfunction GameMgr:InitListeners()\r\n    EventUtil.LinkConnects(world.S_Event, GameMgr, 'GameMgr', this)\r\nend\r\n\r\n--- Update函数\r\n-- @param dt delta time 每帧时间\r\nfunction GameMgr:Update(dt, tt)\r\n    -- TODO: 其他服务器模块Update\r\n    ExampleA:Update(dt, tt)\r\nend\r\n\r\n--- 开始Update\r\nfunction GameMgr:StartUpdate()\r\n    info('GameMgr:StartUpdate')\r\n    if self.isRun then\r\n        warn('GameMgr:StartUpdate 正在运行')\r\n        return\r\n    end\r\n\r\n    self.isRun = true\r\n\r\n    local prevTime, nowTime = now(), nil -- two timestamps\r\n    while (self.isRun and wait()) do\r\n        nowTime = now()\r\n        self.dt = nowTime - prevTime\r\n        self.tt = nowTime - self.baseTime\r\n        self:Update(self.dt, self.tt)\r\n        prevTime = nowTime\r\n    end\r\nend\r\n\r\n--- 停止Update\r\nfunction GameMgr:StopUpdate()\r\n    info('GameMgr:StopUpdate')\r\n    self.isRun = false\r\nend\r\n\r\n--- TEST ONLY 处理Example01CustomEvent事件\r\n-- 函数命名格式为 事件名 + 'Handler'\r\nfunction GameMgr:Example01CustomEventHandler()\r\n    test('收到Example01CustomEvent')\r\n    self:StartUpdate()\r\nend\r\n\r\n--- TEST ONLY 处理Example02CustomEvent事件\r\n-- 函数命名格式为 事件名 + 'Handler'\r\nfunction GameMgr:Example02CustomEventHandler()\r\n    test('收到Example02CustomEvent')\r\n    test('GameCsv打印预加载的表格Example01,单一主键')\r\n    table.dump(GameCsv.Test01)\r\n    test('GameCsv打印预加载的表格Example02,多主键')\r\n    table.dump(GameCsv.Test02)\r\n    test('GameCsv打印预加载的表格Example02,单一主键,主键为Type')\r\n    table.dump(GameCsv.Test03)\r\nend\r\n\r\n--- TEST ONLY 处理Example02CustomEvent事件\r\n-- 函数命名格式为 事件名 + 'Handler'\r\nfunction GameMgr:Example03CustomEventHandler()\r\n    test('[信息] 收到Example03CustomEvent')\r\n    self:StopUpdate()\r\nend\r\n\r\nreturn GameMgr\r\n","m_scriptType":"kModuleScript"}}]},{"class":"cModuleScriptObject","name":"GameCsvModule","guid":[112798298,387337249,2420484563,3059665706],"parentGuid":[2325219688,3448000480,2204321929,4246846969],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"GameCsvModule"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":10,"class":"sLuaComponent","data":{"m_luaContent":"--- 游戏表格预处理-服务器端\r\n-- @module Csv Config Load - Server Side\r\n-- @copyright Lilith Games, Avatar Team\r\n-- @author Yuancheng Zhang\r\nlocal GameCsv = {\r\n    -- TEST ONLY 需要预先加载为Lua Table的表格名称\r\n    preLoad = {\r\n        {\r\n            name = 'Sound', --SoundUtil模块调用\r\n            csv = 'Sound',\r\n            id = 'ID',\r\n            isPrimary = true\r\n        },\r\n        -- TEST:以下为测试内容，用后请删掉\r\n        {\r\n            name = 'Test01', -- Lua Table的名字，调用为GameCsv.Test01\r\n            csv = 'Example01', -- smap中CSV表格的名称(World/Global/Csv/)\r\n            id = 'level_id', -- 索引的id\r\n            isPrimary = true -- 索引id是否为主键\r\n        },\r\n        {\r\n            name = 'Test02',\r\n            csv = 'Example02',\r\n            id = 'enemy_id',\r\n            isPrimary = false\r\n        },\r\n        {\r\n            name = 'Test03',\r\n            csv = 'Example02',\r\n            id = 'Type',\r\n            isPrimary = true\r\n        }\r\n    }\r\n}\r\n\r\n--- 初始化:加载所有预加载表格\r\nfunction GameCsv:Init()\r\n    info('GameCsv:Init')\r\n    self:PreloadCsv()\r\nend\r\n\r\nfunction GameCsv:PreloadCsv()\r\n    info('GameCsv:PreloadCsv')\r\n    for _, pl in pairs(self.preLoad) do\r\n        if not string.isnilorempty(pl.csv) and not string.isnilorempty(pl.id) then\r\n            self[pl.name] = CsvUtil.GetCsvInfo(Csv[pl.csv], pl.id, pl.isPrimary)\r\n        end\r\n    end\r\nend\r\n\r\nreturn GameCsv\r\n","m_scriptType":"kModuleScript"}}]},{"class":"cModuleScriptObject","name":"TimeMgrModule","guid":[284737459,3705621769,2322183270,2078970709],"parentGuid":[2325219688,3448000480,2204321929,4246846969],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"TimeMgrModule"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":10,"class":"sLuaComponent","data":{"m_luaContent":"--- 时间管理器模块\r\n-- @module Module Time Manager\r\n-- @copyright Lilith Games, Avatar Team\r\n-- @author Bingyun Chen, Yuancheng Zhang\r\n-- @see the functions defined by JavaScript syntax\r\n\r\nlocal TimeMgr = {}\r\n\r\n-- All registered events\r\nlocal eventList = {}\r\n\r\n-- Current active event list\r\nlocal activeEvents = {}\r\n\r\nlocal running = false\r\n\r\n-- Set update delta time\r\nlocal DELTA_TIME = 1\r\n\r\n-- Temporary varables\r\nlocal now, event, i\r\n\r\n--- Find all registered events to trigger\r\nlocal function CheckEvents()\r\n    now = os.time()\r\n    i = 1\r\n    while i <= #eventList do\r\n        event = eventList[i]\r\n        if event.triggerTime <= now then\r\n            table.insert(activeEvents, event)\r\n            if event.loop then\r\n                event.triggerTime = event.triggerTime + event.delay\r\n                i = i + 1\r\n            else\r\n                table.remove(eventList, i)\r\n            end\r\n        else\r\n            i = i + 1\r\n        end\r\n    end\r\nend\r\n\r\n--- Trigger events\r\nlocal function TriggerEvents()\r\n    i = 1\r\n    while i <= #activeEvents do\r\n        event = activeEvents[i]\r\n        invoke(event.func)\r\n        table.remove(activeEvents, i)\r\n    end\r\nend\r\n\r\n--- Update\r\nlocal function Update()\r\n    while running do\r\n        -- print(os.time())\r\n        CheckEvents()\r\n        TriggerEvents()\r\n        wait(DELTA_TIME)\r\n    end\r\nend\r\n\r\n--- Initialization\r\nfunction TimeMgr.Init()\r\n    TimeMgr.Start()\r\nend\r\n\r\n--- Run Update()\r\nfunction TimeMgr.Start()\r\n    running = true\r\n    invoke(Update)\r\nend\r\n\r\n--- Stop Update()\r\nfunction TimeMgr.Stop()\r\n    running = false\r\nend\r\n\r\n--- Call a function after a specified number of milliseconds,\r\n-- use ClearTimeout() method to prevent the function from running\r\n-- @param _func execution function to call\r\n-- @param _delayTime\r\n-- @return timer id\r\n-- @see https://www.w3schools.com/jsref/met_win_settimeout.asp\r\nfunction TimeMgr.SetTimeout(_func, _seconds)\r\n    if _func == nil then\r\n        error('TimeMgr.SetTimeout() _func 不能为空')\r\n        return\r\n    elseif _seconds < 1 then\r\n        error('TimeMgr.SetTimeout() _seconds 最小时间单位是1s')\r\n        return\r\n    end\r\n    local id = #eventList + 1\r\n    local timestamp = _seconds + os.time()\r\n    table.insert(\r\n        eventList,\r\n        {\r\n            id = id,\r\n            func = _func,\r\n            delay = _seconds,\r\n            triggerTime = timestamp\r\n        }\r\n    )\r\n    return id\r\nend\r\n\r\n--- Call a function or evaluates an expression at specified intervals (in milliseconds),\r\n-- the method will continue calling the function until ClearInterval() is called, or the game is over.\r\n-- @param _func execution function to call\r\n-- @param _delayTime\r\n-- @return timer id\r\n-- @see https://www.w3schools.com/jsref/met_win_setinterval.asp\r\nfunction TimeMgr.SetInterval(_func, _seconds)\r\n    if _func == nil then\r\n        print('[错误] TimeMgr.SetInterval() _func 不能为空')\r\n        return\r\n    elseif _seconds < 1 then\r\n        print('[错误] TimeMgr.SetInterval() 最小时间单位是1s')\r\n        return\r\n    end\r\n    local id = #eventList + 1\r\n    local timestamp = _seconds + os.time()\r\n    table.insert(\r\n        eventList,\r\n        {\r\n            id = id,\r\n            func = _func,\r\n            delay = _seconds,\r\n            triggerTime = timestamp,\r\n            loop = true\r\n        }\r\n    )\r\n    return id\r\nend\r\n\r\n--- Clear a timer set with the SetTimeout() method\r\n-- @param _id timmer id\r\n-- @see https://www.w3schools.com/jsref/met_win_cleartimeout.asp\r\nfunction TimeMgr.ClearTimeout(_id)\r\n    for k, e in pairs(eventList) do\r\n        if e.id == _id then\r\n            table.remove(eventList, k)\r\n            break\r\n        end\r\n    end\r\nend\r\n\r\n--- Clear a timer set with the SetInterval() method, used as ClearTimeout()\r\n-- @see https://www.w3schools.com/jsref/met_win_clearinterval.asp\r\nTimeMgr.ClearInterval = TimeMgr.ClearTimeout\r\n\r\nreturn TimeMgr\r\n","m_scriptType":"kModuleScript"}}]},{"class":"cModuleScriptObject","name":"ExampleAModule","guid":[2387834855,1574587674,2670415526,3557140699],"parentGuid":[2325219688,3448000480,2204321929,4246846969],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"ExampleAModule"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":10,"class":"sLuaComponent","data":{"m_luaContent":"--- 样例模块(看后删掉)\r\n-- @module Module Example A\r\n-- @copyright Lilith Games, Avatar Team\r\n-- @author XXX, XXXX\r\nlocal ExampleA, this = {}, nil\r\n\r\n--- 初始化\r\nfunction ExampleA:Init()\r\n    info('ExampleA:Init')\r\n    this = self\r\n    self:InitListeners()\r\nend\r\n\r\n--- 初始化Game Manager自己的监听事件\r\nfunction ExampleA:InitListeners()\r\n    EventUtil.LinkConnects(world.S_Event, ExampleA, 'ExampleA', this)\r\nend\r\n\r\n--- Update函数\r\n-- @param dt delta time 每帧时间\r\nfunction ExampleA:Update(dt)\r\n    --debug(string.format('[测试] 模块:%s, deltaTime = %.4f', 'ExampleA', dt))\r\nend\r\n\r\nreturn ExampleA\r\n","m_scriptType":"kModuleScript"}}]},{"class":"cFolderObject","name":"C_Module","guid":[2085024476,779046503,2599607412,4053327341],"parentGuid":[2883110320,3875490972,2778882821,1569891889],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"C_Module"}},{"id":40000,"class":"sScriptHelperComponent","data":{}}]},{"class":"cModuleScriptObject","name":"PlayerMgrModule","guid":[1039137540,2610905714,3183561849,1647783672],"parentGuid":[2085024476,779046503,2599607412,4053327341],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"PlayerMgrModule"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":10,"class":"sLuaComponent","data":{"m_luaContent":"--- 游戏客户端主逻辑\r\n-- @module Game Manager, Client-side\r\n-- @copyright Lilith Games, Avatar Team\r\n-- @author XXX, XXXX\r\nlocal PlayerMgr, this =\r\n    {\r\n        dt = 0,\r\n        tt = 0,\r\n        isRun = false\r\n    },\r\n    nil\r\n\r\n--- 初始化\r\nfunction PlayerMgr:Init()\r\n    info('PlayerMgr:Init')\r\n    this = self\r\n    self:InitListeners()\r\n\r\n    AnimationMain:Init()\r\n    PlayerCsv:Init()\r\n\r\n    -- TODO: 其他客户端模块初始化\r\n    ExampleB:Init()\r\nend\r\n\r\n--- 初始化Game Manager自己的监听事件\r\nfunction PlayerMgr:InitListeners()\r\n    EventUtil.LinkConnects(localPlayer.C_Event, PlayerMgr, 'PlayerMgr', this)\r\nend\r\n\r\n--- Update函数\r\n-- @param dt delta time 每帧时间\r\nfunction PlayerMgr:Update(dt)\r\n    -- TODO: 其他客户端模块Update\r\n    ExampleB:Update(dt)\r\nend\r\n\r\nfunction PlayerMgr:StartUpdate()\r\n    info('PlayerMgr:StartUpdate')\r\n    if self.isRun then\r\n        warn('PlayerMgr:StartUpdate 正在运行')\r\n        return\r\n    end\r\n\r\n    self.isRun = true\r\n\r\n    while (self.isRun) do\r\n        self.dt = wait()\r\n        self.tt = self.tt + self.dt\r\n        self:Update(self.dt)\r\n    end\r\nend\r\n\r\nfunction PlayerMgr:StopUpdate()\r\n    info('PlayerMgr:StopUpdate')\r\n    self.isRun = false\r\nend\r\n\r\n--- TEST ONLY 处理ClientExample01Event事件\r\n-- 函数命名格式为 事件名 + 'Handler'\r\nfunction PlayerMgr:ClientExample01EventHandler(arg1)\r\n    test('收到ClientExample01Event, 参数:', arg1)\r\n    test('PlayerCsv打印预加载的表格Example01,单一主键,主键为Type')\r\n    table.dump(PlayerCsv.Test04)\r\n    self:StartUpdate()\r\nend\r\n\r\nreturn PlayerMgr\r\n","m_scriptType":"kModuleScript"}}]},{"class":"cModuleScriptObject","name":"PlayerCsvModule","guid":[2729918295,1728660374,3050895705,1791746946],"parentGuid":[2085024476,779046503,2599607412,4053327341],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"PlayerCsvModule"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":10,"class":"sLuaComponent","data":{"m_luaContent":"--- 游戏表格预处理-客户端端\r\n-- @module Csv Config Load - Client Side\r\n-- @copyright Lilith Games, Avatar Team\r\n-- @author Yuancheng Zhang\r\nlocal PlayerCsv = {\r\n    -- TEST ONLY 需要预先加载为Lua Table的表格名称\r\n    preLoad = {\r\n        {\r\n            name = 'Test04', -- Lua Table的名字，调用为PlayerCsv.Test04\r\n            csv = 'Example01', -- smap中CSV表格的名称(World/Global/Csv/)\r\n            id = 'Type', -- 索引的id\r\n            isPrimary = true -- 索引id是否为主键\r\n        }\r\n    }\r\n}\r\n\r\n--- 初始化:加载所有预加载表格\r\nfunction PlayerCsv:Init()\r\n    info('PlayerCsv:Init')\r\n    self:PreloadCsv()\r\nend\r\n\r\nfunction PlayerCsv:PreloadCsv()\r\n    info('PlayerCsv:PreloadCsv')\r\n    for _, pl in pairs(self.preLoad) do\r\n        if not string.isnilorempty(pl.csv) and not string.isnilorempty(pl.id) then\r\n            self[pl.name] = CsvUtil.GetCsvInfo(Csv[pl.csv], pl.id, pl.isPrimary)\r\n        end\r\n    end\r\nend\r\n\r\nreturn PlayerCsv\r\n","m_scriptType":"kModuleScript"}}]},{"class":"cModuleScriptObject","name":"ExampleBModule","guid":[646356249,1292323580,2768118403,2865367294],"parentGuid":[2085024476,779046503,2599607412,4053327341],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"ExampleBModule"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":10,"class":"sLuaComponent","data":{"m_luaContent":"--- 样例模块(看后删掉)\r\n-- @module Module Example B\r\n-- @copyright Lilith Games, Avatar Team\r\n-- @author XXX, XXXX\r\nlocal ExampleB, this = {}, nil\r\n\r\n--- 初始化\r\nfunction ExampleB:Init()\r\n    debug('ExampleB:Init')\r\n    this = self\r\n    self:InitListeners()\r\nend\r\n\r\n--- 初始化Game Manager自己的监听事件\r\nfunction ExampleB:InitListeners()\r\n    EventUtil.LinkConnects(localPlayer.C_Event, ExampleB, 'ExampleB', this)\r\nend\r\n\r\n--- Update函数\r\n-- @param dt delta time 每帧时间\r\nfunction ExampleB:Update(dt)\r\n    --debug(string.format('[测试] 模块:%s, deltaTime = %.4f', 'ExampleB', dt))\r\nend\r\n\r\n--- TEST ONLY 处理Example02CustomEvent事件\r\n-- 函数命名格式为 事件名 + 'Handler'\r\nfunction ExampleB:ClientExample02EventHandler(_animName)\r\n    debug('收到ClientExample02Event, 参数:', _animName)\r\n    if type(_animName) == 'string' then\r\n        localPlayer.C_Event.StartAnimationEvent:Fire(_animName)\r\n    end\r\nend\r\n\r\nreturn ExampleB\r\n","m_scriptType":"kModuleScript"}}]},{"class":"cFolderObject","name":"Csv","guid":[2272249561,3378007281,2688214392,3190071702],"parentGuid":[344576033,1668630255,2683907297,2226597768],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"Csv"}},{"id":40000,"class":"sScriptHelperComponent","data":{}}]},{"class":"cTableObject","name":"Sound","guid":[3493131070,3460776380,2414127771,1386876338],"parentGuid":[2272249561,3378007281,2688214392,3190071702],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"Sound"}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":310,"class":"sTableComponent","data":{"m_dataModel":{"m_rowNum":28,"m_columnNum":8,"m_tableData":[["Type","Int","Boolean","Int","String","String","Float","Boolean"],["","ID","IsLoop","Volume","FileName","Detail","Duration","CoverPlay"],["1","","","","","","",""],["2","","","","","","",""],["3","","","","","","",""],["4","","","","","","",""],["5","","","","","","",""],["6","","","","","","",""],["7","","","","","","",""],["8","","","","","","",""],["9","","","","","","",""],["10","","","","","","",""],["11","","","","","","",""],["12","","","","","","",""],["13","","","","","","",""],["14","","","","","","",""],["15","","","","","","",""],["16","","","","","","",""],["17","","","","","","",""],["18","","","","","","",""],["19","","","","","","",""],["20","","","","","","",""],["21","","","","","","",""],["22","","","","","","",""],["23","","","","","","",""],["24","","","","","","",""],["25","","","","","","",""],["26","","","","","","",""]]}}}]},{"class":"cTableObject","name":"UIAnimation","guid":[1097962876,3754445060,2192136032,4179300550],"parentGuid":[2272249561,3378007281,2688214392,3190071702],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"UIAnimation"}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":310,"class":"sTableComponent","data":{"m_dataModel":{"m_rowNum":9,"m_columnNum":14,"m_tableData":[["Type","String","Int","String","Boolean","Int","Vector2","Vector2","Vector2","Float","Vector2","Float","String","String"],["","AnimationName","Count","UINode","IsInit","KeyFrame","Size","AnchorsX","AnchorsY","Angle","Offset","Alpha","Tag","Type"],["1","TestAnimation","12","Local.GuiControl.BtnJump","TRUE","0","","","","90","0,-100","","",""],["2","TestAnimation","","Local.GuiControl.BtnJump","","1","","","","90","0,-100","","Tag1","Linear"],["3","TestAnimation","","Local.GuiControl.BtnJump","","10","","","","0.1","0,-1","","","Linear"],["4","TestAnimation","","Local.GuiControl.Joystick","TRUE","0","0,1","","","","","","",""],["5","TestAnimation","","Local.GuiControl.Joystick","","1","0,1","","","","","","","Linear"],["6","TestAnimation","","Local.GuiControl.Joystick","","10","350,350","","","","","","","Linear"],["7","TestAnimation","","Local.GuiControl.Joystick","","12","300,300","","","","","","","Linear"]]}}}]},{"class":"cTableObject","name":"Example01","guid":[1009384381,1318601170,2335100178,2096260731],"parentGuid":[2272249561,3378007281,2688214392,3190071702],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"Example01"}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":310,"class":"sTableComponent","data":{"m_dataModel":{"m_rowNum":6,"m_columnNum":4,"m_tableData":[["Type","String","String","Int"],["","level_id","level_name","reward"],["1","easy_01","Level 01","100"],["2","easy_02","Level 02","140"],["3","hard_01","Level 03","280"],["4","hard_02","Level 04","320"]]}}}]},{"class":"cTableObject","name":"Example02","guid":[519619536,3748807551,2763899961,330082025],"parentGuid":[2272249561,3378007281,2688214392,3190071702],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"Example02"}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":310,"class":"sTableComponent","data":{"m_dataModel":{"m_rowNum":6,"m_columnNum":4,"m_tableData":[["Type","String","String","Int"],["","enemy_id","difficulty","hp"],["1","foe_01","easy","100"],["2","foe_01","hard","150"],["3","foe_02","easy","300"],["4","foe_02","hard","400"]]}}}]},{"class":"cDataStoreObject","name":"DataStore","guid":[2710467589,909002119,2168690283,4082947604],"parentGuid":[344576033,1668630255,2683907297,2226597768],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"DataStore"}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":200,"class":"sDataStoreComponent","data":{"m_dataSheet":[],"m_archive":[]}}]},{"class":"cFolderObject","name":"S_Event","guid":[3388698598,504056136,2819280548,3600804874],"parentGuid":[1981988479,3555894,2597800867,69741929],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"S_Event"}},{"id":40000,"class":"sScriptHelperComponent","data":{}}]},{"class":"cCustomEventObject","name":"Example01CustomEvent","guid":[1849321353,1174686080,2581212444,423150465],"parentGuid":[3388698598,504056136,2819280548,3600804874],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"Example01CustomEvent"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":511,"class":"sCustomEventComponent","data":{}},{"id":10,"class":"sLuaComponent","data":{"m_luaContent":"--自定义事件脚本, 会监听由FireEventTo系列触发的与该脚本名一样的事件\r\n--参数(arg1, arg2, arg3 ...) : 为各个事件参数\r\n","m_scriptType":"kCustomFunction"}}]},{"class":"cCustomEventObject","name":"Example02CustomEvent","guid":[2464372298,3888661849,2219280214,4227873962],"parentGuid":[3388698598,504056136,2819280548,3600804874],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"Example02CustomEvent"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":511,"class":"sCustomEventComponent","data":{}},{"id":10,"class":"sLuaComponent","data":{"m_luaContent":"--自定义事件脚本, 会监听由FireEventTo系列触发的与该脚本名一样的事件\r\n--参数(arg1, arg2, arg3 ...) : 为各个事件参数\r\n","m_scriptType":"kCustomFunction"}}]},{"class":"cCustomEventObject","name":"Example03CustomEvent","guid":[3522954919,4107421185,2760879892,839023523],"parentGuid":[3388698598,504056136,2819280548,3600804874],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"Example03CustomEvent"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":511,"class":"sCustomEventComponent","data":{}},{"id":10,"class":"sLuaComponent","data":{"m_luaContent":"--自定义事件脚本, 会监听由FireEventTo系列触发的与该脚本名一样的事件\r\n--参数(arg1, arg2, arg3 ...) : 为各个事件参数\r\n","m_scriptType":"kCustomFunction"}}]},{"class":"cFolderObject","name":"S_Code","guid":[3588299831,2838581107,2638019367,1912244102],"parentGuid":[1981988479,3555894,2597800867,69741929],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"S_Code"}},{"id":40000,"class":"sScriptHelperComponent","data":{}}]},{"class":"cScriptObject","name":"ServerMain","guid":[3478165892,3968682922,3091200964,3154749412],"parentGuid":[3588299831,2838581107,2638019367,1912244102],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"ServerMain"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":10,"class":"sLuaComponent","data":{"m_luaContent":"--- 服务器代码入口\r\n-- @script Server Main Function\r\n-- @copyright Lilith Games, Avatar Team\r\n-- @author XXX, XXX\r\n\r\nGameMgr:Init()\r\n"}}]},{"class":"cFolderObject","name":"Test","guid":[1121972396,3387441651,2555498827,995696856],"parentGuid":[3588299831,2838581107,2638019367,1912244102],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"Test"}},{"id":40000,"class":"sScriptHelperComponent","data":{}}]},{"class":"cScriptObject","name":"TestServerMainScript","guid":[2047870622,3659025888,2164427045,478373359],"parentGuid":[1121972396,3387441651,2555498827,995696856],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"TestServerMainScript"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":10,"class":"sLuaComponent","data":{"m_luaContent":"--- TEST:框架服务端测试脚本(用后删)；\r\n-- @script Test Server Scirpt\r\n-- @copyright Lilith Games, Avatar Team\r\n-- @author Yuancheng Zhang\r\n\r\nwait(1)\r\ninvoke(\r\n    function()\r\n        NetUtil.Fire_S('Example01CustomEvent')\r\n    end\r\n)\r\n\r\nwait(1)\r\ninvoke(\r\n    function()\r\n        for _, p in pairs(world:FindPlayers()) do\r\n            NetUtil.Fire_C('ClientExample01Event', p, p.Name)\r\n            NetUtil.Fire_C('ClientExample02Event', p, 'TestAnimation')\r\n        end\r\n    end\r\n)\r\n\r\nwait(1)\r\ninvoke(\r\n    function()\r\n        NetUtil.Fire_S('Example02CustomEvent')\r\n    end\r\n)\r\n\r\nwait(1)\r\ninvoke(\r\n    function()\r\n        NetUtil.Fire_S('Example03CustomEvent')\r\n    end\r\n)\r\n"}}]},{"class":"cScriptObject","name":"TestTimeMgrScript","guid":[2274526775,1538082644,2178394526,1746432296],"parentGuid":[1121972396,3387441651,2555498827,995696856],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"TestTimeMgrScript"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":10,"class":"sLuaComponent","data":{"m_luaContent":"--- TEST:时间管理器测试脚本(用后删)\r\n-- @module Test Time Manager\r\n-- @copyright Lilith Games, Avatar Team\r\n-- @author Bingyun Chen, Yuancheng Zhang\r\n\r\nTimeMgr.Init()\r\n\r\nfunction Test01(_param)\r\n    test('Test01: ', _param)\r\nend\r\n\r\nfunction Test02(_param)\r\n    test('Test02: ', _param)\r\nend\r\n\r\nfunction Test03(a, b, c)\r\n    test('Test03: ', a, b, c)\r\nend\r\n\r\n-- 第2秒打印 Test01\r\nTimeMgr.SetTimeout(\r\n    function()\r\n        Test01(1)\r\n    end,\r\n    2\r\n)\r\n\r\n-- 每2秒打印 Test02\r\nTimeMgr.SetInterval(\r\n    function()\r\n        Test02(2)\r\n    end,\r\n    2\r\n)\r\n\r\n-- 每3秒打印 Test03\r\nlocal timerId =\r\n    TimeMgr.SetInterval(\r\n    function()\r\n        Test03(12, 23, 34)\r\n    end,\r\n    3\r\n)\r\n\r\ntest('timerId = ', timerId)\r\n\r\n-- 10秒后取消循环打印 Test03\r\nwait(10)\r\nTimeMgr.ClearInterval(timerId)\r\n"}}]},{"class":"cScriptObject","name":"TestUuidScript","guid":[368416891,4081337539,2747298938,74001986],"parentGuid":[1121972396,3387441651,2555498827,995696856],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"TestUuidScript"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":10,"class":"sLuaComponent","data":{"m_luaContent":"--- TEST:测试UUID(用后删)\r\n-- @module Test Time Manager\r\n-- @copyright Lilith Games, Avatar Team\r\n-- @author Sharif Ma\r\n\r\nfor i = 1, 100 do\r\n    test('here is new UUID: ', UUID())\r\nend\r\n"}}]},{"class":"cScriptObject","name":"TestLinkedListScript","guid":[330541558,674188470,2346921062,4021525952],"parentGuid":[1121972396,3387441651,2555498827,995696856],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"TestLinkedListScript"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":10,"class":"sLuaComponent","data":{"m_luaContent":"--- C# 双向链表-测试脚本\r\n-- @script Test: C# doubly linked list implemented with lua\r\n-- @copyright Lilith Games, Avatar Team\r\n-- @author Bruce Chen\r\n-- @see https://wiki.lilithgames.com/x/7yRZAg\r\n-- @see https://github.com/BruceCheng1995/LuaLinkedList\r\n\r\nlocal linkedList = require(LinkedList).list\r\nlocal LinkedNode = require(LinkedList).node\r\n\r\n--linkedList:EnableLog(true)\r\n\r\ntest('--------------initiulize-----------------')\r\nlocal test1 = linkedList({1, 2, 3, nil, 'vale1', 'vale2'})\r\ntest(test1, 'lenth: ', test1:Len())\r\n\r\ntest('--------------add value-----------------')\r\ntest1:Add('addValue')\r\ntest(test1, 'lenth: ', test1:Len())\r\ntest1:Add({'addtable', 6, 7})\r\ntest(test1, 'lenth: ', test1:Len())\r\ntest1:AddFirst('first')\r\ntest(test1, 'lenth: ', test1:Len())\r\ntest1:AddLast('last')\r\ntest(test1, 'lenth: ', test1:Len())\r\ntest('--------------add node-----------------')\r\nlocal test2 = linkedList({1, 2, 3})\r\nlocal node1 = LinkedNode('head')\r\nlocal node2 = LinkedNode('node1')\r\nlocal node3 = LinkedNode('node2')\r\nlocal node4 = LinkedNode('rail')\r\ntest2:AddNodeFirst(node1)\r\ntest2:AddNodeLast(node4)\r\ntest(test2, 'lenth: ', test2:Len())\r\ntest2:AddNodeAfter(node1, node2)\r\ntest2:AddNodeBefore(node4, node3)\r\ntest(test2, 'lenth: ', test2:Len())\r\ntest('--------------remove-----------------')\r\nlocal test3 = linkedList({'head', 2, 3, 4, 5, 6, 7, 'last'})\r\ntest3:Remove(3)\r\ntest(test3, 'lenth: ', test3:Len())\r\nlocal val1 = test3:GetNode(4)\r\ntest(val1, test3:GetNode(7))\r\ntest(test3, 'lenth: ', test3:Len())\r\ntest3:RemoveNode(val1)\r\ntest(test3, 'lenth: ', test3:Len())\r\ntest3:RemoveFirst()\r\ntest(test3, 'lenth: ', test3:Len())\r\ntest3:RemoveLast()\r\ntest(test3, 'lenth: ', test3:Len())\r\ntest('--------------other-----------------')\r\nlocal test4 = linkedList({1, 2, 3, 4, 5, 6, 6, 7})\r\ntest(test4:Find(5))\r\ntest(test4:Find(20))\r\ntest(test4:FindLast(6).Prev)\r\ntest(test4, 'lenth: ', test4:Len())\r\ntest4:Clear()\r\ntest(test4, 'lenth: ', test4:Len())\r\ntest('--------------other-----------------')\r\nlocal test5 = linkedList({1, 2, 3, 4, 5})\r\nlocal tab = {'head', 'tail'}\r\ntest(table.unpack(tab))\r\ntest5:CopyTo(tab, 2)\r\ntest(table.unpack(tab))\r\nlocal copy = test5:ToTable()\r\ntest(copy, #copy)\r\ntest(table.unpack(copy))\r\nlocal clone = test5:Clone()\r\ntest(test5, 'lenth: ', test5:Len())\r\ntest(test5:Contains(5), test5:Contains(8))\r\ntest5:Reverse()\r\ntest(test5, 'lenth: ', test5:Len())\r\nlocal index = 1\r\nfor item in test5:ipairer() do\r\n    test('key: ' .. index .. ': ', 'value: ' .. tostring(item))\r\n    index = index + 1\r\nend\r\n"}}]},{"class":"cPrimitiveObject","name":"BaseFloor","guid":[4211227124,399589691,2212667733,3335218667],"parentGuid":[1981988479,3555894,2597800867,69741929],"components":[{"id":0,"class":"sRegularTransform","data":{"m_localPosition":[0.0,-0.20000000298023225,0.0]}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"BaseFloor"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":10,"class":"sBasicShapeComponent","data":{"m_size":[50.0,0.20000000298023225,50.0]}},{"id":12,"class":"sRigidBodyComponent","data":{"m_density":2400.0,"m_frictionRate":0.4000000059604645,"m_rough":0.44999998807907107,"m_restitution":0.44999998807907107,"m_statusFlag":10}},{"id":13,"class":"sMaterialComponent","data":{"m_uvScale":3.0,"m_materialType":"kSubwayTiles"}},{"id":30,"class":"sRenderComponent","data":{}},{"id":3,"class":"sSizeComponent","data":{}},{"id":666,"class":"sStateSyncComponent","data":{}}]},{"class":"cFolderObject","name":"SpawnLocations","guid":[1803916521,3674621259,2355104850,441818688],"parentGuid":[1981988479,3555894,2597800867,69741929],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"SpawnLocations"}},{"id":40000,"class":"sScriptHelperComponent","data":{}}]},{"class":"cStartPortal","name":"StartPortal00","guid":[362184257,1300644271,2169624314,2670603163],"parentGuid":[1803916521,3674621259,2355104850,441818688],"components":[{"id":0,"class":"sRegularTransform","data":{"m_localPosition":[10.0,0.5,-10.0],"m_localRotation":[0.0,-0.3826834559440613,-0.0,0.9238795042037964]}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"StartPortal00"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":10,"class":"sStartPortalComponent","data":{}}]},{"class":"cStartPortal","name":"StartPortal01","guid":[651144420,800934336,3039799213,1377036607],"parentGuid":[1803916521,3674621259,2355104850,441818688],"components":[{"id":0,"class":"sRegularTransform","data":{"m_localPosition":[10.0,0.5,10.0],"m_localRotation":[0.0,0.9238795638084412,0.0,-0.3826834559440613]}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"StartPortal01"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":10,"class":"sStartPortalComponent","data":{}}]},{"class":"cStartPortal","name":"StartPortal02","guid":[4009425966,1206468687,2439525561,4287493119],"parentGuid":[1803916521,3674621259,2355104850,441818688],"components":[{"id":0,"class":"sRegularTransform","data":{"m_localPosition":[-10.0,0.5,-10.0],"m_localRotation":[0.0,0.3826834559440613,0.0,0.9238795042037964]}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"StartPortal02"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":10,"class":"sStartPortalComponent","data":{}}]},{"class":"cStartPortal","name":"StartPortal03","guid":[3415283602,2930724749,3175953031,3420113780],"parentGuid":[1803916521,3674621259,2355104850,441818688],"components":[{"id":0,"class":"sRegularTransform","data":{"m_localPosition":[-10.0,0.5,10.0],"m_localRotation":[0.0,0.9238795638084412,0.0,0.3826834559440613]}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"StartPortal03"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":10,"class":"sStartPortalComponent","data":{}}]},{"class":"cAudioSource","name":"BGM","guid":[1596674502,2319271992,2900844459,2801180766],"parentGuid":[1981988479,3555894,2597800867,69741929],"components":[{"id":0,"class":"sRegularTransform","data":{"m_localPosition":[1.1754943508222876e-38,1.1754943508222876e-38,1.1754943508222876e-38]}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"BGM"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":10,"class":"sAudioSourceComponent","data":{"m_soundtype":"k2D"}}]},{"class":"cSkydome","name":"Sky","guid":[3956874685,1991789763,3220541584,1456680764],"parentGuid":[1981988479,3555894,2597800867,69741929],"components":[{"id":0,"class":"sRegularTransform","data":{"m_localPosition":[1.1754943508222876e-38,1.1754943508222876e-38,1.1754943508222876e-38]}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"Sky"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":10,"class":"sSkydomeComponent","data":{"m_ambient":[0.501960813999176,0.501960813999176,0.501960813999176,1.0],"m_latitude":45.0}},{"id":11,"class":"sDateTimeComponent","data":{}},{"id":12,"class":"sFogComponent","data":{}}]},{"class":"cFolderObject","name":"Players","guid":[3397398191,850542637,3138524115,1333674022],"parentGuid":[1981988479,3555894,2597800867,69741929],"components":[{"id":0,"class":"sIdentityTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"Players"}},{"id":40000,"class":"sScriptHelperComponent","data":{}}]},{"class":"cPlayerInstanceSlot","name":"PlayerInstanceSlot","guid":[718760084,1257915969,2962466066,2150526306],"parentGuid":[3397398191,850542637,3138524115,1333674022],"components":[{"id":0,"class":"sRegularTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"PlayerInstanceSlot"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":10,"class":"sPlayerInstanceSlotComponent","data":{"m_archetype":[2229867806,259017539,2476631306,1972820229]}}]},{"class":"cPlayerInstanceSlot","name":"PlayerInstanceSlot","guid":[438081159,4019275113,2394302102,997050187],"parentGuid":[3397398191,850542637,3138524115,1333674022],"components":[{"id":0,"class":"sRegularTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"PlayerInstanceSlot"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":10,"class":"sPlayerInstanceSlotComponent","data":{"m_archetype":[2229867806,259017539,2476631306,1972820229]}}]},{"class":"cPlayerInstanceSlot","name":"PlayerInstanceSlot","guid":[154289415,229392516,2254790969,287930189],"parentGuid":[3397398191,850542637,3138524115,1333674022],"components":[{"id":0,"class":"sRegularTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"PlayerInstanceSlot"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":10,"class":"sPlayerInstanceSlotComponent","data":{"m_archetype":[2229867806,259017539,2476631306,1972820229]}}]},{"class":"cTerrainObject","name":"Terrain","guid":[2381081137,2979483093,3156488065,1492146101],"parentGuid":[1981988479,3555894,2597800867,69741929],"components":[{"id":0,"class":"sRegularTransform","data":{}},{"id":2,"class":"sObjectDataComponent","data":{"m_name":"Terrain"}},{"id":19,"class":"sNetworkComponent","data":{}},{"id":40000,"class":"sScriptHelperComponent","data":{}},{"id":610,"class":"sTerrainComponent","data":{"m_memWaterStreamBuffer":[{"m_guid":[0,0,0,0],"m_revision":-1,"m_type":"kGeneric","m_autoGenerated":false},{"m_guid":[0,0,0,0],"m_revision":-1,"m_type":"kGeneric","m_autoGenerated":false}],"m_emptyPlaceholder":true}},{"id":13,"class":"sRenderComponent","data":{}},{"id":15,"class":"sRigidBodyComponent","data":{"m_frictionRate":0.44999998807907107,"m_rough":0.4000000059604645,"m_restitution":0.30000001192092898,"m_statusFlag":10}}]}]}]}